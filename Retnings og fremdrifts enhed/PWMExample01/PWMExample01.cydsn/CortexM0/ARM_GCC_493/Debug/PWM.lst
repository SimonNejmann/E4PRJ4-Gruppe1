ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_initVar
  18              		.bss
  19              		.type	PWM_initVar, %object
  20              		.size	PWM_initVar, 1
  21              	PWM_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_Init,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_Init, %function
  29              	PWM_Init:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\PWM.c"
   1:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:.\Generated_Source\PSoC4/PWM.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/PWM.c **** *
   5:.\Generated_Source\PSoC4/PWM.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM.c **** *  This file provides the source code to the API for the PWM
   7:.\Generated_Source\PSoC4/PWM.c **** *  component
   8:.\Generated_Source\PSoC4/PWM.c **** *
   9:.\Generated_Source\PSoC4/PWM.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM.c **** *  None
  11:.\Generated_Source\PSoC4/PWM.c **** *
  12:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM.c **** 
  19:.\Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  20:.\Generated_Source\PSoC4/PWM.c **** 
  21:.\Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  22:.\Generated_Source\PSoC4/PWM.c **** 
  23:.\Generated_Source\PSoC4/PWM.c **** 
  24:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  26:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 2


  27:.\Generated_Source\PSoC4/PWM.c **** *
  28:.\Generated_Source\PSoC4/PWM.c **** * Summary:
  29:.\Generated_Source\PSoC4/PWM.c **** *  Initialize/Restore default PWM configuration.
  30:.\Generated_Source\PSoC4/PWM.c **** *
  31:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
  32:.\Generated_Source\PSoC4/PWM.c **** *  None
  33:.\Generated_Source\PSoC4/PWM.c **** *
  34:.\Generated_Source\PSoC4/PWM.c **** * Return:
  35:.\Generated_Source\PSoC4/PWM.c **** *  None
  36:.\Generated_Source\PSoC4/PWM.c **** *
  37:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/PWM.c **** void PWM_Init(void)
  39:.\Generated_Source\PSoC4/PWM.c **** {
  32              		.loc 1 39 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40:.\Generated_Source\PSoC4/PWM.c **** 
  41:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  43:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/PWM.c ****         
  45:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/PWM.c **** 
  48:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/PWM.c ****         
  51:.\Generated_Source\PSoC4/PWM.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetCounterMode(PWM_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  56:.\Generated_Source\PSoC4/PWM.c **** 
  57:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
  58:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/PWM.c ****         
  60:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/PWM.c ****     
  63:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/PWM.c ****         
  66:.\Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/PWM.c **** 
  69:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__COMPARE == PWM_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/PWM.c **** 
  72:.\Generated_Source\PSoC4/PWM.c ****             #if (1u == PWM_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/PWM.c ****                 PWM_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCompareBuf(PWM_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (1u == PWM_TC_COMPARE_SWAP) */
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 3


  76:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COMPARE == PWM_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/PWM.c **** 
  78:.\Generated_Source\PSoC4/PWM.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/PWM.c ****         #elif(PWM__COUNT_DOWN == PWM_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/PWM.c ****         #else
  84:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
  86:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
  87:.\Generated_Source\PSoC4/PWM.c **** 
  88:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  89:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_PWM_BASE_CONFIG;
  40              		.loc 1 89 0
  41 0004 124B     		ldr	r3, .L2
  42 0006 8022     		mov	r2, #128
  43 0008 D204     		lsl	r2, r2, #19
  44 000a 1A60     		str	r2, [r3]
  90:.\Generated_Source\PSoC4/PWM.c **** 
  91:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
  92:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/PWM.c ****         #else
  95:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_ALIGN | PWM_CTRL_PWM_KILL_EVENT;
  45              		.loc 1 95 0
  46 000c 104B     		ldr	r3, .L2
  47 000e 104A     		ldr	r2, .L2
  48 0010 1268     		ldr	r2, [r2]
  49 0012 8021     		mov	r1, #128
  50 0014 8902     		lsl	r1, r1, #10
  51 0016 0A43     		orr	r2, r1
  52 0018 1A60     		str	r2, [r3]
  96:.\Generated_Source\PSoC4/PWM.c ****             
  97:.\Generated_Source\PSoC4/PWM.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/PWM.c ****             #elif (PWM__RIGHT == PWM_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(PWM_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/PWM.c ****             #else 
 103:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(0u);
  53              		.loc 1 103 0
  54 001a 0020     		mov	r0, #0
  55 001c FFF7FEFF 		bl	PWM_WriteCounter
 104:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
 105:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 106:.\Generated_Source\PSoC4/PWM.c **** 
 107:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_DT == PWM_PWM_MODE)
 108:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_DT == PWM_PWM_MODE) */
 110:.\Generated_Source\PSoC4/PWM.c **** 
 111:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM == PWM_PWM_MODE)
 112:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_PRESCALER;
  56              		.loc 1 112 0
  57 0020 0B4B     		ldr	r3, .L2
  58 0022 0B4A     		ldr	r2, .L2
  59 0024 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 4


  60 0026 1A60     		str	r2, [r3]
 113:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
 114:.\Generated_Source\PSoC4/PWM.c **** 
 115:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_PWM_SIGNALS_MODES;
  61              		.loc 1 116 0
  62 0028 0A4B     		ldr	r3, .L2+4
  63 002a 0C22     		mov	r2, #12
  64 002c 1A60     		str	r2, [r3]
 117:.\Generated_Source\PSoC4/PWM.c ****     
 118:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
  65              		.loc 1 119 0
  66 002e 0120     		mov	r0, #1
  67 0030 FFF7FEFF 		bl	PWM_SetInterruptMode
 120:.\Generated_Source\PSoC4/PWM.c **** 
 121:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
 123:.\Generated_Source\PSoC4/PWM.c ****             PWM_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/PWM.c ****                     (PWM_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/PWM.c ****                     PWM_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/PWM.c ****                     PWM_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/PWM.c ****         #else
 128:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__LEFT == PWM_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/PWM.c **** 
 132:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__RIGHT == PWM_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/PWM.c **** 
 136:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__CENTER == PWM_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_CENTER;
  68              		.loc 1 137 0
  69 0034 084B     		ldr	r3, .L2+8
  70 0036 1E22     		mov	r2, #30
  71 0038 1A60     		str	r2, [r3]
 138:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_CENTER == PWM_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/PWM.c **** 
 140:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__ASYMMETRIC == PWM_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM__ASYMMETRIC == PWM_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 144:.\Generated_Source\PSoC4/PWM.c **** 
 145:.\Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
  72              		.loc 1 146 0
  73 003a 9623     		mov	r3, #150
  74 003c 5B01     		lsl	r3, r3, #5
  75 003e 181C     		mov	r0, r3
  76 0040 FFF7FEFF 		bl	PWM_WritePeriod
 147:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
  77              		.loc 1 147 0
  78 0044 054B     		ldr	r3, .L2+12
  79 0046 181C     		mov	r0, r3
  80 0048 FFF7FEFF 		bl	PWM_WriteCompare
 148:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 5


 149:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompareBuf(PWM_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/PWM.c **** 
 154:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/PWM.c ****             PWM_WritePeriodBuf(PWM_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 159:.\Generated_Source\PSoC4/PWM.c ****     
 160:.\Generated_Source\PSoC4/PWM.c **** }
  81              		.loc 1 160 0
  82 004c BD46     		mov	sp, r7
  83              		@ sp needed
  84 004e 80BD     		pop	{r7, pc}
  85              	.L3:
  86              		.align	2
  87              	.L2:
  88 0050 00010540 		.word	1074069760
  89 0054 24010540 		.word	1074069796
  90 0058 28010540 		.word	1074069800
  91 005c 58110000 		.word	4440
  92              		.cfi_endproc
  93              	.LFE0:
  94              		.size	PWM_Init, .-PWM_Init
  95              		.section	.text.PWM_Enable,"ax",%progbits
  96              		.align	2
  97              		.global	PWM_Enable
  98              		.code	16
  99              		.thumb_func
 100              		.type	PWM_Enable, %function
 101              	PWM_Enable:
 102              	.LFB1:
 161:.\Generated_Source\PSoC4/PWM.c **** 
 162:.\Generated_Source\PSoC4/PWM.c **** 
 163:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 165:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/PWM.c **** *
 167:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 168:.\Generated_Source\PSoC4/PWM.c **** *  Enables the PWM.
 169:.\Generated_Source\PSoC4/PWM.c **** *
 170:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 171:.\Generated_Source\PSoC4/PWM.c **** *  None
 172:.\Generated_Source\PSoC4/PWM.c **** *
 173:.\Generated_Source\PSoC4/PWM.c **** * Return:
 174:.\Generated_Source\PSoC4/PWM.c **** *  None
 175:.\Generated_Source\PSoC4/PWM.c **** *
 176:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void)
 178:.\Generated_Source\PSoC4/PWM.c **** {
 103              		.loc 1 178 0
 104              		.cfi_startproc
 105 0000 90B5     		push	{r4, r7, lr}
 106              		.cfi_def_cfa_offset 12
 107              		.cfi_offset 4, -12
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 6


 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 83B0     		sub	sp, sp, #12
 111              		.cfi_def_cfa_offset 24
 112 0004 00AF     		add	r7, sp, #0
 113              		.cfi_def_cfa_register 7
 179:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/PWM.c **** 
 181:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 114              		.loc 1 181 0
 115 0006 FC1D     		add	r4, r7, #7
 116 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 117 000c 031C     		mov	r3, r0
 118 000e 2370     		strb	r3, [r4]
 182:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 119              		.loc 1 182 0
 120 0010 084B     		ldr	r3, .L5
 121 0012 084A     		ldr	r2, .L5
 122 0014 1268     		ldr	r2, [r2]
 123 0016 0121     		mov	r1, #1
 124 0018 0A43     		orr	r2, r1
 125 001a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 126              		.loc 1 183 0
 127 001c FB1D     		add	r3, r7, #7
 128 001e 1B78     		ldrb	r3, [r3]
 129 0020 181C     		mov	r0, r3
 130 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:.\Generated_Source\PSoC4/PWM.c **** 
 185:.\Generated_Source\PSoC4/PWM.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 187:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 131              		.loc 1 188 0
 132 0026 0120     		mov	r0, #1
 133 0028 1821     		mov	r1, #24
 134 002a FFF7FEFF 		bl	PWM_TriggerCommand
 189:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__PWM_SEL == PWM_CONFIG) */
 191:.\Generated_Source\PSoC4/PWM.c **** 
 192:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 193:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 195:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__TIMER == PWM_CONFIG) */
 197:.\Generated_Source\PSoC4/PWM.c ****     
 198:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
 199:.\Generated_Source\PSoC4/PWM.c ****         #if (0u != PWM_QUAD_AUTO_START)
 200:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_RELOAD);
 201:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u != PWM_QUAD_AUTO_START) */
 202:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
 203:.\Generated_Source\PSoC4/PWM.c **** }
 135              		.loc 1 203 0
 136 002e BD46     		mov	sp, r7
 137 0030 03B0     		add	sp, sp, #12
 138              		@ sp needed
 139 0032 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 7


 140              	.L6:
 141              		.align	2
 142              	.L5:
 143 0034 00000540 		.word	1074069504
 144              		.cfi_endproc
 145              	.LFE1:
 146              		.size	PWM_Enable, .-PWM_Enable
 147              		.section	.text.PWM_Start,"ax",%progbits
 148              		.align	2
 149              		.global	PWM_Start
 150              		.code	16
 151              		.thumb_func
 152              		.type	PWM_Start, %function
 153              	PWM_Start:
 154              	.LFB2:
 204:.\Generated_Source\PSoC4/PWM.c **** 
 205:.\Generated_Source\PSoC4/PWM.c **** 
 206:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 207:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
 208:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 209:.\Generated_Source\PSoC4/PWM.c **** *
 210:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 211:.\Generated_Source\PSoC4/PWM.c **** *  Initializes the PWM with default customizer
 212:.\Generated_Source\PSoC4/PWM.c **** *  values when called the first time and enables the PWM.
 213:.\Generated_Source\PSoC4/PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:.\Generated_Source\PSoC4/PWM.c **** *  just enabled.
 215:.\Generated_Source\PSoC4/PWM.c **** *
 216:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 217:.\Generated_Source\PSoC4/PWM.c **** *  None
 218:.\Generated_Source\PSoC4/PWM.c **** *
 219:.\Generated_Source\PSoC4/PWM.c **** * Return:
 220:.\Generated_Source\PSoC4/PWM.c **** *  None
 221:.\Generated_Source\PSoC4/PWM.c **** *
 222:.\Generated_Source\PSoC4/PWM.c **** * Global variables:
 223:.\Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: global variable is used to indicate initial
 224:.\Generated_Source\PSoC4/PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:.\Generated_Source\PSoC4/PWM.c **** *  to 1 the first time PWM_Start() is called. This allows
 226:.\Generated_Source\PSoC4/PWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:.\Generated_Source\PSoC4/PWM.c **** *  calls to the PWM_Start() routine.
 228:.\Generated_Source\PSoC4/PWM.c **** *
 229:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 230:.\Generated_Source\PSoC4/PWM.c **** void PWM_Start(void)
 231:.\Generated_Source\PSoC4/PWM.c **** {
 155              		.loc 1 231 0
 156              		.cfi_startproc
 157 0000 80B5     		push	{r7, lr}
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 00AF     		add	r7, sp, #0
 162              		.cfi_def_cfa_register 7
 232:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 163              		.loc 1 232 0
 164 0004 064B     		ldr	r3, .L9
 165 0006 1B78     		ldrb	r3, [r3]
 166 0008 002B     		cmp	r3, #0
 167 000a 04D1     		bne	.L8
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 8


 233:.\Generated_Source\PSoC4/PWM.c ****     {
 234:.\Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 168              		.loc 1 234 0
 169 000c FFF7FEFF 		bl	PWM_Init
 235:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 170              		.loc 1 235 0
 171 0010 034B     		ldr	r3, .L9
 172 0012 0122     		mov	r2, #1
 173 0014 1A70     		strb	r2, [r3]
 174              	.L8:
 236:.\Generated_Source\PSoC4/PWM.c ****     }
 237:.\Generated_Source\PSoC4/PWM.c **** 
 238:.\Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 175              		.loc 1 238 0
 176 0016 FFF7FEFF 		bl	PWM_Enable
 239:.\Generated_Source\PSoC4/PWM.c **** }
 177              		.loc 1 239 0
 178 001a BD46     		mov	sp, r7
 179              		@ sp needed
 180 001c 80BD     		pop	{r7, pc}
 181              	.L10:
 182 001e C046     		.align	2
 183              	.L9:
 184 0020 00000000 		.word	PWM_initVar
 185              		.cfi_endproc
 186              	.LFE2:
 187              		.size	PWM_Start, .-PWM_Start
 188              		.section	.text.PWM_Stop,"ax",%progbits
 189              		.align	2
 190              		.global	PWM_Stop
 191              		.code	16
 192              		.thumb_func
 193              		.type	PWM_Stop, %function
 194              	PWM_Stop:
 195              	.LFB3:
 240:.\Generated_Source\PSoC4/PWM.c **** 
 241:.\Generated_Source\PSoC4/PWM.c **** 
 242:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 243:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 244:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 245:.\Generated_Source\PSoC4/PWM.c **** *
 246:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 247:.\Generated_Source\PSoC4/PWM.c **** *  Disables the PWM.
 248:.\Generated_Source\PSoC4/PWM.c **** *
 249:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 250:.\Generated_Source\PSoC4/PWM.c **** *  None
 251:.\Generated_Source\PSoC4/PWM.c **** *
 252:.\Generated_Source\PSoC4/PWM.c **** * Return:
 253:.\Generated_Source\PSoC4/PWM.c **** *  None
 254:.\Generated_Source\PSoC4/PWM.c **** *
 255:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 256:.\Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void)
 257:.\Generated_Source\PSoC4/PWM.c **** {
 196              		.loc 1 257 0
 197              		.cfi_startproc
 198 0000 90B5     		push	{r4, r7, lr}
 199              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 9


 200              		.cfi_offset 4, -12
 201              		.cfi_offset 7, -8
 202              		.cfi_offset 14, -4
 203 0002 83B0     		sub	sp, sp, #12
 204              		.cfi_def_cfa_offset 24
 205 0004 00AF     		add	r7, sp, #0
 206              		.cfi_def_cfa_register 7
 258:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 259:.\Generated_Source\PSoC4/PWM.c **** 
 260:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 207              		.loc 1 260 0
 208 0006 FC1D     		add	r4, r7, #7
 209 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 210 000c 031C     		mov	r3, r0
 211 000e 2370     		strb	r3, [r4]
 261:.\Generated_Source\PSoC4/PWM.c **** 
 262:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
 212              		.loc 1 262 0
 213 0010 064B     		ldr	r3, .L12
 214 0012 064A     		ldr	r2, .L12
 215 0014 1268     		ldr	r2, [r2]
 216 0016 0121     		mov	r1, #1
 217 0018 8A43     		bic	r2, r1
 218 001a 1A60     		str	r2, [r3]
 263:.\Generated_Source\PSoC4/PWM.c **** 
 264:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 219              		.loc 1 264 0
 220 001c FB1D     		add	r3, r7, #7
 221 001e 1B78     		ldrb	r3, [r3]
 222 0020 181C     		mov	r0, r3
 223 0022 FFF7FEFF 		bl	CyExitCriticalSection
 265:.\Generated_Source\PSoC4/PWM.c **** }
 224              		.loc 1 265 0
 225 0026 BD46     		mov	sp, r7
 226 0028 03B0     		add	sp, sp, #12
 227              		@ sp needed
 228 002a 90BD     		pop	{r4, r7, pc}
 229              	.L13:
 230              		.align	2
 231              	.L12:
 232 002c 00000540 		.word	1074069504
 233              		.cfi_endproc
 234              	.LFE3:
 235              		.size	PWM_Stop, .-PWM_Stop
 236              		.section	.text.PWM_SetMode,"ax",%progbits
 237              		.align	2
 238              		.global	PWM_SetMode
 239              		.code	16
 240              		.thumb_func
 241              		.type	PWM_SetMode, %function
 242              	PWM_SetMode:
 243              	.LFB4:
 266:.\Generated_Source\PSoC4/PWM.c **** 
 267:.\Generated_Source\PSoC4/PWM.c **** 
 268:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 269:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetMode
 270:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 10


 271:.\Generated_Source\PSoC4/PWM.c **** *
 272:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 273:.\Generated_Source\PSoC4/PWM.c **** *  Sets the operation mode of the PWM. This function is used when
 274:.\Generated_Source\PSoC4/PWM.c **** *  configured as a generic PWM and the actual mode of operation is
 275:.\Generated_Source\PSoC4/PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:.\Generated_Source\PSoC4/PWM.c **** *
 277:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 278:.\Generated_Source\PSoC4/PWM.c **** *  mode: Mode for the PWM to operate in
 279:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 280:.\Generated_Source\PSoC4/PWM.c **** *   - PWM_MODE_TIMER_COMPARE - Timer / Counter with
 281:.\Generated_Source\PSoC4/PWM.c **** *                                                 compare capability
 282:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 283:.\Generated_Source\PSoC4/PWM.c **** *                                                 capture capability
 284:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_QUAD - Quadrature decoder
 285:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM - PWM
 286:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_DT - PWM with dead time
 287:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_PR - PWM with pseudo random capability
 288:.\Generated_Source\PSoC4/PWM.c **** *
 289:.\Generated_Source\PSoC4/PWM.c **** * Return:
 290:.\Generated_Source\PSoC4/PWM.c **** *  None
 291:.\Generated_Source\PSoC4/PWM.c **** *
 292:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 293:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetMode(uint32 mode)
 294:.\Generated_Source\PSoC4/PWM.c **** {
 244              		.loc 1 294 0
 245              		.cfi_startproc
 246 0000 90B5     		push	{r4, r7, lr}
 247              		.cfi_def_cfa_offset 12
 248              		.cfi_offset 4, -12
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 251 0002 85B0     		sub	sp, sp, #20
 252              		.cfi_def_cfa_offset 32
 253 0004 00AF     		add	r7, sp, #0
 254              		.cfi_def_cfa_register 7
 255 0006 7860     		str	r0, [r7, #4]
 295:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 296:.\Generated_Source\PSoC4/PWM.c **** 
 297:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 256              		.loc 1 297 0
 257 0008 0F23     		mov	r3, #15
 258 000a FC18     		add	r4, r7, r3
 259 000c FFF7FEFF 		bl	CyEnterCriticalSection
 260 0010 031C     		mov	r3, r0
 261 0012 2370     		strb	r3, [r4]
 298:.\Generated_Source\PSoC4/PWM.c **** 
 299:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
 262              		.loc 1 299 0
 263 0014 0A4B     		ldr	r3, .L15
 264 0016 0A4A     		ldr	r2, .L15
 265 0018 1268     		ldr	r2, [r2]
 266 001a 0A49     		ldr	r1, .L15+4
 267 001c 0A40     		and	r2, r1
 268 001e 1A60     		str	r2, [r3]
 300:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 269              		.loc 1 300 0
 270 0020 074B     		ldr	r3, .L15
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 11


 271 0022 074A     		ldr	r2, .L15
 272 0024 1168     		ldr	r1, [r2]
 273 0026 7A68     		ldr	r2, [r7, #4]
 274 0028 0A43     		orr	r2, r1
 275 002a 1A60     		str	r2, [r3]
 301:.\Generated_Source\PSoC4/PWM.c **** 
 302:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 276              		.loc 1 302 0
 277 002c 0F23     		mov	r3, #15
 278 002e FB18     		add	r3, r7, r3
 279 0030 1B78     		ldrb	r3, [r3]
 280 0032 181C     		mov	r0, r3
 281 0034 FFF7FEFF 		bl	CyExitCriticalSection
 303:.\Generated_Source\PSoC4/PWM.c **** }
 282              		.loc 1 303 0
 283 0038 BD46     		mov	sp, r7
 284 003a 05B0     		add	sp, sp, #20
 285              		@ sp needed
 286 003c 90BD     		pop	{r4, r7, pc}
 287              	.L16:
 288 003e C046     		.align	2
 289              	.L15:
 290 0040 00010540 		.word	1074069760
 291 0044 FFFFFFF8 		.word	-117440513
 292              		.cfi_endproc
 293              	.LFE4:
 294              		.size	PWM_SetMode, .-PWM_SetMode
 295              		.section	.text.PWM_SetQDMode,"ax",%progbits
 296              		.align	2
 297              		.global	PWM_SetQDMode
 298              		.code	16
 299              		.thumb_func
 300              		.type	PWM_SetQDMode, %function
 301              	PWM_SetQDMode:
 302              	.LFB5:
 304:.\Generated_Source\PSoC4/PWM.c **** 
 305:.\Generated_Source\PSoC4/PWM.c **** 
 306:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 307:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetQDMode
 308:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 309:.\Generated_Source\PSoC4/PWM.c **** *
 310:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 311:.\Generated_Source\PSoC4/PWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:.\Generated_Source\PSoC4/PWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:.\Generated_Source\PSoC4/PWM.c **** *
 314:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 315:.\Generated_Source\PSoC4/PWM.c **** *  qdMode: Quadrature Decoder mode
 316:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 317:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X1 - Counts on phi 1 rising
 318:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 320:.\Generated_Source\PSoC4/PWM.c **** *                                        (4x faster)
 321:.\Generated_Source\PSoC4/PWM.c **** *
 322:.\Generated_Source\PSoC4/PWM.c **** * Return:
 323:.\Generated_Source\PSoC4/PWM.c **** *  None
 324:.\Generated_Source\PSoC4/PWM.c **** *
 325:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 12


 326:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetQDMode(uint32 qdMode)
 327:.\Generated_Source\PSoC4/PWM.c **** {
 303              		.loc 1 327 0
 304              		.cfi_startproc
 305 0000 90B5     		push	{r4, r7, lr}
 306              		.cfi_def_cfa_offset 12
 307              		.cfi_offset 4, -12
 308              		.cfi_offset 7, -8
 309              		.cfi_offset 14, -4
 310 0002 85B0     		sub	sp, sp, #20
 311              		.cfi_def_cfa_offset 32
 312 0004 00AF     		add	r7, sp, #0
 313              		.cfi_def_cfa_register 7
 314 0006 7860     		str	r0, [r7, #4]
 328:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 329:.\Generated_Source\PSoC4/PWM.c **** 
 330:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 315              		.loc 1 330 0
 316 0008 0F23     		mov	r3, #15
 317 000a FC18     		add	r4, r7, r3
 318 000c FFF7FEFF 		bl	CyEnterCriticalSection
 319 0010 031C     		mov	r3, r0
 320 0012 2370     		strb	r3, [r4]
 331:.\Generated_Source\PSoC4/PWM.c **** 
 332:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 321              		.loc 1 332 0
 322 0014 0A4B     		ldr	r3, .L18
 323 0016 0A4A     		ldr	r2, .L18
 324 0018 1268     		ldr	r2, [r2]
 325 001a 0A49     		ldr	r1, .L18+4
 326 001c 0A40     		and	r2, r1
 327 001e 1A60     		str	r2, [r3]
 333:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 328              		.loc 1 333 0
 329 0020 074B     		ldr	r3, .L18
 330 0022 074A     		ldr	r2, .L18
 331 0024 1168     		ldr	r1, [r2]
 332 0026 7A68     		ldr	r2, [r7, #4]
 333 0028 0A43     		orr	r2, r1
 334 002a 1A60     		str	r2, [r3]
 334:.\Generated_Source\PSoC4/PWM.c **** 
 335:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 335              		.loc 1 335 0
 336 002c 0F23     		mov	r3, #15
 337 002e FB18     		add	r3, r7, r3
 338 0030 1B78     		ldrb	r3, [r3]
 339 0032 181C     		mov	r0, r3
 340 0034 FFF7FEFF 		bl	CyExitCriticalSection
 336:.\Generated_Source\PSoC4/PWM.c **** }
 341              		.loc 1 336 0
 342 0038 BD46     		mov	sp, r7
 343 003a 05B0     		add	sp, sp, #20
 344              		@ sp needed
 345 003c 90BD     		pop	{r4, r7, pc}
 346              	.L19:
 347 003e C046     		.align	2
 348              	.L18:
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 13


 349 0040 00010540 		.word	1074069760
 350 0044 FFFF8FFF 		.word	-7340033
 351              		.cfi_endproc
 352              	.LFE5:
 353              		.size	PWM_SetQDMode, .-PWM_SetQDMode
 354              		.section	.text.PWM_SetPrescaler,"ax",%progbits
 355              		.align	2
 356              		.global	PWM_SetPrescaler
 357              		.code	16
 358              		.thumb_func
 359              		.type	PWM_SetPrescaler, %function
 360              	PWM_SetPrescaler:
 361              	.LFB6:
 337:.\Generated_Source\PSoC4/PWM.c **** 
 338:.\Generated_Source\PSoC4/PWM.c **** 
 339:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 340:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPrescaler
 341:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 342:.\Generated_Source\PSoC4/PWM.c **** *
 343:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 344:.\Generated_Source\PSoC4/PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:.\Generated_Source\PSoC4/PWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:.\Generated_Source\PSoC4/PWM.c **** *
 347:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 348:.\Generated_Source\PSoC4/PWM.c **** *  prescaler: Prescaler divider value
 349:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 350:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY2    - Divide by 2
 352:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY4    - Divide by 4
 353:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY8    - Divide by 8
 354:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY16   - Divide by 16
 355:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY32   - Divide by 32
 356:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY64   - Divide by 64
 357:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY128  - Divide by 128
 358:.\Generated_Source\PSoC4/PWM.c **** *
 359:.\Generated_Source\PSoC4/PWM.c **** * Return:
 360:.\Generated_Source\PSoC4/PWM.c **** *  None
 361:.\Generated_Source\PSoC4/PWM.c **** *
 362:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 363:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPrescaler(uint32 prescaler)
 364:.\Generated_Source\PSoC4/PWM.c **** {
 362              		.loc 1 364 0
 363              		.cfi_startproc
 364 0000 90B5     		push	{r4, r7, lr}
 365              		.cfi_def_cfa_offset 12
 366              		.cfi_offset 4, -12
 367              		.cfi_offset 7, -8
 368              		.cfi_offset 14, -4
 369 0002 85B0     		sub	sp, sp, #20
 370              		.cfi_def_cfa_offset 32
 371 0004 00AF     		add	r7, sp, #0
 372              		.cfi_def_cfa_register 7
 373 0006 7860     		str	r0, [r7, #4]
 365:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 366:.\Generated_Source\PSoC4/PWM.c **** 
 367:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 374              		.loc 1 367 0
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 14


 375 0008 0F23     		mov	r3, #15
 376 000a FC18     		add	r4, r7, r3
 377 000c FFF7FEFF 		bl	CyEnterCriticalSection
 378 0010 031C     		mov	r3, r0
 379 0012 2370     		strb	r3, [r4]
 368:.\Generated_Source\PSoC4/PWM.c **** 
 369:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 380              		.loc 1 369 0
 381 0014 0A4B     		ldr	r3, .L21
 382 0016 0A4A     		ldr	r2, .L21
 383 0018 1268     		ldr	r2, [r2]
 384 001a 0A49     		ldr	r1, .L21+4
 385 001c 0A40     		and	r2, r1
 386 001e 1A60     		str	r2, [r3]
 370:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 387              		.loc 1 370 0
 388 0020 074B     		ldr	r3, .L21
 389 0022 074A     		ldr	r2, .L21
 390 0024 1168     		ldr	r1, [r2]
 391 0026 7A68     		ldr	r2, [r7, #4]
 392 0028 0A43     		orr	r2, r1
 393 002a 1A60     		str	r2, [r3]
 371:.\Generated_Source\PSoC4/PWM.c **** 
 372:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 394              		.loc 1 372 0
 395 002c 0F23     		mov	r3, #15
 396 002e FB18     		add	r3, r7, r3
 397 0030 1B78     		ldrb	r3, [r3]
 398 0032 181C     		mov	r0, r3
 399 0034 FFF7FEFF 		bl	CyExitCriticalSection
 373:.\Generated_Source\PSoC4/PWM.c **** }
 400              		.loc 1 373 0
 401 0038 BD46     		mov	sp, r7
 402 003a 05B0     		add	sp, sp, #20
 403              		@ sp needed
 404 003c 90BD     		pop	{r4, r7, pc}
 405              	.L22:
 406 003e C046     		.align	2
 407              	.L21:
 408 0040 00010540 		.word	1074069760
 409 0044 FF00FFFF 		.word	-65281
 410              		.cfi_endproc
 411              	.LFE6:
 412              		.size	PWM_SetPrescaler, .-PWM_SetPrescaler
 413              		.section	.text.PWM_SetOneShot,"ax",%progbits
 414              		.align	2
 415              		.global	PWM_SetOneShot
 416              		.code	16
 417              		.thumb_func
 418              		.type	PWM_SetOneShot, %function
 419              	PWM_SetOneShot:
 420              	.LFB7:
 374:.\Generated_Source\PSoC4/PWM.c **** 
 375:.\Generated_Source\PSoC4/PWM.c **** 
 376:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 377:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetOneShot
 378:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 15


 379:.\Generated_Source\PSoC4/PWM.c **** *
 380:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 381:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM runs
 382:.\Generated_Source\PSoC4/PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 383:.\Generated_Source\PSoC4/PWM.c **** *  PWM operates in the continuous mode.
 384:.\Generated_Source\PSoC4/PWM.c **** *
 385:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 386:.\Generated_Source\PSoC4/PWM.c **** *  oneShotEnable
 387:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 388:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Continuous
 389:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable One Shot
 390:.\Generated_Source\PSoC4/PWM.c **** *
 391:.\Generated_Source\PSoC4/PWM.c **** * Return:
 392:.\Generated_Source\PSoC4/PWM.c **** *  None
 393:.\Generated_Source\PSoC4/PWM.c **** *
 394:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 395:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetOneShot(uint32 oneShotEnable)
 396:.\Generated_Source\PSoC4/PWM.c **** {
 421              		.loc 1 396 0
 422              		.cfi_startproc
 423 0000 90B5     		push	{r4, r7, lr}
 424              		.cfi_def_cfa_offset 12
 425              		.cfi_offset 4, -12
 426              		.cfi_offset 7, -8
 427              		.cfi_offset 14, -4
 428 0002 85B0     		sub	sp, sp, #20
 429              		.cfi_def_cfa_offset 32
 430 0004 00AF     		add	r7, sp, #0
 431              		.cfi_def_cfa_register 7
 432 0006 7860     		str	r0, [r7, #4]
 397:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 398:.\Generated_Source\PSoC4/PWM.c **** 
 399:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 433              		.loc 1 399 0
 434 0008 0F23     		mov	r3, #15
 435 000a FC18     		add	r4, r7, r3
 436 000c FFF7FEFF 		bl	CyEnterCriticalSection
 437 0010 031C     		mov	r3, r0
 438 0012 2370     		strb	r3, [r4]
 400:.\Generated_Source\PSoC4/PWM.c **** 
 401:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 439              		.loc 1 401 0
 440 0014 0B4B     		ldr	r3, .L24
 441 0016 0B4A     		ldr	r2, .L24
 442 0018 1268     		ldr	r2, [r2]
 443 001a 0B49     		ldr	r1, .L24+4
 444 001c 0A40     		and	r2, r1
 445 001e 1A60     		str	r2, [r3]
 402:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 446              		.loc 1 402 0
 447 0020 084B     		ldr	r3, .L24
 448 0022 084A     		ldr	r2, .L24
 449 0024 1168     		ldr	r1, [r2]
 450 0026 7A68     		ldr	r2, [r7, #4]
 451 0028 0120     		mov	r0, #1
 452 002a 0240     		and	r2, r0
 453 002c 9204     		lsl	r2, r2, #18
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 16


 454 002e 0A43     		orr	r2, r1
 455 0030 1A60     		str	r2, [r3]
 403:.\Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 404:.\Generated_Source\PSoC4/PWM.c **** 
 405:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 456              		.loc 1 405 0
 457 0032 0F23     		mov	r3, #15
 458 0034 FB18     		add	r3, r7, r3
 459 0036 1B78     		ldrb	r3, [r3]
 460 0038 181C     		mov	r0, r3
 461 003a FFF7FEFF 		bl	CyExitCriticalSection
 406:.\Generated_Source\PSoC4/PWM.c **** }
 462              		.loc 1 406 0
 463 003e BD46     		mov	sp, r7
 464 0040 05B0     		add	sp, sp, #20
 465              		@ sp needed
 466 0042 90BD     		pop	{r4, r7, pc}
 467              	.L25:
 468              		.align	2
 469              	.L24:
 470 0044 00010540 		.word	1074069760
 471 0048 FFFFFBFF 		.word	-262145
 472              		.cfi_endproc
 473              	.LFE7:
 474              		.size	PWM_SetOneShot, .-PWM_SetOneShot
 475              		.section	.text.PWM_SetPWMMode,"ax",%progbits
 476              		.align	2
 477              		.global	PWM_SetPWMMode
 478              		.code	16
 479              		.thumb_func
 480              		.type	PWM_SetPWMMode, %function
 481              	PWM_SetPWMMode:
 482              	.LFB8:
 407:.\Generated_Source\PSoC4/PWM.c **** 
 408:.\Generated_Source\PSoC4/PWM.c **** 
 409:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 410:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMMode
 411:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 412:.\Generated_Source\PSoC4/PWM.c **** *
 413:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 414:.\Generated_Source\PSoC4/PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 415:.\Generated_Source\PSoC4/PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:.\Generated_Source\PSoC4/PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:.\Generated_Source\PSoC4/PWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:.\Generated_Source\PSoC4/PWM.c **** *  the mode.
 419:.\Generated_Source\PSoC4/PWM.c **** *
 420:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 421:.\Generated_Source\PSoC4/PWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:.\Generated_Source\PSoC4/PWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 424:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_SET         - Set on overflow
 429:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 17


 431:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:.\Generated_Source\PSoC4/PWM.c **** *                             with up counting mode
 438:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:.\Generated_Source\PSoC4/PWM.c **** *                             with down counting mode
 440:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:.\Generated_Source\PSoC4/PWM.c **** *                             combined with up/down 0 mode
 442:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:.\Generated_Source\PSoC4/PWM.c **** *                             with up/down 1 mode
 444:.\Generated_Source\PSoC4/PWM.c **** *
 445:.\Generated_Source\PSoC4/PWM.c **** * Return:
 446:.\Generated_Source\PSoC4/PWM.c **** *  None
 447:.\Generated_Source\PSoC4/PWM.c **** *
 448:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 449:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMMode(uint32 modeMask)
 450:.\Generated_Source\PSoC4/PWM.c **** {
 483              		.loc 1 450 0
 484              		.cfi_startproc
 485 0000 80B5     		push	{r7, lr}
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 0002 82B0     		sub	sp, sp, #8
 490              		.cfi_def_cfa_offset 16
 491 0004 00AF     		add	r7, sp, #0
 492              		.cfi_def_cfa_register 7
 493 0006 7860     		str	r0, [r7, #4]
 451:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 494              		.loc 1 451 0
 495 0008 034B     		ldr	r3, .L27
 496 000a 7A68     		ldr	r2, [r7, #4]
 497 000c 3F21     		mov	r1, #63
 498 000e 0A40     		and	r2, r1
 499 0010 1A60     		str	r2, [r3]
 452:.\Generated_Source\PSoC4/PWM.c **** }
 500              		.loc 1 452 0
 501 0012 BD46     		mov	sp, r7
 502 0014 02B0     		add	sp, sp, #8
 503              		@ sp needed
 504 0016 80BD     		pop	{r7, pc}
 505              	.L28:
 506              		.align	2
 507              	.L27:
 508 0018 28010540 		.word	1074069800
 509              		.cfi_endproc
 510              	.LFE8:
 511              		.size	PWM_SetPWMMode, .-PWM_SetPWMMode
 512              		.section	.text.PWM_SetPWMSyncKill,"ax",%progbits
 513              		.align	2
 514              		.global	PWM_SetPWMSyncKill
 515              		.code	16
 516              		.thumb_func
 517              		.type	PWM_SetPWMSyncKill, %function
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 18


 518              	PWM_SetPWMSyncKill:
 519              	.LFB9:
 453:.\Generated_Source\PSoC4/PWM.c **** 
 454:.\Generated_Source\PSoC4/PWM.c **** 
 455:.\Generated_Source\PSoC4/PWM.c **** 
 456:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 457:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMSyncKill
 458:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 459:.\Generated_Source\PSoC4/PWM.c **** *
 460:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 461:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:.\Generated_Source\PSoC4/PWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:.\Generated_Source\PSoC4/PWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:.\Generated_Source\PSoC4/PWM.c **** *  and PWM with dead time modes.
 465:.\Generated_Source\PSoC4/PWM.c **** *
 466:.\Generated_Source\PSoC4/PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:.\Generated_Source\PSoC4/PWM.c **** *  signals until the next terminal count.
 468:.\Generated_Source\PSoC4/PWM.c **** *
 469:.\Generated_Source\PSoC4/PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:.\Generated_Source\PSoC4/PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 471:.\Generated_Source\PSoC4/PWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:.\Generated_Source\PSoC4/PWM.c **** *  (Level sensitive signal).
 473:.\Generated_Source\PSoC4/PWM.c **** 
 474:.\Generated_Source\PSoC4/PWM.c **** *
 475:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 476:.\Generated_Source\PSoC4/PWM.c **** *  syncKillEnable
 477:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 478:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Asynchronous
 479:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Synchronous
 480:.\Generated_Source\PSoC4/PWM.c **** *
 481:.\Generated_Source\PSoC4/PWM.c **** * Return:
 482:.\Generated_Source\PSoC4/PWM.c **** *  None
 483:.\Generated_Source\PSoC4/PWM.c **** *
 484:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 485:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMSyncKill(uint32 syncKillEnable)
 486:.\Generated_Source\PSoC4/PWM.c **** {
 520              		.loc 1 486 0
 521              		.cfi_startproc
 522 0000 90B5     		push	{r4, r7, lr}
 523              		.cfi_def_cfa_offset 12
 524              		.cfi_offset 4, -12
 525              		.cfi_offset 7, -8
 526              		.cfi_offset 14, -4
 527 0002 85B0     		sub	sp, sp, #20
 528              		.cfi_def_cfa_offset 32
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 487:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 488:.\Generated_Source\PSoC4/PWM.c **** 
 489:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 532              		.loc 1 489 0
 533 0008 0F23     		mov	r3, #15
 534 000a FC18     		add	r4, r7, r3
 535 000c FFF7FEFF 		bl	CyEnterCriticalSection
 536 0010 031C     		mov	r3, r0
 537 0012 2370     		strb	r3, [r4]
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 19


 490:.\Generated_Source\PSoC4/PWM.c **** 
 491:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 538              		.loc 1 491 0
 539 0014 0B4B     		ldr	r3, .L30
 540 0016 0B4A     		ldr	r2, .L30
 541 0018 1268     		ldr	r2, [r2]
 542 001a 0421     		mov	r1, #4
 543 001c 8A43     		bic	r2, r1
 544 001e 1A60     		str	r2, [r3]
 492:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 545              		.loc 1 492 0
 546 0020 084B     		ldr	r3, .L30
 547 0022 084A     		ldr	r2, .L30
 548 0024 1168     		ldr	r1, [r2]
 549 0026 7A68     		ldr	r2, [r7, #4]
 550 0028 0120     		mov	r0, #1
 551 002a 0240     		and	r2, r0
 552 002c 9200     		lsl	r2, r2, #2
 553 002e 0A43     		orr	r2, r1
 554 0030 1A60     		str	r2, [r3]
 493:.\Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 494:.\Generated_Source\PSoC4/PWM.c **** 
 495:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 555              		.loc 1 495 0
 556 0032 0F23     		mov	r3, #15
 557 0034 FB18     		add	r3, r7, r3
 558 0036 1B78     		ldrb	r3, [r3]
 559 0038 181C     		mov	r0, r3
 560 003a FFF7FEFF 		bl	CyExitCriticalSection
 496:.\Generated_Source\PSoC4/PWM.c **** }
 561              		.loc 1 496 0
 562 003e BD46     		mov	sp, r7
 563 0040 05B0     		add	sp, sp, #20
 564              		@ sp needed
 565 0042 90BD     		pop	{r4, r7, pc}
 566              	.L31:
 567              		.align	2
 568              	.L30:
 569 0044 00010540 		.word	1074069760
 570              		.cfi_endproc
 571              	.LFE9:
 572              		.size	PWM_SetPWMSyncKill, .-PWM_SetPWMSyncKill
 573              		.section	.text.PWM_SetPWMStopOnKill,"ax",%progbits
 574              		.align	2
 575              		.global	PWM_SetPWMStopOnKill
 576              		.code	16
 577              		.thumb_func
 578              		.type	PWM_SetPWMStopOnKill, %function
 579              	PWM_SetPWMStopOnKill:
 580              	.LFB10:
 497:.\Generated_Source\PSoC4/PWM.c **** 
 498:.\Generated_Source\PSoC4/PWM.c **** 
 499:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 500:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMStopOnKill
 501:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 502:.\Generated_Source\PSoC4/PWM.c **** *
 503:.\Generated_Source\PSoC4/PWM.c **** * Summary:
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 20


 504:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:.\Generated_Source\PSoC4/PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:.\Generated_Source\PSoC4/PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:.\Generated_Source\PSoC4/PWM.c **** *
 508:.\Generated_Source\PSoC4/PWM.c **** *
 509:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 510:.\Generated_Source\PSoC4/PWM.c **** *  stopOnKillEnable
 511:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 512:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Don't stop
 513:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Stop
 514:.\Generated_Source\PSoC4/PWM.c **** *
 515:.\Generated_Source\PSoC4/PWM.c **** * Return:
 516:.\Generated_Source\PSoC4/PWM.c **** *  None
 517:.\Generated_Source\PSoC4/PWM.c **** *
 518:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 519:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:.\Generated_Source\PSoC4/PWM.c **** {
 581              		.loc 1 520 0
 582              		.cfi_startproc
 583 0000 90B5     		push	{r4, r7, lr}
 584              		.cfi_def_cfa_offset 12
 585              		.cfi_offset 4, -12
 586              		.cfi_offset 7, -8
 587              		.cfi_offset 14, -4
 588 0002 85B0     		sub	sp, sp, #20
 589              		.cfi_def_cfa_offset 32
 590 0004 00AF     		add	r7, sp, #0
 591              		.cfi_def_cfa_register 7
 592 0006 7860     		str	r0, [r7, #4]
 521:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 522:.\Generated_Source\PSoC4/PWM.c **** 
 523:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 593              		.loc 1 523 0
 594 0008 0F23     		mov	r3, #15
 595 000a FC18     		add	r4, r7, r3
 596 000c FFF7FEFF 		bl	CyEnterCriticalSection
 597 0010 031C     		mov	r3, r0
 598 0012 2370     		strb	r3, [r4]
 524:.\Generated_Source\PSoC4/PWM.c **** 
 525:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 599              		.loc 1 525 0
 600 0014 0B4B     		ldr	r3, .L33
 601 0016 0B4A     		ldr	r2, .L33
 602 0018 1268     		ldr	r2, [r2]
 603 001a 0821     		mov	r1, #8
 604 001c 8A43     		bic	r2, r1
 605 001e 1A60     		str	r2, [r3]
 526:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 606              		.loc 1 526 0
 607 0020 084B     		ldr	r3, .L33
 608 0022 084A     		ldr	r2, .L33
 609 0024 1168     		ldr	r1, [r2]
 610 0026 7A68     		ldr	r2, [r7, #4]
 611 0028 0120     		mov	r0, #1
 612 002a 0240     		and	r2, r0
 613 002c D200     		lsl	r2, r2, #3
 614 002e 0A43     		orr	r2, r1
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 21


 615 0030 1A60     		str	r2, [r3]
 527:.\Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 528:.\Generated_Source\PSoC4/PWM.c **** 
 529:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 616              		.loc 1 529 0
 617 0032 0F23     		mov	r3, #15
 618 0034 FB18     		add	r3, r7, r3
 619 0036 1B78     		ldrb	r3, [r3]
 620 0038 181C     		mov	r0, r3
 621 003a FFF7FEFF 		bl	CyExitCriticalSection
 530:.\Generated_Source\PSoC4/PWM.c **** }
 622              		.loc 1 530 0
 623 003e BD46     		mov	sp, r7
 624 0040 05B0     		add	sp, sp, #20
 625              		@ sp needed
 626 0042 90BD     		pop	{r4, r7, pc}
 627              	.L34:
 628              		.align	2
 629              	.L33:
 630 0044 00010540 		.word	1074069760
 631              		.cfi_endproc
 632              	.LFE10:
 633              		.size	PWM_SetPWMStopOnKill, .-PWM_SetPWMStopOnKill
 634              		.section	.text.PWM_SetPWMDeadTime,"ax",%progbits
 635              		.align	2
 636              		.global	PWM_SetPWMDeadTime
 637              		.code	16
 638              		.thumb_func
 639              		.type	PWM_SetPWMDeadTime, %function
 640              	PWM_SetPWMDeadTime:
 641              	.LFB11:
 531:.\Generated_Source\PSoC4/PWM.c **** 
 532:.\Generated_Source\PSoC4/PWM.c **** 
 533:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMDeadTime
 535:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 536:.\Generated_Source\PSoC4/PWM.c **** *
 537:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 538:.\Generated_Source\PSoC4/PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:.\Generated_Source\PSoC4/PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:.\Generated_Source\PSoC4/PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:.\Generated_Source\PSoC4/PWM.c **** *  only applicable to the PWM in the dead time mode.
 542:.\Generated_Source\PSoC4/PWM.c **** 
 543:.\Generated_Source\PSoC4/PWM.c **** *
 544:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 545:.\Generated_Source\PSoC4/PWM.c **** *  Dead time to insert
 546:.\Generated_Source\PSoC4/PWM.c **** *   Values: 0 to 255
 547:.\Generated_Source\PSoC4/PWM.c **** *
 548:.\Generated_Source\PSoC4/PWM.c **** * Return:
 549:.\Generated_Source\PSoC4/PWM.c **** *  None
 550:.\Generated_Source\PSoC4/PWM.c **** *
 551:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 552:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMDeadTime(uint32 deadTime)
 553:.\Generated_Source\PSoC4/PWM.c **** {
 642              		.loc 1 553 0
 643              		.cfi_startproc
 644 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 22


 645              		.cfi_def_cfa_offset 12
 646              		.cfi_offset 4, -12
 647              		.cfi_offset 7, -8
 648              		.cfi_offset 14, -4
 649 0002 85B0     		sub	sp, sp, #20
 650              		.cfi_def_cfa_offset 32
 651 0004 00AF     		add	r7, sp, #0
 652              		.cfi_def_cfa_register 7
 653 0006 7860     		str	r0, [r7, #4]
 554:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 555:.\Generated_Source\PSoC4/PWM.c **** 
 556:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 654              		.loc 1 556 0
 655 0008 0F23     		mov	r3, #15
 656 000a FC18     		add	r4, r7, r3
 657 000c FFF7FEFF 		bl	CyEnterCriticalSection
 658 0010 031C     		mov	r3, r0
 659 0012 2370     		strb	r3, [r4]
 557:.\Generated_Source\PSoC4/PWM.c **** 
 558:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 660              		.loc 1 558 0
 661 0014 0B4B     		ldr	r3, .L36
 662 0016 0B4A     		ldr	r2, .L36
 663 0018 1268     		ldr	r2, [r2]
 664 001a 0B49     		ldr	r1, .L36+4
 665 001c 0A40     		and	r2, r1
 666 001e 1A60     		str	r2, [r3]
 559:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 667              		.loc 1 559 0
 668 0020 084B     		ldr	r3, .L36
 669 0022 084A     		ldr	r2, .L36
 670 0024 1168     		ldr	r1, [r2]
 671 0026 7A68     		ldr	r2, [r7, #4]
 672 0028 1202     		lsl	r2, r2, #8
 673 002a 1204     		lsl	r2, r2, #16
 674 002c 120C     		lsr	r2, r2, #16
 675 002e 0A43     		orr	r2, r1
 676 0030 1A60     		str	r2, [r3]
 560:.\Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 561:.\Generated_Source\PSoC4/PWM.c **** 
 562:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 677              		.loc 1 562 0
 678 0032 0F23     		mov	r3, #15
 679 0034 FB18     		add	r3, r7, r3
 680 0036 1B78     		ldrb	r3, [r3]
 681 0038 181C     		mov	r0, r3
 682 003a FFF7FEFF 		bl	CyExitCriticalSection
 563:.\Generated_Source\PSoC4/PWM.c **** }
 683              		.loc 1 563 0
 684 003e BD46     		mov	sp, r7
 685 0040 05B0     		add	sp, sp, #20
 686              		@ sp needed
 687 0042 90BD     		pop	{r4, r7, pc}
 688              	.L37:
 689              		.align	2
 690              	.L36:
 691 0044 00010540 		.word	1074069760
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 23


 692 0048 FF00FFFF 		.word	-65281
 693              		.cfi_endproc
 694              	.LFE11:
 695              		.size	PWM_SetPWMDeadTime, .-PWM_SetPWMDeadTime
 696              		.section	.text.PWM_SetPWMInvert,"ax",%progbits
 697              		.align	2
 698              		.global	PWM_SetPWMInvert
 699              		.code	16
 700              		.thumb_func
 701              		.type	PWM_SetPWMInvert, %function
 702              	PWM_SetPWMInvert:
 703              	.LFB12:
 564:.\Generated_Source\PSoC4/PWM.c **** 
 565:.\Generated_Source\PSoC4/PWM.c **** 
 566:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMInvert
 568:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM.c **** *
 570:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 571:.\Generated_Source\PSoC4/PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:.\Generated_Source\PSoC4/PWM.c **** *  inverted from their normal output values.  This functionality is only
 573:.\Generated_Source\PSoC4/PWM.c **** *  applicable to the three PWM modes.
 574:.\Generated_Source\PSoC4/PWM.c **** *
 575:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 576:.\Generated_Source\PSoC4/PWM.c **** *  mask: Mask of outputs to invert.
 577:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 578:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE   - Inverts the line output
 579:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE_N - Inverts the line_n output
 580:.\Generated_Source\PSoC4/PWM.c **** *
 581:.\Generated_Source\PSoC4/PWM.c **** * Return:
 582:.\Generated_Source\PSoC4/PWM.c **** *  None
 583:.\Generated_Source\PSoC4/PWM.c **** *
 584:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMInvert(uint32 mask)
 586:.\Generated_Source\PSoC4/PWM.c **** {
 704              		.loc 1 586 0
 705              		.cfi_startproc
 706 0000 90B5     		push	{r4, r7, lr}
 707              		.cfi_def_cfa_offset 12
 708              		.cfi_offset 4, -12
 709              		.cfi_offset 7, -8
 710              		.cfi_offset 14, -4
 711 0002 85B0     		sub	sp, sp, #20
 712              		.cfi_def_cfa_offset 32
 713 0004 00AF     		add	r7, sp, #0
 714              		.cfi_def_cfa_register 7
 715 0006 7860     		str	r0, [r7, #4]
 587:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 588:.\Generated_Source\PSoC4/PWM.c **** 
 589:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 716              		.loc 1 589 0
 717 0008 0F23     		mov	r3, #15
 718 000a FC18     		add	r4, r7, r3
 719 000c FFF7FEFF 		bl	CyEnterCriticalSection
 720 0010 031C     		mov	r3, r0
 721 0012 2370     		strb	r3, [r4]
 590:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 24


 591:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 722              		.loc 1 591 0
 723 0014 0A4B     		ldr	r3, .L39
 724 0016 0A4A     		ldr	r2, .L39
 725 0018 1268     		ldr	r2, [r2]
 726 001a 0A49     		ldr	r1, .L39+4
 727 001c 0A40     		and	r2, r1
 728 001e 1A60     		str	r2, [r3]
 592:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 729              		.loc 1 592 0
 730 0020 074B     		ldr	r3, .L39
 731 0022 074A     		ldr	r2, .L39
 732 0024 1168     		ldr	r1, [r2]
 733 0026 7A68     		ldr	r2, [r7, #4]
 734 0028 0A43     		orr	r2, r1
 735 002a 1A60     		str	r2, [r3]
 593:.\Generated_Source\PSoC4/PWM.c **** 
 594:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 736              		.loc 1 594 0
 737 002c 0F23     		mov	r3, #15
 738 002e FB18     		add	r3, r7, r3
 739 0030 1B78     		ldrb	r3, [r3]
 740 0032 181C     		mov	r0, r3
 741 0034 FFF7FEFF 		bl	CyExitCriticalSection
 595:.\Generated_Source\PSoC4/PWM.c **** }
 742              		.loc 1 595 0
 743 0038 BD46     		mov	sp, r7
 744 003a 05B0     		add	sp, sp, #20
 745              		@ sp needed
 746 003c 90BD     		pop	{r4, r7, pc}
 747              	.L40:
 748 003e C046     		.align	2
 749              	.L39:
 750 0040 00010540 		.word	1074069760
 751 0044 FFFFCFFF 		.word	-3145729
 752              		.cfi_endproc
 753              	.LFE12:
 754              		.size	PWM_SetPWMInvert, .-PWM_SetPWMInvert
 755              		.section	.text.PWM_WriteCounter,"ax",%progbits
 756              		.align	2
 757              		.global	PWM_WriteCounter
 758              		.code	16
 759              		.thumb_func
 760              		.type	PWM_WriteCounter, %function
 761              	PWM_WriteCounter:
 762              	.LFB13:
 596:.\Generated_Source\PSoC4/PWM.c **** 
 597:.\Generated_Source\PSoC4/PWM.c **** 
 598:.\Generated_Source\PSoC4/PWM.c **** 
 599:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 600:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCounter
 601:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 602:.\Generated_Source\PSoC4/PWM.c **** *
 603:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 604:.\Generated_Source\PSoC4/PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:.\Generated_Source\PSoC4/PWM.c **** *  setting the counter (not the period) to the value written. It is not
 606:.\Generated_Source\PSoC4/PWM.c **** *  advised to write to this field when the counter is running.
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 25


 607:.\Generated_Source\PSoC4/PWM.c **** *
 608:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 609:.\Generated_Source\PSoC4/PWM.c **** *  count: value to write
 610:.\Generated_Source\PSoC4/PWM.c **** *
 611:.\Generated_Source\PSoC4/PWM.c **** * Return:
 612:.\Generated_Source\PSoC4/PWM.c **** *  None
 613:.\Generated_Source\PSoC4/PWM.c **** *
 614:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 615:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCounter(uint32 count)
 616:.\Generated_Source\PSoC4/PWM.c **** {
 763              		.loc 1 616 0
 764              		.cfi_startproc
 765 0000 80B5     		push	{r7, lr}
 766              		.cfi_def_cfa_offset 8
 767              		.cfi_offset 7, -8
 768              		.cfi_offset 14, -4
 769 0002 82B0     		sub	sp, sp, #8
 770              		.cfi_def_cfa_offset 16
 771 0004 00AF     		add	r7, sp, #0
 772              		.cfi_def_cfa_register 7
 773 0006 7860     		str	r0, [r7, #4]
 617:.\Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 774              		.loc 1 617 0
 775 0008 034B     		ldr	r3, .L42
 776 000a 7A68     		ldr	r2, [r7, #4]
 777 000c 1204     		lsl	r2, r2, #16
 778 000e 120C     		lsr	r2, r2, #16
 779 0010 1A60     		str	r2, [r3]
 618:.\Generated_Source\PSoC4/PWM.c **** }
 780              		.loc 1 618 0
 781 0012 BD46     		mov	sp, r7
 782 0014 02B0     		add	sp, sp, #8
 783              		@ sp needed
 784 0016 80BD     		pop	{r7, pc}
 785              	.L43:
 786              		.align	2
 787              	.L42:
 788 0018 08010540 		.word	1074069768
 789              		.cfi_endproc
 790              	.LFE13:
 791              		.size	PWM_WriteCounter, .-PWM_WriteCounter
 792              		.section	.text.PWM_ReadCounter,"ax",%progbits
 793              		.align	2
 794              		.global	PWM_ReadCounter
 795              		.code	16
 796              		.thumb_func
 797              		.type	PWM_ReadCounter, %function
 798              	PWM_ReadCounter:
 799              	.LFB14:
 619:.\Generated_Source\PSoC4/PWM.c **** 
 620:.\Generated_Source\PSoC4/PWM.c **** 
 621:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCounter
 623:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/PWM.c **** *
 625:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 626:.\Generated_Source\PSoC4/PWM.c **** *  Reads the current counter value.
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 26


 627:.\Generated_Source\PSoC4/PWM.c **** *
 628:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 629:.\Generated_Source\PSoC4/PWM.c **** *  None
 630:.\Generated_Source\PSoC4/PWM.c **** *
 631:.\Generated_Source\PSoC4/PWM.c **** * Return:
 632:.\Generated_Source\PSoC4/PWM.c **** *  Current counter value
 633:.\Generated_Source\PSoC4/PWM.c **** *
 634:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 635:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCounter(void)
 636:.\Generated_Source\PSoC4/PWM.c **** {
 800              		.loc 1 636 0
 801              		.cfi_startproc
 802 0000 80B5     		push	{r7, lr}
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 7, -8
 805              		.cfi_offset 14, -4
 806 0002 00AF     		add	r7, sp, #0
 807              		.cfi_def_cfa_register 7
 637:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 808              		.loc 1 637 0
 809 0004 034B     		ldr	r3, .L46
 810 0006 1B68     		ldr	r3, [r3]
 811 0008 1B04     		lsl	r3, r3, #16
 812 000a 1B0C     		lsr	r3, r3, #16
 638:.\Generated_Source\PSoC4/PWM.c **** }
 813              		.loc 1 638 0
 814 000c 181C     		mov	r0, r3
 815 000e BD46     		mov	sp, r7
 816              		@ sp needed
 817 0010 80BD     		pop	{r7, pc}
 818              	.L47:
 819 0012 C046     		.align	2
 820              	.L46:
 821 0014 08010540 		.word	1074069768
 822              		.cfi_endproc
 823              	.LFE14:
 824              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 825              		.section	.text.PWM_SetCounterMode,"ax",%progbits
 826              		.align	2
 827              		.global	PWM_SetCounterMode
 828              		.code	16
 829              		.thumb_func
 830              		.type	PWM_SetCounterMode, %function
 831              	PWM_SetCounterMode:
 832              	.LFB15:
 639:.\Generated_Source\PSoC4/PWM.c **** 
 640:.\Generated_Source\PSoC4/PWM.c **** 
 641:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 642:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCounterMode
 643:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 644:.\Generated_Source\PSoC4/PWM.c **** *
 645:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 646:.\Generated_Source\PSoC4/PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:.\Generated_Source\PSoC4/PWM.c **** *  and the PWM with a pseudo random output.
 648:.\Generated_Source\PSoC4/PWM.c **** *
 649:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 650:.\Generated_Source\PSoC4/PWM.c **** *  counterMode: Enumerated counter type values
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 27


 651:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 652:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UP       - Counts up
 653:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_DOWN     - Counts down
 654:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:.\Generated_Source\PSoC4/PWM.c **** *                                         generated when counter reaches 0
 656:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:.\Generated_Source\PSoC4/PWM.c **** *                                         generated both when counter reaches 0
 658:.\Generated_Source\PSoC4/PWM.c **** *                                         and period
 659:.\Generated_Source\PSoC4/PWM.c **** *
 660:.\Generated_Source\PSoC4/PWM.c **** * Return:
 661:.\Generated_Source\PSoC4/PWM.c **** *  None
 662:.\Generated_Source\PSoC4/PWM.c **** *
 663:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 664:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCounterMode(uint32 counterMode)
 665:.\Generated_Source\PSoC4/PWM.c **** {
 833              		.loc 1 665 0
 834              		.cfi_startproc
 835 0000 90B5     		push	{r4, r7, lr}
 836              		.cfi_def_cfa_offset 12
 837              		.cfi_offset 4, -12
 838              		.cfi_offset 7, -8
 839              		.cfi_offset 14, -4
 840 0002 85B0     		sub	sp, sp, #20
 841              		.cfi_def_cfa_offset 32
 842 0004 00AF     		add	r7, sp, #0
 843              		.cfi_def_cfa_register 7
 844 0006 7860     		str	r0, [r7, #4]
 666:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 667:.\Generated_Source\PSoC4/PWM.c **** 
 668:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 845              		.loc 1 668 0
 846 0008 0F23     		mov	r3, #15
 847 000a FC18     		add	r4, r7, r3
 848 000c FFF7FEFF 		bl	CyEnterCriticalSection
 849 0010 031C     		mov	r3, r0
 850 0012 2370     		strb	r3, [r4]
 669:.\Generated_Source\PSoC4/PWM.c **** 
 670:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 851              		.loc 1 670 0
 852 0014 0A4B     		ldr	r3, .L49
 853 0016 0A4A     		ldr	r2, .L49
 854 0018 1268     		ldr	r2, [r2]
 855 001a 0A49     		ldr	r1, .L49+4
 856 001c 0A40     		and	r2, r1
 857 001e 1A60     		str	r2, [r3]
 671:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 858              		.loc 1 671 0
 859 0020 074B     		ldr	r3, .L49
 860 0022 074A     		ldr	r2, .L49
 861 0024 1168     		ldr	r1, [r2]
 862 0026 7A68     		ldr	r2, [r7, #4]
 863 0028 0A43     		orr	r2, r1
 864 002a 1A60     		str	r2, [r3]
 672:.\Generated_Source\PSoC4/PWM.c **** 
 673:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 865              		.loc 1 673 0
 866 002c 0F23     		mov	r3, #15
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 28


 867 002e FB18     		add	r3, r7, r3
 868 0030 1B78     		ldrb	r3, [r3]
 869 0032 181C     		mov	r0, r3
 870 0034 FFF7FEFF 		bl	CyExitCriticalSection
 674:.\Generated_Source\PSoC4/PWM.c **** }
 871              		.loc 1 674 0
 872 0038 BD46     		mov	sp, r7
 873 003a 05B0     		add	sp, sp, #20
 874              		@ sp needed
 875 003c 90BD     		pop	{r4, r7, pc}
 876              	.L50:
 877 003e C046     		.align	2
 878              	.L49:
 879 0040 00010540 		.word	1074069760
 880 0044 FFFFFCFF 		.word	-196609
 881              		.cfi_endproc
 882              	.LFE15:
 883              		.size	PWM_SetCounterMode, .-PWM_SetCounterMode
 884              		.section	.text.PWM_WritePeriod,"ax",%progbits
 885              		.align	2
 886              		.global	PWM_WritePeriod
 887              		.code	16
 888              		.thumb_func
 889              		.type	PWM_WritePeriod, %function
 890              	PWM_WritePeriod:
 891              	.LFB16:
 675:.\Generated_Source\PSoC4/PWM.c **** 
 676:.\Generated_Source\PSoC4/PWM.c **** 
 677:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 678:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 679:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 680:.\Generated_Source\PSoC4/PWM.c **** *
 681:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 682:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period register with the new period value.
 683:.\Generated_Source\PSoC4/PWM.c **** *  To cause the counter to count for N cycles this register should be written
 684:.\Generated_Source\PSoC4/PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 685:.\Generated_Source\PSoC4/PWM.c **** *
 686:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 687:.\Generated_Source\PSoC4/PWM.c **** *  period: Period value
 688:.\Generated_Source\PSoC4/PWM.c **** *
 689:.\Generated_Source\PSoC4/PWM.c **** * Return:
 690:.\Generated_Source\PSoC4/PWM.c **** *  None
 691:.\Generated_Source\PSoC4/PWM.c **** *
 692:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint32 period)
 694:.\Generated_Source\PSoC4/PWM.c **** {
 892              		.loc 1 694 0
 893              		.cfi_startproc
 894 0000 80B5     		push	{r7, lr}
 895              		.cfi_def_cfa_offset 8
 896              		.cfi_offset 7, -8
 897              		.cfi_offset 14, -4
 898 0002 82B0     		sub	sp, sp, #8
 899              		.cfi_def_cfa_offset 16
 900 0004 00AF     		add	r7, sp, #0
 901              		.cfi_def_cfa_register 7
 902 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 29


 695:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 903              		.loc 1 695 0
 904 0008 034B     		ldr	r3, .L52
 905 000a 7A68     		ldr	r2, [r7, #4]
 906 000c 1204     		lsl	r2, r2, #16
 907 000e 120C     		lsr	r2, r2, #16
 908 0010 1A60     		str	r2, [r3]
 696:.\Generated_Source\PSoC4/PWM.c **** }
 909              		.loc 1 696 0
 910 0012 BD46     		mov	sp, r7
 911 0014 02B0     		add	sp, sp, #8
 912              		@ sp needed
 913 0016 80BD     		pop	{r7, pc}
 914              	.L53:
 915              		.align	2
 916              	.L52:
 917 0018 14010540 		.word	1074069780
 918              		.cfi_endproc
 919              	.LFE16:
 920              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 921              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 922              		.align	2
 923              		.global	PWM_ReadPeriod
 924              		.code	16
 925              		.thumb_func
 926              		.type	PWM_ReadPeriod, %function
 927              	PWM_ReadPeriod:
 928              	.LFB17:
 697:.\Generated_Source\PSoC4/PWM.c **** 
 698:.\Generated_Source\PSoC4/PWM.c **** 
 699:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 700:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 701:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 702:.\Generated_Source\PSoC4/PWM.c **** *
 703:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 704:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period register.
 705:.\Generated_Source\PSoC4/PWM.c **** *
 706:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 707:.\Generated_Source\PSoC4/PWM.c **** *  None
 708:.\Generated_Source\PSoC4/PWM.c **** *
 709:.\Generated_Source\PSoC4/PWM.c **** * Return:
 710:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 711:.\Generated_Source\PSoC4/PWM.c **** *
 712:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 713:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriod(void)
 714:.\Generated_Source\PSoC4/PWM.c **** {
 929              		.loc 1 714 0
 930              		.cfi_startproc
 931 0000 80B5     		push	{r7, lr}
 932              		.cfi_def_cfa_offset 8
 933              		.cfi_offset 7, -8
 934              		.cfi_offset 14, -4
 935 0002 00AF     		add	r7, sp, #0
 936              		.cfi_def_cfa_register 7
 715:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 937              		.loc 1 715 0
 938 0004 034B     		ldr	r3, .L56
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 30


 939 0006 1B68     		ldr	r3, [r3]
 940 0008 1B04     		lsl	r3, r3, #16
 941 000a 1B0C     		lsr	r3, r3, #16
 716:.\Generated_Source\PSoC4/PWM.c **** }
 942              		.loc 1 716 0
 943 000c 181C     		mov	r0, r3
 944 000e BD46     		mov	sp, r7
 945              		@ sp needed
 946 0010 80BD     		pop	{r7, pc}
 947              	.L57:
 948 0012 C046     		.align	2
 949              	.L56:
 950 0014 14010540 		.word	1074069780
 951              		.cfi_endproc
 952              	.LFE17:
 953              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 954              		.section	.text.PWM_SetCompareSwap,"ax",%progbits
 955              		.align	2
 956              		.global	PWM_SetCompareSwap
 957              		.code	16
 958              		.thumb_func
 959              		.type	PWM_SetCompareSwap, %function
 960              	PWM_SetCompareSwap:
 961              	.LFB18:
 717:.\Generated_Source\PSoC4/PWM.c **** 
 718:.\Generated_Source\PSoC4/PWM.c **** 
 719:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 720:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCompareSwap
 721:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 722:.\Generated_Source\PSoC4/PWM.c **** *
 723:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 724:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the compare registers are
 725:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:.\Generated_Source\PSoC4/PWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:.\Generated_Source\PSoC4/PWM.c **** *  following a hardware switch event.
 728:.\Generated_Source\PSoC4/PWM.c **** *
 729:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 730:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 731:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 732:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 733:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 734:.\Generated_Source\PSoC4/PWM.c **** *
 735:.\Generated_Source\PSoC4/PWM.c **** * Return:
 736:.\Generated_Source\PSoC4/PWM.c **** *  None
 737:.\Generated_Source\PSoC4/PWM.c **** *
 738:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 739:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCompareSwap(uint32 swapEnable)
 740:.\Generated_Source\PSoC4/PWM.c **** {
 962              		.loc 1 740 0
 963              		.cfi_startproc
 964 0000 90B5     		push	{r4, r7, lr}
 965              		.cfi_def_cfa_offset 12
 966              		.cfi_offset 4, -12
 967              		.cfi_offset 7, -8
 968              		.cfi_offset 14, -4
 969 0002 85B0     		sub	sp, sp, #20
 970              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 31


 971 0004 00AF     		add	r7, sp, #0
 972              		.cfi_def_cfa_register 7
 973 0006 7860     		str	r0, [r7, #4]
 741:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 742:.\Generated_Source\PSoC4/PWM.c **** 
 743:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 974              		.loc 1 743 0
 975 0008 0F23     		mov	r3, #15
 976 000a FC18     		add	r4, r7, r3
 977 000c FFF7FEFF 		bl	CyEnterCriticalSection
 978 0010 031C     		mov	r3, r0
 979 0012 2370     		strb	r3, [r4]
 744:.\Generated_Source\PSoC4/PWM.c **** 
 745:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 980              		.loc 1 745 0
 981 0014 0B4B     		ldr	r3, .L59
 982 0016 0B4A     		ldr	r2, .L59
 983 0018 1268     		ldr	r2, [r2]
 984 001a 0121     		mov	r1, #1
 985 001c 8A43     		bic	r2, r1
 986 001e 1A60     		str	r2, [r3]
 746:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 987              		.loc 1 746 0
 988 0020 084B     		ldr	r3, .L59
 989 0022 084A     		ldr	r2, .L59
 990 0024 1168     		ldr	r1, [r2]
 991 0026 7A68     		ldr	r2, [r7, #4]
 992 0028 0120     		mov	r0, #1
 993 002a 0240     		and	r2, r0
 994 002c 0A43     		orr	r2, r1
 995 002e 1A60     		str	r2, [r3]
 747:.\Generated_Source\PSoC4/PWM.c **** 
 748:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 996              		.loc 1 748 0
 997 0030 0F23     		mov	r3, #15
 998 0032 FB18     		add	r3, r7, r3
 999 0034 1B78     		ldrb	r3, [r3]
 1000 0036 181C     		mov	r0, r3
 1001 0038 FFF7FEFF 		bl	CyExitCriticalSection
 749:.\Generated_Source\PSoC4/PWM.c **** }
 1002              		.loc 1 749 0
 1003 003c BD46     		mov	sp, r7
 1004 003e 05B0     		add	sp, sp, #20
 1005              		@ sp needed
 1006 0040 90BD     		pop	{r4, r7, pc}
 1007              	.L60:
 1008 0042 C046     		.align	2
 1009              	.L59:
 1010 0044 00010540 		.word	1074069760
 1011              		.cfi_endproc
 1012              	.LFE18:
 1013              		.size	PWM_SetCompareSwap, .-PWM_SetCompareSwap
 1014              		.section	.text.PWM_WritePeriodBuf,"ax",%progbits
 1015              		.align	2
 1016              		.global	PWM_WritePeriodBuf
 1017              		.code	16
 1018              		.thumb_func
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 32


 1019              		.type	PWM_WritePeriodBuf, %function
 1020              	PWM_WritePeriodBuf:
 1021              	.LFB19:
 750:.\Generated_Source\PSoC4/PWM.c **** 
 751:.\Generated_Source\PSoC4/PWM.c **** 
 752:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 753:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriodBuf
 754:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 755:.\Generated_Source\PSoC4/PWM.c **** *
 756:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 757:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 758:.\Generated_Source\PSoC4/PWM.c **** *
 759:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 760:.\Generated_Source\PSoC4/PWM.c **** *  periodBuf: Period value
 761:.\Generated_Source\PSoC4/PWM.c **** *
 762:.\Generated_Source\PSoC4/PWM.c **** * Return:
 763:.\Generated_Source\PSoC4/PWM.c **** *  None
 764:.\Generated_Source\PSoC4/PWM.c **** *
 765:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 766:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriodBuf(uint32 periodBuf)
 767:.\Generated_Source\PSoC4/PWM.c **** {
 1022              		.loc 1 767 0
 1023              		.cfi_startproc
 1024 0000 80B5     		push	{r7, lr}
 1025              		.cfi_def_cfa_offset 8
 1026              		.cfi_offset 7, -8
 1027              		.cfi_offset 14, -4
 1028 0002 82B0     		sub	sp, sp, #8
 1029              		.cfi_def_cfa_offset 16
 1030 0004 00AF     		add	r7, sp, #0
 1031              		.cfi_def_cfa_register 7
 1032 0006 7860     		str	r0, [r7, #4]
 768:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 1033              		.loc 1 768 0
 1034 0008 034B     		ldr	r3, .L62
 1035 000a 7A68     		ldr	r2, [r7, #4]
 1036 000c 1204     		lsl	r2, r2, #16
 1037 000e 120C     		lsr	r2, r2, #16
 1038 0010 1A60     		str	r2, [r3]
 769:.\Generated_Source\PSoC4/PWM.c **** }
 1039              		.loc 1 769 0
 1040 0012 BD46     		mov	sp, r7
 1041 0014 02B0     		add	sp, sp, #8
 1042              		@ sp needed
 1043 0016 80BD     		pop	{r7, pc}
 1044              	.L63:
 1045              		.align	2
 1046              	.L62:
 1047 0018 18010540 		.word	1074069784
 1048              		.cfi_endproc
 1049              	.LFE19:
 1050              		.size	PWM_WritePeriodBuf, .-PWM_WritePeriodBuf
 1051              		.section	.text.PWM_ReadPeriodBuf,"ax",%progbits
 1052              		.align	2
 1053              		.global	PWM_ReadPeriodBuf
 1054              		.code	16
 1055              		.thumb_func
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 33


 1056              		.type	PWM_ReadPeriodBuf, %function
 1057              	PWM_ReadPeriodBuf:
 1058              	.LFB20:
 770:.\Generated_Source\PSoC4/PWM.c **** 
 771:.\Generated_Source\PSoC4/PWM.c **** 
 772:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 773:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriodBuf
 774:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 775:.\Generated_Source\PSoC4/PWM.c **** *
 776:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 777:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period buf register.
 778:.\Generated_Source\PSoC4/PWM.c **** *
 779:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 780:.\Generated_Source\PSoC4/PWM.c **** *  None
 781:.\Generated_Source\PSoC4/PWM.c **** *
 782:.\Generated_Source\PSoC4/PWM.c **** * Return:
 783:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 784:.\Generated_Source\PSoC4/PWM.c **** *
 785:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 786:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriodBuf(void)
 787:.\Generated_Source\PSoC4/PWM.c **** {
 1059              		.loc 1 787 0
 1060              		.cfi_startproc
 1061 0000 80B5     		push	{r7, lr}
 1062              		.cfi_def_cfa_offset 8
 1063              		.cfi_offset 7, -8
 1064              		.cfi_offset 14, -4
 1065 0002 00AF     		add	r7, sp, #0
 1066              		.cfi_def_cfa_register 7
 788:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 1067              		.loc 1 788 0
 1068 0004 034B     		ldr	r3, .L66
 1069 0006 1B68     		ldr	r3, [r3]
 1070 0008 1B04     		lsl	r3, r3, #16
 1071 000a 1B0C     		lsr	r3, r3, #16
 789:.\Generated_Source\PSoC4/PWM.c **** }
 1072              		.loc 1 789 0
 1073 000c 181C     		mov	r0, r3
 1074 000e BD46     		mov	sp, r7
 1075              		@ sp needed
 1076 0010 80BD     		pop	{r7, pc}
 1077              	.L67:
 1078 0012 C046     		.align	2
 1079              	.L66:
 1080 0014 18010540 		.word	1074069784
 1081              		.cfi_endproc
 1082              	.LFE20:
 1083              		.size	PWM_ReadPeriodBuf, .-PWM_ReadPeriodBuf
 1084              		.section	.text.PWM_SetPeriodSwap,"ax",%progbits
 1085              		.align	2
 1086              		.global	PWM_SetPeriodSwap
 1087              		.code	16
 1088              		.thumb_func
 1089              		.type	PWM_SetPeriodSwap, %function
 1090              	PWM_SetPeriodSwap:
 1091              	.LFB21:
 790:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 34


 791:.\Generated_Source\PSoC4/PWM.c **** 
 792:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 793:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPeriodSwap
 794:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 795:.\Generated_Source\PSoC4/PWM.c **** *
 796:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 797:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the period registers are
 798:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:.\Generated_Source\PSoC4/PWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:.\Generated_Source\PSoC4/PWM.c **** *  switch event.
 801:.\Generated_Source\PSoC4/PWM.c **** *
 802:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 803:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 804:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 805:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 806:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 807:.\Generated_Source\PSoC4/PWM.c **** *
 808:.\Generated_Source\PSoC4/PWM.c **** * Return:
 809:.\Generated_Source\PSoC4/PWM.c **** *  None
 810:.\Generated_Source\PSoC4/PWM.c **** *
 811:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 812:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPeriodSwap(uint32 swapEnable)
 813:.\Generated_Source\PSoC4/PWM.c **** {
 1092              		.loc 1 813 0
 1093              		.cfi_startproc
 1094 0000 90B5     		push	{r4, r7, lr}
 1095              		.cfi_def_cfa_offset 12
 1096              		.cfi_offset 4, -12
 1097              		.cfi_offset 7, -8
 1098              		.cfi_offset 14, -4
 1099 0002 85B0     		sub	sp, sp, #20
 1100              		.cfi_def_cfa_offset 32
 1101 0004 00AF     		add	r7, sp, #0
 1102              		.cfi_def_cfa_register 7
 1103 0006 7860     		str	r0, [r7, #4]
 814:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 815:.\Generated_Source\PSoC4/PWM.c **** 
 816:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1104              		.loc 1 816 0
 1105 0008 0F23     		mov	r3, #15
 1106 000a FC18     		add	r4, r7, r3
 1107 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1108 0010 031C     		mov	r3, r0
 1109 0012 2370     		strb	r3, [r4]
 817:.\Generated_Source\PSoC4/PWM.c **** 
 818:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 1110              		.loc 1 818 0
 1111 0014 0B4B     		ldr	r3, .L69
 1112 0016 0B4A     		ldr	r2, .L69
 1113 0018 1268     		ldr	r2, [r2]
 1114 001a 0221     		mov	r1, #2
 1115 001c 8A43     		bic	r2, r1
 1116 001e 1A60     		str	r2, [r3]
 819:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 1117              		.loc 1 819 0
 1118 0020 084B     		ldr	r3, .L69
 1119 0022 084A     		ldr	r2, .L69
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 35


 1120 0024 1168     		ldr	r1, [r2]
 1121 0026 7A68     		ldr	r2, [r7, #4]
 1122 0028 0120     		mov	r0, #1
 1123 002a 0240     		and	r2, r0
 1124 002c 5200     		lsl	r2, r2, #1
 1125 002e 0A43     		orr	r2, r1
 1126 0030 1A60     		str	r2, [r3]
 820:.\Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 821:.\Generated_Source\PSoC4/PWM.c **** 
 822:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1127              		.loc 1 822 0
 1128 0032 0F23     		mov	r3, #15
 1129 0034 FB18     		add	r3, r7, r3
 1130 0036 1B78     		ldrb	r3, [r3]
 1131 0038 181C     		mov	r0, r3
 1132 003a FFF7FEFF 		bl	CyExitCriticalSection
 823:.\Generated_Source\PSoC4/PWM.c **** }
 1133              		.loc 1 823 0
 1134 003e BD46     		mov	sp, r7
 1135 0040 05B0     		add	sp, sp, #20
 1136              		@ sp needed
 1137 0042 90BD     		pop	{r4, r7, pc}
 1138              	.L70:
 1139              		.align	2
 1140              	.L69:
 1141 0044 00010540 		.word	1074069760
 1142              		.cfi_endproc
 1143              	.LFE21:
 1144              		.size	PWM_SetPeriodSwap, .-PWM_SetPeriodSwap
 1145              		.section	.text.PWM_WriteCompare,"ax",%progbits
 1146              		.align	2
 1147              		.global	PWM_WriteCompare
 1148              		.code	16
 1149              		.thumb_func
 1150              		.type	PWM_WriteCompare, %function
 1151              	PWM_WriteCompare:
 1152              	.LFB22:
 824:.\Generated_Source\PSoC4/PWM.c **** 
 825:.\Generated_Source\PSoC4/PWM.c **** 
 826:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 827:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompare
 828:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 829:.\Generated_Source\PSoC4/PWM.c **** *
 830:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 831:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:.\Generated_Source\PSoC4/PWM.c **** *
 834:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 835:.\Generated_Source\PSoC4/PWM.c **** *  compare: Compare value
 836:.\Generated_Source\PSoC4/PWM.c **** *
 837:.\Generated_Source\PSoC4/PWM.c **** * Return:
 838:.\Generated_Source\PSoC4/PWM.c **** *  None
 839:.\Generated_Source\PSoC4/PWM.c **** *
 840:.\Generated_Source\PSoC4/PWM.c **** * Note:
 841:.\Generated_Source\PSoC4/PWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:.\Generated_Source\PSoC4/PWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:.\Generated_Source\PSoC4/PWM.c **** *  PSoC 4100/PSoC 4200 devices.
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 36


 844:.\Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:.\Generated_Source\PSoC4/PWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:.\Generated_Source\PSoC4/PWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:.\Generated_Source\PSoC4/PWM.c **** *
 848:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 849:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompare(uint32 compare)
 850:.\Generated_Source\PSoC4/PWM.c **** {
 1153              		.loc 1 850 0
 1154              		.cfi_startproc
 1155 0000 80B5     		push	{r7, lr}
 1156              		.cfi_def_cfa_offset 8
 1157              		.cfi_offset 7, -8
 1158              		.cfi_offset 14, -4
 1159 0002 82B0     		sub	sp, sp, #8
 1160              		.cfi_def_cfa_offset 16
 1161 0004 00AF     		add	r7, sp, #0
 1162              		.cfi_def_cfa_register 7
 1163 0006 7860     		str	r0, [r7, #4]
 851:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 852:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 853:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 854:.\Generated_Source\PSoC4/PWM.c **** 
 855:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 856:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 857:.\Generated_Source\PSoC4/PWM.c **** 
 858:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:.\Generated_Source\PSoC4/PWM.c ****         {
 860:.\Generated_Source\PSoC4/PWM.c ****             compare++;
 861:.\Generated_Source\PSoC4/PWM.c ****         }
 862:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compare))
 863:.\Generated_Source\PSoC4/PWM.c ****         {
 864:.\Generated_Source\PSoC4/PWM.c ****             compare--;
 865:.\Generated_Source\PSoC4/PWM.c ****         }
 866:.\Generated_Source\PSoC4/PWM.c ****         else
 867:.\Generated_Source\PSoC4/PWM.c ****         {
 868:.\Generated_Source\PSoC4/PWM.c ****         }
 869:.\Generated_Source\PSoC4/PWM.c ****         
 870:.\Generated_Source\PSoC4/PWM.c ****     
 871:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 872:.\Generated_Source\PSoC4/PWM.c ****     
 873:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 1164              		.loc 1 873 0
 1165 0008 034B     		ldr	r3, .L72
 1166 000a 7A68     		ldr	r2, [r7, #4]
 1167 000c 1204     		lsl	r2, r2, #16
 1168 000e 120C     		lsr	r2, r2, #16
 1169 0010 1A60     		str	r2, [r3]
 874:.\Generated_Source\PSoC4/PWM.c **** }
 1170              		.loc 1 874 0
 1171 0012 BD46     		mov	sp, r7
 1172 0014 02B0     		add	sp, sp, #8
 1173              		@ sp needed
 1174 0016 80BD     		pop	{r7, pc}
 1175              	.L73:
 1176              		.align	2
 1177              	.L72:
 1178 0018 0C010540 		.word	1074069772
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 37


 1179              		.cfi_endproc
 1180              	.LFE22:
 1181              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 1182              		.section	.text.PWM_ReadCompare,"ax",%progbits
 1183              		.align	2
 1184              		.global	PWM_ReadCompare
 1185              		.code	16
 1186              		.thumb_func
 1187              		.type	PWM_ReadCompare, %function
 1188              	PWM_ReadCompare:
 1189              	.LFB23:
 875:.\Generated_Source\PSoC4/PWM.c **** 
 876:.\Generated_Source\PSoC4/PWM.c **** 
 877:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 878:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompare
 879:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 880:.\Generated_Source\PSoC4/PWM.c **** *
 881:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 882:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:.\Generated_Source\PSoC4/PWM.c **** *  or in Quadrature Decoder modes.
 884:.\Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:.\Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:.\Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 887:.\Generated_Source\PSoC4/PWM.c **** *
 888:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 889:.\Generated_Source\PSoC4/PWM.c **** *  None
 890:.\Generated_Source\PSoC4/PWM.c **** *
 891:.\Generated_Source\PSoC4/PWM.c **** * Return:
 892:.\Generated_Source\PSoC4/PWM.c **** *  Compare value
 893:.\Generated_Source\PSoC4/PWM.c **** *
 894:.\Generated_Source\PSoC4/PWM.c **** * Note:
 895:.\Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:.\Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:.\Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 898:.\Generated_Source\PSoC4/PWM.c **** *
 899:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompare(void)
 901:.\Generated_Source\PSoC4/PWM.c **** {
 1190              		.loc 1 901 0
 1191              		.cfi_startproc
 1192 0000 80B5     		push	{r7, lr}
 1193              		.cfi_def_cfa_offset 8
 1194              		.cfi_offset 7, -8
 1195              		.cfi_offset 14, -4
 1196 0002 00AF     		add	r7, sp, #0
 1197              		.cfi_def_cfa_register 7
 902:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 903:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/PWM.c **** 
 907:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 908:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 909:.\Generated_Source\PSoC4/PWM.c ****         
 910:.\Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_REG;
 911:.\Generated_Source\PSoC4/PWM.c ****         
 912:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 38


 913:.\Generated_Source\PSoC4/PWM.c ****         {
 914:.\Generated_Source\PSoC4/PWM.c ****             regVal--;
 915:.\Generated_Source\PSoC4/PWM.c ****         }
 916:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:.\Generated_Source\PSoC4/PWM.c ****         {
 918:.\Generated_Source\PSoC4/PWM.c ****             regVal++;
 919:.\Generated_Source\PSoC4/PWM.c ****         }
 920:.\Generated_Source\PSoC4/PWM.c ****         else
 921:.\Generated_Source\PSoC4/PWM.c ****         {
 922:.\Generated_Source\PSoC4/PWM.c ****         }
 923:.\Generated_Source\PSoC4/PWM.c **** 
 924:.\Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
 925:.\Generated_Source\PSoC4/PWM.c ****     #else
 926:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1198              		.loc 1 926 0
 1199 0004 034B     		ldr	r3, .L76
 1200 0006 1B68     		ldr	r3, [r3]
 1201 0008 1B04     		lsl	r3, r3, #16
 1202 000a 1B0C     		lsr	r3, r3, #16
 927:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 928:.\Generated_Source\PSoC4/PWM.c **** }
 1203              		.loc 1 928 0
 1204 000c 181C     		mov	r0, r3
 1205 000e BD46     		mov	sp, r7
 1206              		@ sp needed
 1207 0010 80BD     		pop	{r7, pc}
 1208              	.L77:
 1209 0012 C046     		.align	2
 1210              	.L76:
 1211 0014 0C010540 		.word	1074069772
 1212              		.cfi_endproc
 1213              	.LFE23:
 1214              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 1215              		.section	.text.PWM_WriteCompareBuf,"ax",%progbits
 1216              		.align	2
 1217              		.global	PWM_WriteCompareBuf
 1218              		.code	16
 1219              		.thumb_func
 1220              		.type	PWM_WriteCompareBuf, %function
 1221              	PWM_WriteCompareBuf:
 1222              	.LFB24:
 929:.\Generated_Source\PSoC4/PWM.c **** 
 930:.\Generated_Source\PSoC4/PWM.c **** 
 931:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 932:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompareBuf
 933:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 934:.\Generated_Source\PSoC4/PWM.c **** *
 935:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 936:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:.\Generated_Source\PSoC4/PWM.c **** *
 939:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 940:.\Generated_Source\PSoC4/PWM.c **** *  compareBuf: Compare value
 941:.\Generated_Source\PSoC4/PWM.c **** *
 942:.\Generated_Source\PSoC4/PWM.c **** * Return:
 943:.\Generated_Source\PSoC4/PWM.c **** *  None
 944:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 39


 945:.\Generated_Source\PSoC4/PWM.c **** * Note:
 946:.\Generated_Source\PSoC4/PWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:.\Generated_Source\PSoC4/PWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:.\Generated_Source\PSoC4/PWM.c **** *  PSoC 4100/PSoC 4200 devices.
 949:.\Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:.\Generated_Source\PSoC4/PWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:.\Generated_Source\PSoC4/PWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:.\Generated_Source\PSoC4/PWM.c **** *
 953:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 954:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompareBuf(uint32 compareBuf)
 955:.\Generated_Source\PSoC4/PWM.c **** {
 1223              		.loc 1 955 0
 1224              		.cfi_startproc
 1225 0000 80B5     		push	{r7, lr}
 1226              		.cfi_def_cfa_offset 8
 1227              		.cfi_offset 7, -8
 1228              		.cfi_offset 14, -4
 1229 0002 82B0     		sub	sp, sp, #8
 1230              		.cfi_def_cfa_offset 16
 1231 0004 00AF     		add	r7, sp, #0
 1232              		.cfi_def_cfa_register 7
 1233 0006 7860     		str	r0, [r7, #4]
 956:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 957:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 958:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 959:.\Generated_Source\PSoC4/PWM.c **** 
 960:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 961:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 962:.\Generated_Source\PSoC4/PWM.c **** 
 963:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:.\Generated_Source\PSoC4/PWM.c ****         {
 965:.\Generated_Source\PSoC4/PWM.c ****             compareBuf++;
 966:.\Generated_Source\PSoC4/PWM.c ****         }
 967:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compareBuf))
 968:.\Generated_Source\PSoC4/PWM.c ****         {
 969:.\Generated_Source\PSoC4/PWM.c ****             compareBuf --;
 970:.\Generated_Source\PSoC4/PWM.c ****         }
 971:.\Generated_Source\PSoC4/PWM.c ****         else
 972:.\Generated_Source\PSoC4/PWM.c ****         {
 973:.\Generated_Source\PSoC4/PWM.c ****         }
 974:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 975:.\Generated_Source\PSoC4/PWM.c ****     
 976:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 1234              		.loc 1 976 0
 1235 0008 034B     		ldr	r3, .L79
 1236 000a 7A68     		ldr	r2, [r7, #4]
 1237 000c 1204     		lsl	r2, r2, #16
 1238 000e 120C     		lsr	r2, r2, #16
 1239 0010 1A60     		str	r2, [r3]
 977:.\Generated_Source\PSoC4/PWM.c **** }
 1240              		.loc 1 977 0
 1241 0012 BD46     		mov	sp, r7
 1242 0014 02B0     		add	sp, sp, #8
 1243              		@ sp needed
 1244 0016 80BD     		pop	{r7, pc}
 1245              	.L80:
 1246              		.align	2
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 40


 1247              	.L79:
 1248 0018 10010540 		.word	1074069776
 1249              		.cfi_endproc
 1250              	.LFE24:
 1251              		.size	PWM_WriteCompareBuf, .-PWM_WriteCompareBuf
 1252              		.section	.text.PWM_ReadCompareBuf,"ax",%progbits
 1253              		.align	2
 1254              		.global	PWM_ReadCompareBuf
 1255              		.code	16
 1256              		.thumb_func
 1257              		.type	PWM_ReadCompareBuf, %function
 1258              	PWM_ReadCompareBuf:
 1259              	.LFB25:
 978:.\Generated_Source\PSoC4/PWM.c **** 
 979:.\Generated_Source\PSoC4/PWM.c **** 
 980:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 981:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompareBuf
 982:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 983:.\Generated_Source\PSoC4/PWM.c **** *
 984:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 985:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:.\Generated_Source\PSoC4/PWM.c **** *  Capture or in Quadrature Decoder modes.
 987:.\Generated_Source\PSoC4/PWM.c **** *
 988:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 989:.\Generated_Source\PSoC4/PWM.c **** *  None
 990:.\Generated_Source\PSoC4/PWM.c **** *
 991:.\Generated_Source\PSoC4/PWM.c **** * Return:
 992:.\Generated_Source\PSoC4/PWM.c **** *  Compare buffer value
 993:.\Generated_Source\PSoC4/PWM.c **** *
 994:.\Generated_Source\PSoC4/PWM.c **** * Note:
 995:.\Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:.\Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:.\Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 998:.\Generated_Source\PSoC4/PWM.c **** *
 999:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1000:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompareBuf(void)
1001:.\Generated_Source\PSoC4/PWM.c **** {
 1260              		.loc 1 1001 0
 1261              		.cfi_startproc
 1262 0000 80B5     		push	{r7, lr}
 1263              		.cfi_def_cfa_offset 8
 1264              		.cfi_offset 7, -8
 1265              		.cfi_offset 14, -4
 1266 0002 00AF     		add	r7, sp, #0
 1267              		.cfi_def_cfa_register 7
1002:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
1003:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
1004:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
1005:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
1006:.\Generated_Source\PSoC4/PWM.c **** 
1007:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
1008:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
1009:.\Generated_Source\PSoC4/PWM.c **** 
1010:.\Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_BUF_REG;
1011:.\Generated_Source\PSoC4/PWM.c ****         
1012:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
1013:.\Generated_Source\PSoC4/PWM.c ****         {
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 41


1014:.\Generated_Source\PSoC4/PWM.c ****             regVal--;
1015:.\Generated_Source\PSoC4/PWM.c ****         }
1016:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:.\Generated_Source\PSoC4/PWM.c ****         {
1018:.\Generated_Source\PSoC4/PWM.c ****             regVal++;
1019:.\Generated_Source\PSoC4/PWM.c ****         }
1020:.\Generated_Source\PSoC4/PWM.c ****         else
1021:.\Generated_Source\PSoC4/PWM.c ****         {
1022:.\Generated_Source\PSoC4/PWM.c ****         }
1023:.\Generated_Source\PSoC4/PWM.c **** 
1024:.\Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
1025:.\Generated_Source\PSoC4/PWM.c ****     #else
1026:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1268              		.loc 1 1026 0
 1269 0004 034B     		ldr	r3, .L83
 1270 0006 1B68     		ldr	r3, [r3]
 1271 0008 1B04     		lsl	r3, r3, #16
 1272 000a 1B0C     		lsr	r3, r3, #16
1027:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
1028:.\Generated_Source\PSoC4/PWM.c **** }
 1273              		.loc 1 1028 0
 1274 000c 181C     		mov	r0, r3
 1275 000e BD46     		mov	sp, r7
 1276              		@ sp needed
 1277 0010 80BD     		pop	{r7, pc}
 1278              	.L84:
 1279 0012 C046     		.align	2
 1280              	.L83:
 1281 0014 10010540 		.word	1074069776
 1282              		.cfi_endproc
 1283              	.LFE25:
 1284              		.size	PWM_ReadCompareBuf, .-PWM_ReadCompareBuf
 1285              		.section	.text.PWM_ReadCapture,"ax",%progbits
 1286              		.align	2
 1287              		.global	PWM_ReadCapture
 1288              		.code	16
 1289              		.thumb_func
 1290              		.type	PWM_ReadCapture, %function
 1291              	PWM_ReadCapture:
 1292              	.LFB26:
1029:.\Generated_Source\PSoC4/PWM.c **** 
1030:.\Generated_Source\PSoC4/PWM.c **** 
1031:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1032:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCapture
1033:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1034:.\Generated_Source\PSoC4/PWM.c **** *
1035:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1036:.\Generated_Source\PSoC4/PWM.c **** *  Reads the captured counter value. This API is applicable only for
1037:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:.\Generated_Source\PSoC4/PWM.c **** *
1039:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1040:.\Generated_Source\PSoC4/PWM.c **** *  None
1041:.\Generated_Source\PSoC4/PWM.c **** *
1042:.\Generated_Source\PSoC4/PWM.c **** * Return:
1043:.\Generated_Source\PSoC4/PWM.c **** *  Capture value
1044:.\Generated_Source\PSoC4/PWM.c **** *
1045:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 42


1046:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCapture(void)
1047:.\Generated_Source\PSoC4/PWM.c **** {
 1293              		.loc 1 1047 0
 1294              		.cfi_startproc
 1295 0000 80B5     		push	{r7, lr}
 1296              		.cfi_def_cfa_offset 8
 1297              		.cfi_offset 7, -8
 1298              		.cfi_offset 14, -4
 1299 0002 00AF     		add	r7, sp, #0
 1300              		.cfi_def_cfa_register 7
1048:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1301              		.loc 1 1048 0
 1302 0004 034B     		ldr	r3, .L87
 1303 0006 1B68     		ldr	r3, [r3]
 1304 0008 1B04     		lsl	r3, r3, #16
 1305 000a 1B0C     		lsr	r3, r3, #16
1049:.\Generated_Source\PSoC4/PWM.c **** }
 1306              		.loc 1 1049 0
 1307 000c 181C     		mov	r0, r3
 1308 000e BD46     		mov	sp, r7
 1309              		@ sp needed
 1310 0010 80BD     		pop	{r7, pc}
 1311              	.L88:
 1312 0012 C046     		.align	2
 1313              	.L87:
 1314 0014 0C010540 		.word	1074069772
 1315              		.cfi_endproc
 1316              	.LFE26:
 1317              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 1318              		.section	.text.PWM_ReadCaptureBuf,"ax",%progbits
 1319              		.align	2
 1320              		.global	PWM_ReadCaptureBuf
 1321              		.code	16
 1322              		.thumb_func
 1323              		.type	PWM_ReadCaptureBuf, %function
 1324              	PWM_ReadCaptureBuf:
 1325              	.LFB27:
1050:.\Generated_Source\PSoC4/PWM.c **** 
1051:.\Generated_Source\PSoC4/PWM.c **** 
1052:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1053:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCaptureBuf
1054:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1055:.\Generated_Source\PSoC4/PWM.c **** *
1056:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1057:.\Generated_Source\PSoC4/PWM.c **** *  Reads the capture buffer register. This API is applicable only for
1058:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:.\Generated_Source\PSoC4/PWM.c **** *
1060:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1061:.\Generated_Source\PSoC4/PWM.c **** *  None
1062:.\Generated_Source\PSoC4/PWM.c **** *
1063:.\Generated_Source\PSoC4/PWM.c **** * Return:
1064:.\Generated_Source\PSoC4/PWM.c **** *  Capture buffer value
1065:.\Generated_Source\PSoC4/PWM.c **** *
1066:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1067:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCaptureBuf(void)
1068:.\Generated_Source\PSoC4/PWM.c **** {
 1326              		.loc 1 1068 0
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 43


 1327              		.cfi_startproc
 1328 0000 80B5     		push	{r7, lr}
 1329              		.cfi_def_cfa_offset 8
 1330              		.cfi_offset 7, -8
 1331              		.cfi_offset 14, -4
 1332 0002 00AF     		add	r7, sp, #0
 1333              		.cfi_def_cfa_register 7
1069:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1334              		.loc 1 1069 0
 1335 0004 034B     		ldr	r3, .L91
 1336 0006 1B68     		ldr	r3, [r3]
 1337 0008 1B04     		lsl	r3, r3, #16
 1338 000a 1B0C     		lsr	r3, r3, #16
1070:.\Generated_Source\PSoC4/PWM.c **** }
 1339              		.loc 1 1070 0
 1340 000c 181C     		mov	r0, r3
 1341 000e BD46     		mov	sp, r7
 1342              		@ sp needed
 1343 0010 80BD     		pop	{r7, pc}
 1344              	.L92:
 1345 0012 C046     		.align	2
 1346              	.L91:
 1347 0014 10010540 		.word	1074069776
 1348              		.cfi_endproc
 1349              	.LFE27:
 1350              		.size	PWM_ReadCaptureBuf, .-PWM_ReadCaptureBuf
 1351              		.section	.text.PWM_SetCaptureMode,"ax",%progbits
 1352              		.align	2
 1353              		.global	PWM_SetCaptureMode
 1354              		.code	16
 1355              		.thumb_func
 1356              		.type	PWM_SetCaptureMode, %function
 1357              	PWM_SetCaptureMode:
 1358              	.LFB28:
1071:.\Generated_Source\PSoC4/PWM.c **** 
1072:.\Generated_Source\PSoC4/PWM.c **** 
1073:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1074:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCaptureMode
1075:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1076:.\Generated_Source\PSoC4/PWM.c **** *
1077:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1078:.\Generated_Source\PSoC4/PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:.\Generated_Source\PSoC4/PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:.\Generated_Source\PSoC4/PWM.c **** *  Quadrature Decoder modes.
1081:.\Generated_Source\PSoC4/PWM.c **** *
1082:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1083:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1084:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1085:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1086:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1087:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1088:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1089:.\Generated_Source\PSoC4/PWM.c **** *
1090:.\Generated_Source\PSoC4/PWM.c **** * Return:
1091:.\Generated_Source\PSoC4/PWM.c **** *  None
1092:.\Generated_Source\PSoC4/PWM.c **** *
1093:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 44


1094:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCaptureMode(uint32 triggerMode)
1095:.\Generated_Source\PSoC4/PWM.c **** {
 1359              		.loc 1 1095 0
 1360              		.cfi_startproc
 1361 0000 90B5     		push	{r4, r7, lr}
 1362              		.cfi_def_cfa_offset 12
 1363              		.cfi_offset 4, -12
 1364              		.cfi_offset 7, -8
 1365              		.cfi_offset 14, -4
 1366 0002 85B0     		sub	sp, sp, #20
 1367              		.cfi_def_cfa_offset 32
 1368 0004 00AF     		add	r7, sp, #0
 1369              		.cfi_def_cfa_register 7
 1370 0006 7860     		str	r0, [r7, #4]
1096:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1097:.\Generated_Source\PSoC4/PWM.c **** 
1098:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1371              		.loc 1 1098 0
 1372 0008 0F23     		mov	r3, #15
 1373 000a FC18     		add	r4, r7, r3
 1374 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1375 0010 031C     		mov	r3, r0
 1376 0012 2370     		strb	r3, [r4]
1099:.\Generated_Source\PSoC4/PWM.c **** 
1100:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
 1377              		.loc 1 1100 0
 1378 0014 0A4B     		ldr	r3, .L94
 1379 0016 0A4A     		ldr	r2, .L94
 1380 0018 1268     		ldr	r2, [r2]
 1381 001a 0321     		mov	r1, #3
 1382 001c 8A43     		bic	r2, r1
 1383 001e 1A60     		str	r2, [r3]
1101:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 1384              		.loc 1 1101 0
 1385 0020 074B     		ldr	r3, .L94
 1386 0022 074A     		ldr	r2, .L94
 1387 0024 1168     		ldr	r1, [r2]
 1388 0026 7A68     		ldr	r2, [r7, #4]
 1389 0028 0A43     		orr	r2, r1
 1390 002a 1A60     		str	r2, [r3]
1102:.\Generated_Source\PSoC4/PWM.c **** 
1103:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1391              		.loc 1 1103 0
 1392 002c 0F23     		mov	r3, #15
 1393 002e FB18     		add	r3, r7, r3
 1394 0030 1B78     		ldrb	r3, [r3]
 1395 0032 181C     		mov	r0, r3
 1396 0034 FFF7FEFF 		bl	CyExitCriticalSection
1104:.\Generated_Source\PSoC4/PWM.c **** }
 1397              		.loc 1 1104 0
 1398 0038 BD46     		mov	sp, r7
 1399 003a 05B0     		add	sp, sp, #20
 1400              		@ sp needed
 1401 003c 90BD     		pop	{r4, r7, pc}
 1402              	.L95:
 1403 003e C046     		.align	2
 1404              	.L94:
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 45


 1405 0040 24010540 		.word	1074069796
 1406              		.cfi_endproc
 1407              	.LFE28:
 1408              		.size	PWM_SetCaptureMode, .-PWM_SetCaptureMode
 1409              		.section	.text.PWM_SetReloadMode,"ax",%progbits
 1410              		.align	2
 1411              		.global	PWM_SetReloadMode
 1412              		.code	16
 1413              		.thumb_func
 1414              		.type	PWM_SetReloadMode, %function
 1415              	PWM_SetReloadMode:
 1416              	.LFB29:
1105:.\Generated_Source\PSoC4/PWM.c **** 
1106:.\Generated_Source\PSoC4/PWM.c **** 
1107:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1108:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetReloadMode
1109:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1110:.\Generated_Source\PSoC4/PWM.c **** *
1111:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1112:.\Generated_Source\PSoC4/PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:.\Generated_Source\PSoC4/PWM.c **** *  input.
1114:.\Generated_Source\PSoC4/PWM.c **** *
1115:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1116:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1117:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1118:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1119:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1120:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1121:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1122:.\Generated_Source\PSoC4/PWM.c **** *
1123:.\Generated_Source\PSoC4/PWM.c **** * Return:
1124:.\Generated_Source\PSoC4/PWM.c **** *  None
1125:.\Generated_Source\PSoC4/PWM.c **** *
1126:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1127:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetReloadMode(uint32 triggerMode)
1128:.\Generated_Source\PSoC4/PWM.c **** {
 1417              		.loc 1 1128 0
 1418              		.cfi_startproc
 1419 0000 90B5     		push	{r4, r7, lr}
 1420              		.cfi_def_cfa_offset 12
 1421              		.cfi_offset 4, -12
 1422              		.cfi_offset 7, -8
 1423              		.cfi_offset 14, -4
 1424 0002 85B0     		sub	sp, sp, #20
 1425              		.cfi_def_cfa_offset 32
 1426 0004 00AF     		add	r7, sp, #0
 1427              		.cfi_def_cfa_register 7
 1428 0006 7860     		str	r0, [r7, #4]
1129:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1130:.\Generated_Source\PSoC4/PWM.c **** 
1131:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1429              		.loc 1 1131 0
 1430 0008 0F23     		mov	r3, #15
 1431 000a FC18     		add	r4, r7, r3
 1432 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1433 0010 031C     		mov	r3, r0
 1434 0012 2370     		strb	r3, [r4]
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 46


1132:.\Generated_Source\PSoC4/PWM.c **** 
1133:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
 1435              		.loc 1 1133 0
 1436 0014 0A4B     		ldr	r3, .L97
 1437 0016 0A4A     		ldr	r2, .L97
 1438 0018 1268     		ldr	r2, [r2]
 1439 001a 3021     		mov	r1, #48
 1440 001c 8A43     		bic	r2, r1
 1441 001e 1A60     		str	r2, [r3]
1134:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1442              		.loc 1 1134 0
 1443 0020 074B     		ldr	r3, .L97
 1444 0022 074A     		ldr	r2, .L97
 1445 0024 1168     		ldr	r1, [r2]
 1446 0026 7A68     		ldr	r2, [r7, #4]
 1447 0028 1201     		lsl	r2, r2, #4
 1448 002a 0A43     		orr	r2, r1
 1449 002c 1A60     		str	r2, [r3]
1135:.\Generated_Source\PSoC4/PWM.c **** 
1136:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1450              		.loc 1 1136 0
 1451 002e 0F23     		mov	r3, #15
 1452 0030 FB18     		add	r3, r7, r3
 1453 0032 1B78     		ldrb	r3, [r3]
 1454 0034 181C     		mov	r0, r3
 1455 0036 FFF7FEFF 		bl	CyExitCriticalSection
1137:.\Generated_Source\PSoC4/PWM.c **** }
 1456              		.loc 1 1137 0
 1457 003a BD46     		mov	sp, r7
 1458 003c 05B0     		add	sp, sp, #20
 1459              		@ sp needed
 1460 003e 90BD     		pop	{r4, r7, pc}
 1461              	.L98:
 1462              		.align	2
 1463              	.L97:
 1464 0040 24010540 		.word	1074069796
 1465              		.cfi_endproc
 1466              	.LFE29:
 1467              		.size	PWM_SetReloadMode, .-PWM_SetReloadMode
 1468              		.section	.text.PWM_SetStartMode,"ax",%progbits
 1469              		.align	2
 1470              		.global	PWM_SetStartMode
 1471              		.code	16
 1472              		.thumb_func
 1473              		.type	PWM_SetStartMode, %function
 1474              	PWM_SetStartMode:
 1475              	.LFB30:
1138:.\Generated_Source\PSoC4/PWM.c **** 
1139:.\Generated_Source\PSoC4/PWM.c **** 
1140:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1141:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStartMode
1142:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1143:.\Generated_Source\PSoC4/PWM.c **** *
1144:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1145:.\Generated_Source\PSoC4/PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:.\Generated_Source\PSoC4/PWM.c **** *  phiB input.
1147:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 47


1148:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1149:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1150:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1151:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1152:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1153:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1154:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1155:.\Generated_Source\PSoC4/PWM.c **** *
1156:.\Generated_Source\PSoC4/PWM.c **** * Return:
1157:.\Generated_Source\PSoC4/PWM.c **** *  None
1158:.\Generated_Source\PSoC4/PWM.c **** *
1159:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1160:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStartMode(uint32 triggerMode)
1161:.\Generated_Source\PSoC4/PWM.c **** {
 1476              		.loc 1 1161 0
 1477              		.cfi_startproc
 1478 0000 90B5     		push	{r4, r7, lr}
 1479              		.cfi_def_cfa_offset 12
 1480              		.cfi_offset 4, -12
 1481              		.cfi_offset 7, -8
 1482              		.cfi_offset 14, -4
 1483 0002 85B0     		sub	sp, sp, #20
 1484              		.cfi_def_cfa_offset 32
 1485 0004 00AF     		add	r7, sp, #0
 1486              		.cfi_def_cfa_register 7
 1487 0006 7860     		str	r0, [r7, #4]
1162:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1163:.\Generated_Source\PSoC4/PWM.c **** 
1164:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1488              		.loc 1 1164 0
 1489 0008 0F23     		mov	r3, #15
 1490 000a FC18     		add	r4, r7, r3
 1491 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1492 0010 031C     		mov	r3, r0
 1493 0012 2370     		strb	r3, [r4]
1165:.\Generated_Source\PSoC4/PWM.c **** 
1166:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
 1494              		.loc 1 1166 0
 1495 0014 0A4B     		ldr	r3, .L100
 1496 0016 0A4A     		ldr	r2, .L100
 1497 0018 1268     		ldr	r2, [r2]
 1498 001a 0A49     		ldr	r1, .L100+4
 1499 001c 0A40     		and	r2, r1
 1500 001e 1A60     		str	r2, [r3]
1167:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1501              		.loc 1 1167 0
 1502 0020 074B     		ldr	r3, .L100
 1503 0022 074A     		ldr	r2, .L100
 1504 0024 1168     		ldr	r1, [r2]
 1505 0026 7A68     		ldr	r2, [r7, #4]
 1506 0028 1202     		lsl	r2, r2, #8
 1507 002a 0A43     		orr	r2, r1
 1508 002c 1A60     		str	r2, [r3]
1168:.\Generated_Source\PSoC4/PWM.c **** 
1169:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1509              		.loc 1 1169 0
 1510 002e 0F23     		mov	r3, #15
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 48


 1511 0030 FB18     		add	r3, r7, r3
 1512 0032 1B78     		ldrb	r3, [r3]
 1513 0034 181C     		mov	r0, r3
 1514 0036 FFF7FEFF 		bl	CyExitCriticalSection
1170:.\Generated_Source\PSoC4/PWM.c **** }
 1515              		.loc 1 1170 0
 1516 003a BD46     		mov	sp, r7
 1517 003c 05B0     		add	sp, sp, #20
 1518              		@ sp needed
 1519 003e 90BD     		pop	{r4, r7, pc}
 1520              	.L101:
 1521              		.align	2
 1522              	.L100:
 1523 0040 24010540 		.word	1074069796
 1524 0044 FFFCFFFF 		.word	-769
 1525              		.cfi_endproc
 1526              	.LFE30:
 1527              		.size	PWM_SetStartMode, .-PWM_SetStartMode
 1528              		.section	.text.PWM_SetStopMode,"ax",%progbits
 1529              		.align	2
 1530              		.global	PWM_SetStopMode
 1531              		.code	16
 1532              		.thumb_func
 1533              		.type	PWM_SetStopMode, %function
 1534              	PWM_SetStopMode:
 1535              	.LFB31:
1171:.\Generated_Source\PSoC4/PWM.c **** 
1172:.\Generated_Source\PSoC4/PWM.c **** 
1173:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1174:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStopMode
1175:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1176:.\Generated_Source\PSoC4/PWM.c **** *
1177:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1178:.\Generated_Source\PSoC4/PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:.\Generated_Source\PSoC4/PWM.c **** *
1180:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1181:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1182:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1183:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1184:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1185:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1186:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1187:.\Generated_Source\PSoC4/PWM.c **** *
1188:.\Generated_Source\PSoC4/PWM.c **** * Return:
1189:.\Generated_Source\PSoC4/PWM.c **** *  None
1190:.\Generated_Source\PSoC4/PWM.c **** *
1191:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1192:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStopMode(uint32 triggerMode)
1193:.\Generated_Source\PSoC4/PWM.c **** {
 1536              		.loc 1 1193 0
 1537              		.cfi_startproc
 1538 0000 90B5     		push	{r4, r7, lr}
 1539              		.cfi_def_cfa_offset 12
 1540              		.cfi_offset 4, -12
 1541              		.cfi_offset 7, -8
 1542              		.cfi_offset 14, -4
 1543 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 49


 1544              		.cfi_def_cfa_offset 32
 1545 0004 00AF     		add	r7, sp, #0
 1546              		.cfi_def_cfa_register 7
 1547 0006 7860     		str	r0, [r7, #4]
1194:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1195:.\Generated_Source\PSoC4/PWM.c **** 
1196:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1548              		.loc 1 1196 0
 1549 0008 0F23     		mov	r3, #15
 1550 000a FC18     		add	r4, r7, r3
 1551 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1552 0010 031C     		mov	r3, r0
 1553 0012 2370     		strb	r3, [r4]
1197:.\Generated_Source\PSoC4/PWM.c **** 
1198:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
 1554              		.loc 1 1198 0
 1555 0014 0A4B     		ldr	r3, .L103
 1556 0016 0A4A     		ldr	r2, .L103
 1557 0018 1268     		ldr	r2, [r2]
 1558 001a C021     		mov	r1, #192
 1559 001c 8A43     		bic	r2, r1
 1560 001e 1A60     		str	r2, [r3]
1199:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1561              		.loc 1 1199 0
 1562 0020 074B     		ldr	r3, .L103
 1563 0022 074A     		ldr	r2, .L103
 1564 0024 1168     		ldr	r1, [r2]
 1565 0026 7A68     		ldr	r2, [r7, #4]
 1566 0028 9201     		lsl	r2, r2, #6
 1567 002a 0A43     		orr	r2, r1
 1568 002c 1A60     		str	r2, [r3]
1200:.\Generated_Source\PSoC4/PWM.c **** 
1201:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1569              		.loc 1 1201 0
 1570 002e 0F23     		mov	r3, #15
 1571 0030 FB18     		add	r3, r7, r3
 1572 0032 1B78     		ldrb	r3, [r3]
 1573 0034 181C     		mov	r0, r3
 1574 0036 FFF7FEFF 		bl	CyExitCriticalSection
1202:.\Generated_Source\PSoC4/PWM.c **** }
 1575              		.loc 1 1202 0
 1576 003a BD46     		mov	sp, r7
 1577 003c 05B0     		add	sp, sp, #20
 1578              		@ sp needed
 1579 003e 90BD     		pop	{r4, r7, pc}
 1580              	.L104:
 1581              		.align	2
 1582              	.L103:
 1583 0040 24010540 		.word	1074069796
 1584              		.cfi_endproc
 1585              	.LFE31:
 1586              		.size	PWM_SetStopMode, .-PWM_SetStopMode
 1587              		.section	.text.PWM_SetCountMode,"ax",%progbits
 1588              		.align	2
 1589              		.global	PWM_SetCountMode
 1590              		.code	16
 1591              		.thumb_func
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 50


 1592              		.type	PWM_SetCountMode, %function
 1593              	PWM_SetCountMode:
 1594              	.LFB32:
1203:.\Generated_Source\PSoC4/PWM.c **** 
1204:.\Generated_Source\PSoC4/PWM.c **** 
1205:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1206:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCountMode
1207:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1208:.\Generated_Source\PSoC4/PWM.c **** *
1209:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1210:.\Generated_Source\PSoC4/PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:.\Generated_Source\PSoC4/PWM.c **** *  input.
1212:.\Generated_Source\PSoC4/PWM.c **** *
1213:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1214:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1215:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1216:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1217:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1218:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1219:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1220:.\Generated_Source\PSoC4/PWM.c **** *
1221:.\Generated_Source\PSoC4/PWM.c **** * Return:
1222:.\Generated_Source\PSoC4/PWM.c **** *  None
1223:.\Generated_Source\PSoC4/PWM.c **** *
1224:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1225:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCountMode(uint32 triggerMode)
1226:.\Generated_Source\PSoC4/PWM.c **** {
 1595              		.loc 1 1226 0
 1596              		.cfi_startproc
 1597 0000 90B5     		push	{r4, r7, lr}
 1598              		.cfi_def_cfa_offset 12
 1599              		.cfi_offset 4, -12
 1600              		.cfi_offset 7, -8
 1601              		.cfi_offset 14, -4
 1602 0002 85B0     		sub	sp, sp, #20
 1603              		.cfi_def_cfa_offset 32
 1604 0004 00AF     		add	r7, sp, #0
 1605              		.cfi_def_cfa_register 7
 1606 0006 7860     		str	r0, [r7, #4]
1227:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1228:.\Generated_Source\PSoC4/PWM.c **** 
1229:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1607              		.loc 1 1229 0
 1608 0008 0F23     		mov	r3, #15
 1609 000a FC18     		add	r4, r7, r3
 1610 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1611 0010 031C     		mov	r3, r0
 1612 0012 2370     		strb	r3, [r4]
1230:.\Generated_Source\PSoC4/PWM.c **** 
1231:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
 1613              		.loc 1 1231 0
 1614 0014 0A4B     		ldr	r3, .L106
 1615 0016 0A4A     		ldr	r2, .L106
 1616 0018 1268     		ldr	r2, [r2]
 1617 001a 0C21     		mov	r1, #12
 1618 001c 8A43     		bic	r2, r1
 1619 001e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 51


1232:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1620              		.loc 1 1232 0
 1621 0020 074B     		ldr	r3, .L106
 1622 0022 074A     		ldr	r2, .L106
 1623 0024 1168     		ldr	r1, [r2]
 1624 0026 7A68     		ldr	r2, [r7, #4]
 1625 0028 9200     		lsl	r2, r2, #2
 1626 002a 0A43     		orr	r2, r1
 1627 002c 1A60     		str	r2, [r3]
1233:.\Generated_Source\PSoC4/PWM.c **** 
1234:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1628              		.loc 1 1234 0
 1629 002e 0F23     		mov	r3, #15
 1630 0030 FB18     		add	r3, r7, r3
 1631 0032 1B78     		ldrb	r3, [r3]
 1632 0034 181C     		mov	r0, r3
 1633 0036 FFF7FEFF 		bl	CyExitCriticalSection
1235:.\Generated_Source\PSoC4/PWM.c **** }
 1634              		.loc 1 1235 0
 1635 003a BD46     		mov	sp, r7
 1636 003c 05B0     		add	sp, sp, #20
 1637              		@ sp needed
 1638 003e 90BD     		pop	{r4, r7, pc}
 1639              	.L107:
 1640              		.align	2
 1641              	.L106:
 1642 0040 24010540 		.word	1074069796
 1643              		.cfi_endproc
 1644              	.LFE32:
 1645              		.size	PWM_SetCountMode, .-PWM_SetCountMode
 1646              		.section	.text.PWM_TriggerCommand,"ax",%progbits
 1647              		.align	2
 1648              		.global	PWM_TriggerCommand
 1649              		.code	16
 1650              		.thumb_func
 1651              		.type	PWM_TriggerCommand, %function
 1652              	PWM_TriggerCommand:
 1653              	.LFB33:
1236:.\Generated_Source\PSoC4/PWM.c **** 
1237:.\Generated_Source\PSoC4/PWM.c **** 
1238:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1239:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_TriggerCommand
1240:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1241:.\Generated_Source\PSoC4/PWM.c **** *
1242:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1243:.\Generated_Source\PSoC4/PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:.\Generated_Source\PSoC4/PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:.\Generated_Source\PSoC4/PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:.\Generated_Source\PSoC4/PWM.c **** *
1247:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1248:.\Generated_Source\PSoC4/PWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:.\Generated_Source\PSoC4/PWM.c **** *        command should apply to.  This function from one instance can be used
1250:.\Generated_Source\PSoC4/PWM.c **** *        to apply the command to any of the instances in the design.
1251:.\Generated_Source\PSoC4/PWM.c **** *        The mask value for a specific instance is available with the MASK
1252:.\Generated_Source\PSoC4/PWM.c **** *        define.
1253:.\Generated_Source\PSoC4/PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1254:.\Generated_Source\PSoC4/PWM.c **** *           Timer/Counter with Capture and PWM modes.
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 52


1255:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1256:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_CAPTURE    - Trigger Capture/Switch command
1257:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_RELOAD     - Trigger Reload/Index command
1258:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_STOP       - Trigger Stop/Kill command
1259:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_START      - Trigger Start/phiB command
1260:.\Generated_Source\PSoC4/PWM.c **** *
1261:.\Generated_Source\PSoC4/PWM.c **** * Return:
1262:.\Generated_Source\PSoC4/PWM.c **** *  None
1263:.\Generated_Source\PSoC4/PWM.c **** *
1264:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1265:.\Generated_Source\PSoC4/PWM.c **** void PWM_TriggerCommand(uint32 mask, uint32 command)
1266:.\Generated_Source\PSoC4/PWM.c **** {
 1654              		.loc 1 1266 0
 1655              		.cfi_startproc
 1656 0000 90B5     		push	{r4, r7, lr}
 1657              		.cfi_def_cfa_offset 12
 1658              		.cfi_offset 4, -12
 1659              		.cfi_offset 7, -8
 1660              		.cfi_offset 14, -4
 1661 0002 85B0     		sub	sp, sp, #20
 1662              		.cfi_def_cfa_offset 32
 1663 0004 00AF     		add	r7, sp, #0
 1664              		.cfi_def_cfa_register 7
 1665 0006 7860     		str	r0, [r7, #4]
 1666 0008 3960     		str	r1, [r7]
1267:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1268:.\Generated_Source\PSoC4/PWM.c **** 
1269:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1667              		.loc 1 1269 0
 1668 000a 0F23     		mov	r3, #15
 1669 000c FC18     		add	r4, r7, r3
 1670 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1671 0012 031C     		mov	r3, r0
 1672 0014 2370     		strb	r3, [r4]
1270:.\Generated_Source\PSoC4/PWM.c **** 
1271:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
 1673              		.loc 1 1271 0
 1674 0016 074B     		ldr	r3, .L109
 1675 0018 3A68     		ldr	r2, [r7]
 1676 001a 7968     		ldr	r1, [r7, #4]
 1677 001c 9140     		lsl	r1, r1, r2
 1678 001e 0A1C     		mov	r2, r1
 1679 0020 1A60     		str	r2, [r3]
1272:.\Generated_Source\PSoC4/PWM.c **** 
1273:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1680              		.loc 1 1273 0
 1681 0022 0F23     		mov	r3, #15
 1682 0024 FB18     		add	r3, r7, r3
 1683 0026 1B78     		ldrb	r3, [r3]
 1684 0028 181C     		mov	r0, r3
 1685 002a FFF7FEFF 		bl	CyExitCriticalSection
1274:.\Generated_Source\PSoC4/PWM.c **** }
 1686              		.loc 1 1274 0
 1687 002e BD46     		mov	sp, r7
 1688 0030 05B0     		add	sp, sp, #20
 1689              		@ sp needed
 1690 0032 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 53


 1691              	.L110:
 1692              		.align	2
 1693              	.L109:
 1694 0034 08000540 		.word	1074069512
 1695              		.cfi_endproc
 1696              	.LFE33:
 1697              		.size	PWM_TriggerCommand, .-PWM_TriggerCommand
 1698              		.section	.text.PWM_ReadStatus,"ax",%progbits
 1699              		.align	2
 1700              		.global	PWM_ReadStatus
 1701              		.code	16
 1702              		.thumb_func
 1703              		.type	PWM_ReadStatus, %function
 1704              	PWM_ReadStatus:
 1705              	.LFB34:
1275:.\Generated_Source\PSoC4/PWM.c **** 
1276:.\Generated_Source\PSoC4/PWM.c **** 
1277:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1278:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadStatus
1279:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1280:.\Generated_Source\PSoC4/PWM.c **** *
1281:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1282:.\Generated_Source\PSoC4/PWM.c **** *  Reads the status of the PWM.
1283:.\Generated_Source\PSoC4/PWM.c **** *
1284:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1285:.\Generated_Source\PSoC4/PWM.c **** *  None
1286:.\Generated_Source\PSoC4/PWM.c **** *
1287:.\Generated_Source\PSoC4/PWM.c **** * Return:
1288:.\Generated_Source\PSoC4/PWM.c **** *  Status
1289:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1290:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_DOWN    - Set if counting down
1291:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_RUNNING - Set if counter is running
1292:.\Generated_Source\PSoC4/PWM.c **** *
1293:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1294:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadStatus(void)
1295:.\Generated_Source\PSoC4/PWM.c **** {
 1706              		.loc 1 1295 0
 1707              		.cfi_startproc
 1708 0000 80B5     		push	{r7, lr}
 1709              		.cfi_def_cfa_offset 8
 1710              		.cfi_offset 7, -8
 1711              		.cfi_offset 14, -4
 1712 0002 00AF     		add	r7, sp, #0
 1713              		.cfi_def_cfa_register 7
1296:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1714              		.loc 1 1296 0
 1715 0004 054B     		ldr	r3, .L113
 1716 0006 1B68     		ldr	r3, [r3]
 1717 0008 9A0F     		lsr	r2, r3, #30
1297:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1718              		.loc 1 1297 0
 1719 000a 044B     		ldr	r3, .L113
 1720 000c 1B68     		ldr	r3, [r3]
 1721 000e 0121     		mov	r1, #1
 1722 0010 0B40     		and	r3, r1
1296:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1723              		.loc 1 1296 0
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 54


 1724 0012 1343     		orr	r3, r2
1298:.\Generated_Source\PSoC4/PWM.c **** }
 1725              		.loc 1 1298 0
 1726 0014 181C     		mov	r0, r3
 1727 0016 BD46     		mov	sp, r7
 1728              		@ sp needed
 1729 0018 80BD     		pop	{r7, pc}
 1730              	.L114:
 1731 001a C046     		.align	2
 1732              	.L113:
 1733 001c 04010540 		.word	1074069764
 1734              		.cfi_endproc
 1735              	.LFE34:
 1736              		.size	PWM_ReadStatus, .-PWM_ReadStatus
 1737              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 1738              		.align	2
 1739              		.global	PWM_SetInterruptMode
 1740              		.code	16
 1741              		.thumb_func
 1742              		.type	PWM_SetInterruptMode, %function
 1743              	PWM_SetInterruptMode:
 1744              	.LFB35:
1299:.\Generated_Source\PSoC4/PWM.c **** 
1300:.\Generated_Source\PSoC4/PWM.c **** 
1301:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1302:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterruptMode
1303:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1304:.\Generated_Source\PSoC4/PWM.c **** *
1305:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1306:.\Generated_Source\PSoC4/PWM.c **** *  Sets the interrupt mask to control which interrupt
1307:.\Generated_Source\PSoC4/PWM.c **** *  requests generate the interrupt signal.
1308:.\Generated_Source\PSoC4/PWM.c **** *
1309:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1310:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of bits to be enabled
1311:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1312:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1313:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:.\Generated_Source\PSoC4/PWM.c **** *
1315:.\Generated_Source\PSoC4/PWM.c **** * Return:
1316:.\Generated_Source\PSoC4/PWM.c **** *  None
1317:.\Generated_Source\PSoC4/PWM.c **** *
1318:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1319:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterruptMode(uint32 interruptMask)
1320:.\Generated_Source\PSoC4/PWM.c **** {
 1745              		.loc 1 1320 0
 1746              		.cfi_startproc
 1747 0000 80B5     		push	{r7, lr}
 1748              		.cfi_def_cfa_offset 8
 1749              		.cfi_offset 7, -8
 1750              		.cfi_offset 14, -4
 1751 0002 82B0     		sub	sp, sp, #8
 1752              		.cfi_def_cfa_offset 16
 1753 0004 00AF     		add	r7, sp, #0
 1754              		.cfi_def_cfa_register 7
 1755 0006 7860     		str	r0, [r7, #4]
1321:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
 1756              		.loc 1 1321 0
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 55


 1757 0008 024B     		ldr	r3, .L116
 1758 000a 7A68     		ldr	r2, [r7, #4]
 1759 000c 1A60     		str	r2, [r3]
1322:.\Generated_Source\PSoC4/PWM.c **** }
 1760              		.loc 1 1322 0
 1761 000e BD46     		mov	sp, r7
 1762 0010 02B0     		add	sp, sp, #8
 1763              		@ sp needed
 1764 0012 80BD     		pop	{r7, pc}
 1765              	.L117:
 1766              		.align	2
 1767              	.L116:
 1768 0014 38010540 		.word	1074069816
 1769              		.cfi_endproc
 1770              	.LFE35:
 1771              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 1772              		.section	.text.PWM_GetInterruptSourceMasked,"ax",%progbits
 1773              		.align	2
 1774              		.global	PWM_GetInterruptSourceMasked
 1775              		.code	16
 1776              		.thumb_func
 1777              		.type	PWM_GetInterruptSourceMasked, %function
 1778              	PWM_GetInterruptSourceMasked:
 1779              	.LFB36:
1323:.\Generated_Source\PSoC4/PWM.c **** 
1324:.\Generated_Source\PSoC4/PWM.c **** 
1325:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1326:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSourceMasked
1327:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1328:.\Generated_Source\PSoC4/PWM.c **** *
1329:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1330:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:.\Generated_Source\PSoC4/PWM.c **** *
1332:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1333:.\Generated_Source\PSoC4/PWM.c **** *   None
1334:.\Generated_Source\PSoC4/PWM.c **** *
1335:.\Generated_Source\PSoC4/PWM.c **** * Return:
1336:.\Generated_Source\PSoC4/PWM.c **** *  Masked interrupt source
1337:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1338:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1339:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:.\Generated_Source\PSoC4/PWM.c **** *
1341:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1342:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSourceMasked(void)
1343:.\Generated_Source\PSoC4/PWM.c **** {
 1780              		.loc 1 1343 0
 1781              		.cfi_startproc
 1782 0000 80B5     		push	{r7, lr}
 1783              		.cfi_def_cfa_offset 8
 1784              		.cfi_offset 7, -8
 1785              		.cfi_offset 14, -4
 1786 0002 00AF     		add	r7, sp, #0
 1787              		.cfi_def_cfa_register 7
1344:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1788              		.loc 1 1344 0
 1789 0004 024B     		ldr	r3, .L120
 1790 0006 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 56


1345:.\Generated_Source\PSoC4/PWM.c **** }
 1791              		.loc 1 1345 0
 1792 0008 181C     		mov	r0, r3
 1793 000a BD46     		mov	sp, r7
 1794              		@ sp needed
 1795 000c 80BD     		pop	{r7, pc}
 1796              	.L121:
 1797 000e C046     		.align	2
 1798              	.L120:
 1799 0010 3C010540 		.word	1074069820
 1800              		.cfi_endproc
 1801              	.LFE36:
 1802              		.size	PWM_GetInterruptSourceMasked, .-PWM_GetInterruptSourceMasked
 1803              		.section	.text.PWM_GetInterruptSource,"ax",%progbits
 1804              		.align	2
 1805              		.global	PWM_GetInterruptSource
 1806              		.code	16
 1807              		.thumb_func
 1808              		.type	PWM_GetInterruptSource, %function
 1809              	PWM_GetInterruptSource:
 1810              	.LFB37:
1346:.\Generated_Source\PSoC4/PWM.c **** 
1347:.\Generated_Source\PSoC4/PWM.c **** 
1348:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1349:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSource
1350:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1351:.\Generated_Source\PSoC4/PWM.c **** *
1352:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1353:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests (without masking).
1354:.\Generated_Source\PSoC4/PWM.c **** *
1355:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1356:.\Generated_Source\PSoC4/PWM.c **** *  None
1357:.\Generated_Source\PSoC4/PWM.c **** *
1358:.\Generated_Source\PSoC4/PWM.c **** * Return:
1359:.\Generated_Source\PSoC4/PWM.c **** *  Interrupt request value
1360:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1361:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1362:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:.\Generated_Source\PSoC4/PWM.c **** *
1364:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1365:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSource(void)
1366:.\Generated_Source\PSoC4/PWM.c **** {
 1811              		.loc 1 1366 0
 1812              		.cfi_startproc
 1813 0000 80B5     		push	{r7, lr}
 1814              		.cfi_def_cfa_offset 8
 1815              		.cfi_offset 7, -8
 1816              		.cfi_offset 14, -4
 1817 0002 00AF     		add	r7, sp, #0
 1818              		.cfi_def_cfa_register 7
1367:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1819              		.loc 1 1367 0
 1820 0004 024B     		ldr	r3, .L124
 1821 0006 1B68     		ldr	r3, [r3]
1368:.\Generated_Source\PSoC4/PWM.c **** }
 1822              		.loc 1 1368 0
 1823 0008 181C     		mov	r0, r3
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 57


 1824 000a BD46     		mov	sp, r7
 1825              		@ sp needed
 1826 000c 80BD     		pop	{r7, pc}
 1827              	.L125:
 1828 000e C046     		.align	2
 1829              	.L124:
 1830 0010 30010540 		.word	1074069808
 1831              		.cfi_endproc
 1832              	.LFE37:
 1833              		.size	PWM_GetInterruptSource, .-PWM_GetInterruptSource
 1834              		.section	.text.PWM_ClearInterrupt,"ax",%progbits
 1835              		.align	2
 1836              		.global	PWM_ClearInterrupt
 1837              		.code	16
 1838              		.thumb_func
 1839              		.type	PWM_ClearInterrupt, %function
 1840              	PWM_ClearInterrupt:
 1841              	.LFB38:
1369:.\Generated_Source\PSoC4/PWM.c **** 
1370:.\Generated_Source\PSoC4/PWM.c **** 
1371:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1372:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ClearInterrupt
1373:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1374:.\Generated_Source\PSoC4/PWM.c **** *
1375:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1376:.\Generated_Source\PSoC4/PWM.c **** *  Clears the interrupt request.
1377:.\Generated_Source\PSoC4/PWM.c **** *
1378:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1379:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to clear
1380:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1381:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1382:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:.\Generated_Source\PSoC4/PWM.c **** *
1384:.\Generated_Source\PSoC4/PWM.c **** * Return:
1385:.\Generated_Source\PSoC4/PWM.c **** *  None
1386:.\Generated_Source\PSoC4/PWM.c **** *
1387:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1388:.\Generated_Source\PSoC4/PWM.c **** void PWM_ClearInterrupt(uint32 interruptMask)
1389:.\Generated_Source\PSoC4/PWM.c **** {
 1842              		.loc 1 1389 0
 1843              		.cfi_startproc
 1844 0000 80B5     		push	{r7, lr}
 1845              		.cfi_def_cfa_offset 8
 1846              		.cfi_offset 7, -8
 1847              		.cfi_offset 14, -4
 1848 0002 82B0     		sub	sp, sp, #8
 1849              		.cfi_def_cfa_offset 16
 1850 0004 00AF     		add	r7, sp, #0
 1851              		.cfi_def_cfa_register 7
 1852 0006 7860     		str	r0, [r7, #4]
1390:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1853              		.loc 1 1390 0
 1854 0008 024B     		ldr	r3, .L127
 1855 000a 7A68     		ldr	r2, [r7, #4]
 1856 000c 1A60     		str	r2, [r3]
1391:.\Generated_Source\PSoC4/PWM.c **** }
 1857              		.loc 1 1391 0
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 58


 1858 000e BD46     		mov	sp, r7
 1859 0010 02B0     		add	sp, sp, #8
 1860              		@ sp needed
 1861 0012 80BD     		pop	{r7, pc}
 1862              	.L128:
 1863              		.align	2
 1864              	.L127:
 1865 0014 30010540 		.word	1074069808
 1866              		.cfi_endproc
 1867              	.LFE38:
 1868              		.size	PWM_ClearInterrupt, .-PWM_ClearInterrupt
 1869              		.section	.text.PWM_SetInterrupt,"ax",%progbits
 1870              		.align	2
 1871              		.global	PWM_SetInterrupt
 1872              		.code	16
 1873              		.thumb_func
 1874              		.type	PWM_SetInterrupt, %function
 1875              	PWM_SetInterrupt:
 1876              	.LFB39:
1392:.\Generated_Source\PSoC4/PWM.c **** 
1393:.\Generated_Source\PSoC4/PWM.c **** 
1394:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1395:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterrupt
1396:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1397:.\Generated_Source\PSoC4/PWM.c **** *
1398:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1399:.\Generated_Source\PSoC4/PWM.c **** *  Sets a software interrupt request.
1400:.\Generated_Source\PSoC4/PWM.c **** *
1401:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1402:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to set
1403:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1404:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1405:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:.\Generated_Source\PSoC4/PWM.c **** *
1407:.\Generated_Source\PSoC4/PWM.c **** * Return:
1408:.\Generated_Source\PSoC4/PWM.c **** *  None
1409:.\Generated_Source\PSoC4/PWM.c **** *
1410:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1411:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterrupt(uint32 interruptMask)
1412:.\Generated_Source\PSoC4/PWM.c **** {
 1877              		.loc 1 1412 0
 1878              		.cfi_startproc
 1879 0000 80B5     		push	{r7, lr}
 1880              		.cfi_def_cfa_offset 8
 1881              		.cfi_offset 7, -8
 1882              		.cfi_offset 14, -4
 1883 0002 82B0     		sub	sp, sp, #8
 1884              		.cfi_def_cfa_offset 16
 1885 0004 00AF     		add	r7, sp, #0
 1886              		.cfi_def_cfa_register 7
 1887 0006 7860     		str	r0, [r7, #4]
1413:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1888              		.loc 1 1413 0
 1889 0008 024B     		ldr	r3, .L130
 1890 000a 7A68     		ldr	r2, [r7, #4]
 1891 000c 1A60     		str	r2, [r3]
1414:.\Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 59


 1892              		.loc 1 1414 0
 1893 000e BD46     		mov	sp, r7
 1894 0010 02B0     		add	sp, sp, #8
 1895              		@ sp needed
 1896 0012 80BD     		pop	{r7, pc}
 1897              	.L131:
 1898              		.align	2
 1899              	.L130:
 1900 0014 34010540 		.word	1074069812
 1901              		.cfi_endproc
 1902              	.LFE39:
 1903              		.size	PWM_SetInterrupt, .-PWM_SetInterrupt
 1904              		.text
 1905              	.Letext0:
 1906              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1907              		.section	.debug_info,"",%progbits
 1908              	.Ldebug_info0:
 1909 0000 F0060000 		.4byte	0x6f0
 1910 0004 0400     		.2byte	0x4
 1911 0006 00000000 		.4byte	.Ldebug_abbrev0
 1912 000a 04       		.byte	0x4
 1913 000b 01       		.uleb128 0x1
 1914 000c 5C040000 		.4byte	.LASF76
 1915 0010 01       		.byte	0x1
 1916 0011 13010000 		.4byte	.LASF77
 1917 0015 24000000 		.4byte	.LASF78
 1918 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1919 001d 00000000 		.4byte	0
 1920 0021 00000000 		.4byte	.Ldebug_line0
 1921 0025 02       		.uleb128 0x2
 1922 0026 01       		.byte	0x1
 1923 0027 06       		.byte	0x6
 1924 0028 CB000000 		.4byte	.LASF0
 1925 002c 02       		.uleb128 0x2
 1926 002d 01       		.byte	0x1
 1927 002e 08       		.byte	0x8
 1928 002f 12030000 		.4byte	.LASF1
 1929 0033 02       		.uleb128 0x2
 1930 0034 02       		.byte	0x2
 1931 0035 05       		.byte	0x5
 1932 0036 49030000 		.4byte	.LASF2
 1933 003a 02       		.uleb128 0x2
 1934 003b 02       		.byte	0x2
 1935 003c 07       		.byte	0x7
 1936 003d 1C020000 		.4byte	.LASF3
 1937 0041 02       		.uleb128 0x2
 1938 0042 04       		.byte	0x4
 1939 0043 05       		.byte	0x5
 1940 0044 32010000 		.4byte	.LASF4
 1941 0048 02       		.uleb128 0x2
 1942 0049 04       		.byte	0x4
 1943 004a 07       		.byte	0x7
 1944 004b 01020000 		.4byte	.LASF5
 1945 004f 02       		.uleb128 0x2
 1946 0050 08       		.byte	0x8
 1947 0051 05       		.byte	0x5
 1948 0052 BD000000 		.4byte	.LASF6
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 60


 1949 0056 02       		.uleb128 0x2
 1950 0057 08       		.byte	0x8
 1951 0058 07       		.byte	0x7
 1952 0059 6B000000 		.4byte	.LASF7
 1953 005d 03       		.uleb128 0x3
 1954 005e 04       		.byte	0x4
 1955 005f 05       		.byte	0x5
 1956 0060 696E7400 		.ascii	"int\000"
 1957 0064 02       		.uleb128 0x2
 1958 0065 04       		.byte	0x4
 1959 0066 07       		.byte	0x7
 1960 0067 D9010000 		.4byte	.LASF8
 1961 006b 04       		.uleb128 0x4
 1962 006c 3B010000 		.4byte	.LASF9
 1963 0070 02       		.byte	0x2
 1964 0071 9801     		.2byte	0x198
 1965 0073 2C000000 		.4byte	0x2c
 1966 0077 04       		.uleb128 0x4
 1967 0078 88010000 		.4byte	.LASF10
 1968 007c 02       		.byte	0x2
 1969 007d 9A01     		.2byte	0x19a
 1970 007f 48000000 		.4byte	0x48
 1971 0083 02       		.uleb128 0x2
 1972 0084 04       		.byte	0x4
 1973 0085 04       		.byte	0x4
 1974 0086 E0020000 		.4byte	.LASF11
 1975 008a 02       		.uleb128 0x2
 1976 008b 08       		.byte	0x8
 1977 008c 04       		.byte	0x4
 1978 008d 41010000 		.4byte	.LASF12
 1979 0091 02       		.uleb128 0x2
 1980 0092 01       		.byte	0x1
 1981 0093 08       		.byte	0x8
 1982 0094 9F030000 		.4byte	.LASF13
 1983 0098 04       		.uleb128 0x4
 1984 0099 7E020000 		.4byte	.LASF14
 1985 009d 02       		.byte	0x2
 1986 009e 4402     		.2byte	0x244
 1987 00a0 A4000000 		.4byte	0xa4
 1988 00a4 05       		.uleb128 0x5
 1989 00a5 77000000 		.4byte	0x77
 1990 00a9 02       		.uleb128 0x2
 1991 00aa 04       		.byte	0x4
 1992 00ab 07       		.byte	0x7
 1993 00ac 9F020000 		.4byte	.LASF15
 1994 00b0 06       		.uleb128 0x6
 1995 00b1 20030000 		.4byte	.LASF16
 1996 00b5 01       		.byte	0x1
 1997 00b6 26       		.byte	0x26
 1998 00b7 00000000 		.4byte	.LFB0
 1999 00bb 60000000 		.4byte	.LFE0-.LFB0
 2000 00bf 01       		.uleb128 0x1
 2001 00c0 9C       		.byte	0x9c
 2002 00c1 07       		.uleb128 0x7
 2003 00c2 06000000 		.4byte	.LASF18
 2004 00c6 01       		.byte	0x1
 2005 00c7 B1       		.byte	0xb1
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 61


 2006 00c8 00000000 		.4byte	.LFB1
 2007 00cc 38000000 		.4byte	.LFE1-.LFB1
 2008 00d0 01       		.uleb128 0x1
 2009 00d1 9C       		.byte	0x9c
 2010 00d2 E5000000 		.4byte	0xe5
 2011 00d6 08       		.uleb128 0x8
 2012 00d7 0B040000 		.4byte	.LASF20
 2013 00db 01       		.byte	0x1
 2014 00dc B3       		.byte	0xb3
 2015 00dd 6B000000 		.4byte	0x6b
 2016 00e1 02       		.uleb128 0x2
 2017 00e2 91       		.byte	0x91
 2018 00e3 6F       		.sleb128 -17
 2019 00e4 00       		.byte	0
 2020 00e5 06       		.uleb128 0x6
 2021 00e6 40020000 		.4byte	.LASF17
 2022 00ea 01       		.byte	0x1
 2023 00eb E6       		.byte	0xe6
 2024 00ec 00000000 		.4byte	.LFB2
 2025 00f0 24000000 		.4byte	.LFE2-.LFB2
 2026 00f4 01       		.uleb128 0x1
 2027 00f5 9C       		.byte	0x9c
 2028 00f6 09       		.uleb128 0x9
 2029 00f7 6E010000 		.4byte	.LASF19
 2030 00fb 01       		.byte	0x1
 2031 00fc 0001     		.2byte	0x100
 2032 00fe 00000000 		.4byte	.LFB3
 2033 0102 30000000 		.4byte	.LFE3-.LFB3
 2034 0106 01       		.uleb128 0x1
 2035 0107 9C       		.byte	0x9c
 2036 0108 1C010000 		.4byte	0x11c
 2037 010c 0A       		.uleb128 0xa
 2038 010d 0B040000 		.4byte	.LASF20
 2039 0111 01       		.byte	0x1
 2040 0112 0201     		.2byte	0x102
 2041 0114 6B000000 		.4byte	0x6b
 2042 0118 02       		.uleb128 0x2
 2043 0119 91       		.byte	0x91
 2044 011a 6F       		.sleb128 -17
 2045 011b 00       		.byte	0
 2046 011c 09       		.uleb128 0x9
 2047 011d 3B040000 		.4byte	.LASF21
 2048 0121 01       		.byte	0x1
 2049 0122 2501     		.2byte	0x125
 2050 0124 00000000 		.4byte	.LFB4
 2051 0128 48000000 		.4byte	.LFE4-.LFB4
 2052 012c 01       		.uleb128 0x1
 2053 012d 9C       		.byte	0x9c
 2054 012e 51010000 		.4byte	0x151
 2055 0132 0B       		.uleb128 0xb
 2056 0133 A4030000 		.4byte	.LASF23
 2057 0137 01       		.byte	0x1
 2058 0138 2501     		.2byte	0x125
 2059 013a 77000000 		.4byte	0x77
 2060 013e 02       		.uleb128 0x2
 2061 013f 91       		.byte	0x91
 2062 0140 64       		.sleb128 -28
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 62


 2063 0141 0A       		.uleb128 0xa
 2064 0142 0B040000 		.4byte	.LASF20
 2065 0146 01       		.byte	0x1
 2066 0147 2701     		.2byte	0x127
 2067 0149 6B000000 		.4byte	0x6b
 2068 014d 02       		.uleb128 0x2
 2069 014e 91       		.byte	0x91
 2070 014f 6F       		.sleb128 -17
 2071 0150 00       		.byte	0
 2072 0151 09       		.uleb128 0x9
 2073 0152 91030000 		.4byte	.LASF22
 2074 0156 01       		.byte	0x1
 2075 0157 4601     		.2byte	0x146
 2076 0159 00000000 		.4byte	.LFB5
 2077 015d 48000000 		.4byte	.LFE5-.LFB5
 2078 0161 01       		.uleb128 0x1
 2079 0162 9C       		.byte	0x9c
 2080 0163 86010000 		.4byte	0x186
 2081 0167 0B       		.uleb128 0xb
 2082 0168 95000000 		.4byte	.LASF24
 2083 016c 01       		.byte	0x1
 2084 016d 4601     		.2byte	0x146
 2085 016f 77000000 		.4byte	0x77
 2086 0173 02       		.uleb128 0x2
 2087 0174 91       		.byte	0x91
 2088 0175 64       		.sleb128 -28
 2089 0176 0A       		.uleb128 0xa
 2090 0177 0B040000 		.4byte	.LASF20
 2091 017b 01       		.byte	0x1
 2092 017c 4801     		.2byte	0x148
 2093 017e 6B000000 		.4byte	0x6b
 2094 0182 02       		.uleb128 0x2
 2095 0183 91       		.byte	0x91
 2096 0184 6F       		.sleb128 -17
 2097 0185 00       		.byte	0
 2098 0186 09       		.uleb128 0x9
 2099 0187 2F020000 		.4byte	.LASF25
 2100 018b 01       		.byte	0x1
 2101 018c 6B01     		.2byte	0x16b
 2102 018e 00000000 		.4byte	.LFB6
 2103 0192 48000000 		.4byte	.LFE6-.LFB6
 2104 0196 01       		.uleb128 0x1
 2105 0197 9C       		.byte	0x9c
 2106 0198 BB010000 		.4byte	0x1bb
 2107 019c 0B       		.uleb128 0xb
 2108 019d E6020000 		.4byte	.LASF26
 2109 01a1 01       		.byte	0x1
 2110 01a2 6B01     		.2byte	0x16b
 2111 01a4 77000000 		.4byte	0x77
 2112 01a8 02       		.uleb128 0x2
 2113 01a9 91       		.byte	0x91
 2114 01aa 64       		.sleb128 -28
 2115 01ab 0A       		.uleb128 0xa
 2116 01ac 0B040000 		.4byte	.LASF20
 2117 01b0 01       		.byte	0x1
 2118 01b1 6D01     		.2byte	0x16d
 2119 01b3 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 63


 2120 01b7 02       		.uleb128 0x2
 2121 01b8 91       		.byte	0x91
 2122 01b9 6F       		.sleb128 -17
 2123 01ba 00       		.byte	0
 2124 01bb 09       		.uleb128 0x9
 2125 01bc BF020000 		.4byte	.LASF27
 2126 01c0 01       		.byte	0x1
 2127 01c1 8B01     		.2byte	0x18b
 2128 01c3 00000000 		.4byte	.LFB7
 2129 01c7 4C000000 		.4byte	.LFE7-.LFB7
 2130 01cb 01       		.uleb128 0x1
 2131 01cc 9C       		.byte	0x9c
 2132 01cd F0010000 		.4byte	0x1f0
 2133 01d1 0B       		.uleb128 0xb
 2134 01d2 2D040000 		.4byte	.LASF28
 2135 01d6 01       		.byte	0x1
 2136 01d7 8B01     		.2byte	0x18b
 2137 01d9 77000000 		.4byte	0x77
 2138 01dd 02       		.uleb128 0x2
 2139 01de 91       		.byte	0x91
 2140 01df 64       		.sleb128 -28
 2141 01e0 0A       		.uleb128 0xa
 2142 01e1 0B040000 		.4byte	.LASF20
 2143 01e5 01       		.byte	0x1
 2144 01e6 8D01     		.2byte	0x18d
 2145 01e8 6B000000 		.4byte	0x6b
 2146 01ec 02       		.uleb128 0x2
 2147 01ed 91       		.byte	0x91
 2148 01ee 6F       		.sleb128 -17
 2149 01ef 00       		.byte	0
 2150 01f0 0C       		.uleb128 0xc
 2151 01f1 3A030000 		.4byte	.LASF29
 2152 01f5 01       		.byte	0x1
 2153 01f6 C101     		.2byte	0x1c1
 2154 01f8 00000000 		.4byte	.LFB8
 2155 01fc 1C000000 		.4byte	.LFE8-.LFB8
 2156 0200 01       		.uleb128 0x1
 2157 0201 9C       		.byte	0x9c
 2158 0202 16020000 		.4byte	0x216
 2159 0206 0B       		.uleb128 0xb
 2160 0207 13020000 		.4byte	.LASF30
 2161 020b 01       		.byte	0x1
 2162 020c C101     		.2byte	0x1c1
 2163 020e 77000000 		.4byte	0x77
 2164 0212 02       		.uleb128 0x2
 2165 0213 91       		.byte	0x91
 2166 0214 74       		.sleb128 -12
 2167 0215 00       		.byte	0
 2168 0216 09       		.uleb128 0x9
 2169 0217 11000000 		.4byte	.LASF31
 2170 021b 01       		.byte	0x1
 2171 021c E501     		.2byte	0x1e5
 2172 021e 00000000 		.4byte	.LFB9
 2173 0222 48000000 		.4byte	.LFE9-.LFB9
 2174 0226 01       		.uleb128 0x1
 2175 0227 9C       		.byte	0x9c
 2176 0228 4B020000 		.4byte	0x24b
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 64


 2177 022c 0B       		.uleb128 0xb
 2178 022d A8020000 		.4byte	.LASF32
 2179 0231 01       		.byte	0x1
 2180 0232 E501     		.2byte	0x1e5
 2181 0234 77000000 		.4byte	0x77
 2182 0238 02       		.uleb128 0x2
 2183 0239 91       		.byte	0x91
 2184 023a 64       		.sleb128 -28
 2185 023b 0A       		.uleb128 0xa
 2186 023c 0B040000 		.4byte	.LASF20
 2187 0240 01       		.byte	0x1
 2188 0241 E701     		.2byte	0x1e7
 2189 0243 6B000000 		.4byte	0x6b
 2190 0247 02       		.uleb128 0x2
 2191 0248 91       		.byte	0x91
 2192 0249 6F       		.sleb128 -17
 2193 024a 00       		.byte	0
 2194 024b 09       		.uleb128 0x9
 2195 024c 47040000 		.4byte	.LASF33
 2196 0250 01       		.byte	0x1
 2197 0251 0702     		.2byte	0x207
 2198 0253 00000000 		.4byte	.LFB10
 2199 0257 48000000 		.4byte	.LFE10-.LFB10
 2200 025b 01       		.uleb128 0x1
 2201 025c 9C       		.byte	0x9c
 2202 025d 80020000 		.4byte	0x280
 2203 0261 0B       		.uleb128 0xb
 2204 0262 29030000 		.4byte	.LASF34
 2205 0266 01       		.byte	0x1
 2206 0267 0702     		.2byte	0x207
 2207 0269 77000000 		.4byte	0x77
 2208 026d 02       		.uleb128 0x2
 2209 026e 91       		.byte	0x91
 2210 026f 64       		.sleb128 -28
 2211 0270 0A       		.uleb128 0xa
 2212 0271 0B040000 		.4byte	.LASF20
 2213 0275 01       		.byte	0x1
 2214 0276 0902     		.2byte	0x209
 2215 0278 6B000000 		.4byte	0x6b
 2216 027c 02       		.uleb128 0x2
 2217 027d 91       		.byte	0x91
 2218 027e 6F       		.sleb128 -17
 2219 027f 00       		.byte	0
 2220 0280 09       		.uleb128 0x9
 2221 0281 E6010000 		.4byte	.LASF35
 2222 0285 01       		.byte	0x1
 2223 0286 2802     		.2byte	0x228
 2224 0288 00000000 		.4byte	.LFB11
 2225 028c 4C000000 		.4byte	.LFE11-.LFB11
 2226 0290 01       		.uleb128 0x1
 2227 0291 9C       		.byte	0x9c
 2228 0292 B5020000 		.4byte	0x2b5
 2229 0296 0B       		.uleb128 0xb
 2230 0297 C0010000 		.4byte	.LASF36
 2231 029b 01       		.byte	0x1
 2232 029c 2802     		.2byte	0x228
 2233 029e 77000000 		.4byte	0x77
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 65


 2234 02a2 02       		.uleb128 0x2
 2235 02a3 91       		.byte	0x91
 2236 02a4 64       		.sleb128 -28
 2237 02a5 0A       		.uleb128 0xa
 2238 02a6 0B040000 		.4byte	.LASF20
 2239 02aa 01       		.byte	0x1
 2240 02ab 2A02     		.2byte	0x22a
 2241 02ad 6B000000 		.4byte	0x6b
 2242 02b1 02       		.uleb128 0x2
 2243 02b2 91       		.byte	0x91
 2244 02b3 6F       		.sleb128 -17
 2245 02b4 00       		.byte	0
 2246 02b5 09       		.uleb128 0x9
 2247 02b6 77010000 		.4byte	.LASF37
 2248 02ba 01       		.byte	0x1
 2249 02bb 4902     		.2byte	0x249
 2250 02bd 00000000 		.4byte	.LFB12
 2251 02c1 48000000 		.4byte	.LFE12-.LFB12
 2252 02c5 01       		.uleb128 0x1
 2253 02c6 9C       		.byte	0x9c
 2254 02c7 EA020000 		.4byte	0x2ea
 2255 02cb 0B       		.uleb128 0xb
 2256 02cc AC010000 		.4byte	.LASF38
 2257 02d0 01       		.byte	0x1
 2258 02d1 4902     		.2byte	0x249
 2259 02d3 77000000 		.4byte	0x77
 2260 02d7 02       		.uleb128 0x2
 2261 02d8 91       		.byte	0x91
 2262 02d9 64       		.sleb128 -28
 2263 02da 0A       		.uleb128 0xa
 2264 02db 0B040000 		.4byte	.LASF20
 2265 02df 01       		.byte	0x1
 2266 02e0 4B02     		.2byte	0x24b
 2267 02e2 6B000000 		.4byte	0x6b
 2268 02e6 02       		.uleb128 0x2
 2269 02e7 91       		.byte	0x91
 2270 02e8 6F       		.sleb128 -17
 2271 02e9 00       		.byte	0
 2272 02ea 0C       		.uleb128 0xc
 2273 02eb 9C000000 		.4byte	.LASF39
 2274 02ef 01       		.byte	0x1
 2275 02f0 6702     		.2byte	0x267
 2276 02f2 00000000 		.4byte	.LFB13
 2277 02f6 1C000000 		.4byte	.LFE13-.LFB13
 2278 02fa 01       		.uleb128 0x1
 2279 02fb 9C       		.byte	0x9c
 2280 02fc 10030000 		.4byte	0x310
 2281 0300 0B       		.uleb128 0xb
 2282 0301 00000000 		.4byte	.LASF40
 2283 0305 01       		.byte	0x1
 2284 0306 6702     		.2byte	0x267
 2285 0308 77000000 		.4byte	0x77
 2286 030c 02       		.uleb128 0x2
 2287 030d 91       		.byte	0x91
 2288 030e 74       		.sleb128 -12
 2289 030f 00       		.byte	0
 2290 0310 0D       		.uleb128 0xd
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 66


 2291 0311 AD000000 		.4byte	.LASF45
 2292 0315 01       		.byte	0x1
 2293 0316 7B02     		.2byte	0x27b
 2294 0318 77000000 		.4byte	0x77
 2295 031c 00000000 		.4byte	.LFB14
 2296 0320 18000000 		.4byte	.LFE14-.LFB14
 2297 0324 01       		.uleb128 0x1
 2298 0325 9C       		.byte	0x9c
 2299 0326 09       		.uleb128 0x9
 2300 0327 01050000 		.4byte	.LASF41
 2301 032b 01       		.byte	0x1
 2302 032c 9802     		.2byte	0x298
 2303 032e 00000000 		.4byte	.LFB15
 2304 0332 48000000 		.4byte	.LFE15-.LFB15
 2305 0336 01       		.uleb128 0x1
 2306 0337 9C       		.byte	0x9c
 2307 0338 5B030000 		.4byte	0x35b
 2308 033c 0B       		.uleb128 0xb
 2309 033d CC030000 		.4byte	.LASF42
 2310 0341 01       		.byte	0x1
 2311 0342 9802     		.2byte	0x298
 2312 0344 77000000 		.4byte	0x77
 2313 0348 02       		.uleb128 0x2
 2314 0349 91       		.byte	0x91
 2315 034a 64       		.sleb128 -28
 2316 034b 0A       		.uleb128 0xa
 2317 034c 0B040000 		.4byte	.LASF20
 2318 0350 01       		.byte	0x1
 2319 0351 9A02     		.2byte	0x29a
 2320 0353 6B000000 		.4byte	0x6b
 2321 0357 02       		.uleb128 0x2
 2322 0358 91       		.byte	0x91
 2323 0359 6F       		.sleb128 -17
 2324 035a 00       		.byte	0
 2325 035b 0C       		.uleb128 0xc
 2326 035c 6E020000 		.4byte	.LASF43
 2327 0360 01       		.byte	0x1
 2328 0361 B502     		.2byte	0x2b5
 2329 0363 00000000 		.4byte	.LFB16
 2330 0367 1C000000 		.4byte	.LFE16-.LFB16
 2331 036b 01       		.uleb128 0x1
 2332 036c 9C       		.byte	0x9c
 2333 036d 81030000 		.4byte	0x381
 2334 0371 0B       		.uleb128 0xb
 2335 0372 64000000 		.4byte	.LASF44
 2336 0376 01       		.byte	0x1
 2337 0377 B502     		.2byte	0x2b5
 2338 0379 77000000 		.4byte	0x77
 2339 037d 02       		.uleb128 0x2
 2340 037e 91       		.byte	0x91
 2341 037f 74       		.sleb128 -12
 2342 0380 00       		.byte	0
 2343 0381 0D       		.uleb128 0xd
 2344 0382 90020000 		.4byte	.LASF46
 2345 0386 01       		.byte	0x1
 2346 0387 C902     		.2byte	0x2c9
 2347 0389 77000000 		.4byte	0x77
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 67


 2348 038d 00000000 		.4byte	.LFB17
 2349 0391 18000000 		.4byte	.LFE17-.LFB17
 2350 0395 01       		.uleb128 0x1
 2351 0396 9C       		.byte	0x9c
 2352 0397 09       		.uleb128 0x9
 2353 0398 5B010000 		.4byte	.LASF47
 2354 039c 01       		.byte	0x1
 2355 039d E302     		.2byte	0x2e3
 2356 039f 00000000 		.4byte	.LFB18
 2357 03a3 48000000 		.4byte	.LFE18-.LFB18
 2358 03a7 01       		.uleb128 0x1
 2359 03a8 9C       		.byte	0x9c
 2360 03a9 CC030000 		.4byte	0x3cc
 2361 03ad 0B       		.uleb128 0xb
 2362 03ae D8030000 		.4byte	.LASF48
 2363 03b2 01       		.byte	0x1
 2364 03b3 E302     		.2byte	0x2e3
 2365 03b5 77000000 		.4byte	0x77
 2366 03b9 02       		.uleb128 0x2
 2367 03ba 91       		.byte	0x91
 2368 03bb 64       		.sleb128 -28
 2369 03bc 0A       		.uleb128 0xa
 2370 03bd 0B040000 		.4byte	.LASF20
 2371 03c1 01       		.byte	0x1
 2372 03c2 E502     		.2byte	0x2e5
 2373 03c4 6B000000 		.4byte	0x6b
 2374 03c8 02       		.uleb128 0x2
 2375 03c9 91       		.byte	0x91
 2376 03ca 6F       		.sleb128 -17
 2377 03cb 00       		.byte	0
 2378 03cc 0C       		.uleb128 0xc
 2379 03cd 7E030000 		.4byte	.LASF49
 2380 03d1 01       		.byte	0x1
 2381 03d2 FE02     		.2byte	0x2fe
 2382 03d4 00000000 		.4byte	.LFB19
 2383 03d8 1C000000 		.4byte	.LFE19-.LFB19
 2384 03dc 01       		.uleb128 0x1
 2385 03dd 9C       		.byte	0x9c
 2386 03de F2030000 		.4byte	0x3f2
 2387 03e2 0B       		.uleb128 0xb
 2388 03e3 EE030000 		.4byte	.LASF50
 2389 03e7 01       		.byte	0x1
 2390 03e8 FE02     		.2byte	0x2fe
 2391 03ea 77000000 		.4byte	0x77
 2392 03ee 02       		.uleb128 0x2
 2393 03ef 91       		.byte	0x91
 2394 03f0 74       		.sleb128 -12
 2395 03f1 00       		.byte	0
 2396 03f2 0D       		.uleb128 0xd
 2397 03f3 CE020000 		.4byte	.LASF51
 2398 03f7 01       		.byte	0x1
 2399 03f8 1203     		.2byte	0x312
 2400 03fa 77000000 		.4byte	0x77
 2401 03fe 00000000 		.4byte	.LFB20
 2402 0402 18000000 		.4byte	.LFE20-.LFB20
 2403 0406 01       		.uleb128 0x1
 2404 0407 9C       		.byte	0x9c
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 68


 2405 0408 09       		.uleb128 0x9
 2406 0409 00030000 		.4byte	.LASF52
 2407 040d 01       		.byte	0x1
 2408 040e 2C03     		.2byte	0x32c
 2409 0410 00000000 		.4byte	.LFB21
 2410 0414 48000000 		.4byte	.LFE21-.LFB21
 2411 0418 01       		.uleb128 0x1
 2412 0419 9C       		.byte	0x9c
 2413 041a 3D040000 		.4byte	0x43d
 2414 041e 0B       		.uleb128 0xb
 2415 041f D8030000 		.4byte	.LASF48
 2416 0423 01       		.byte	0x1
 2417 0424 2C03     		.2byte	0x32c
 2418 0426 77000000 		.4byte	0x77
 2419 042a 02       		.uleb128 0x2
 2420 042b 91       		.byte	0x91
 2421 042c 64       		.sleb128 -28
 2422 042d 0A       		.uleb128 0xa
 2423 042e 0B040000 		.4byte	.LASF20
 2424 0432 01       		.byte	0x1
 2425 0433 2E03     		.2byte	0x32e
 2426 0435 6B000000 		.4byte	0x6b
 2427 0439 02       		.uleb128 0x2
 2428 043a 91       		.byte	0x91
 2429 043b 6F       		.sleb128 -17
 2430 043c 00       		.byte	0
 2431 043d 0C       		.uleb128 0xc
 2432 043e 5D020000 		.4byte	.LASF53
 2433 0442 01       		.byte	0x1
 2434 0443 5103     		.2byte	0x351
 2435 0445 00000000 		.4byte	.LFB22
 2436 0449 1C000000 		.4byte	.LFE22-.LFB22
 2437 044d 01       		.uleb128 0x1
 2438 044e 9C       		.byte	0x9c
 2439 044f 63040000 		.4byte	0x463
 2440 0453 0B       		.uleb128 0xb
 2441 0454 B7020000 		.4byte	.LASF54
 2442 0458 01       		.byte	0x1
 2443 0459 5103     		.2byte	0x351
 2444 045b 77000000 		.4byte	0x77
 2445 045f 02       		.uleb128 0x2
 2446 0460 91       		.byte	0x91
 2447 0461 74       		.sleb128 -12
 2448 0462 00       		.byte	0
 2449 0463 0D       		.uleb128 0xd
 2450 0464 14050000 		.4byte	.LASF55
 2451 0468 01       		.byte	0x1
 2452 0469 8403     		.2byte	0x384
 2453 046b 77000000 		.4byte	0x77
 2454 046f 00000000 		.4byte	.LFB23
 2455 0473 18000000 		.4byte	.LFE23-.LFB23
 2456 0477 01       		.uleb128 0x1
 2457 0478 9C       		.byte	0x9c
 2458 0479 0C       		.uleb128 0xc
 2459 047a D7000000 		.4byte	.LASF56
 2460 047e 01       		.byte	0x1
 2461 047f BA03     		.2byte	0x3ba
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 69


 2462 0481 00000000 		.4byte	.LFB24
 2463 0485 1C000000 		.4byte	.LFE24-.LFB24
 2464 0489 01       		.uleb128 0x1
 2465 048a 9C       		.byte	0x9c
 2466 048b 9F040000 		.4byte	0x49f
 2467 048f 0B       		.uleb128 0xb
 2468 0490 E3030000 		.4byte	.LASF57
 2469 0494 01       		.byte	0x1
 2470 0495 BA03     		.2byte	0x3ba
 2471 0497 77000000 		.4byte	0x77
 2472 049b 02       		.uleb128 0x2
 2473 049c 91       		.byte	0x91
 2474 049d 74       		.sleb128 -12
 2475 049e 00       		.byte	0
 2476 049f 0D       		.uleb128 0xd
 2477 04a0 48010000 		.4byte	.LASF58
 2478 04a4 01       		.byte	0x1
 2479 04a5 E803     		.2byte	0x3e8
 2480 04a7 77000000 		.4byte	0x77
 2481 04ab 00000000 		.4byte	.LFB25
 2482 04af 18000000 		.4byte	.LFE25-.LFB25
 2483 04b3 01       		.uleb128 0x1
 2484 04b4 9C       		.byte	0x9c
 2485 04b5 0D       		.uleb128 0xd
 2486 04b6 F0020000 		.4byte	.LASF59
 2487 04ba 01       		.byte	0x1
 2488 04bb 1604     		.2byte	0x416
 2489 04bd 77000000 		.4byte	0x77
 2490 04c1 00000000 		.4byte	.LFB26
 2491 04c5 18000000 		.4byte	.LFE26-.LFB26
 2492 04c9 01       		.uleb128 0x1
 2493 04ca 9C       		.byte	0x9c
 2494 04cb 0D       		.uleb128 0xd
 2495 04cc F8030000 		.4byte	.LASF60
 2496 04d0 01       		.byte	0x1
 2497 04d1 2B04     		.2byte	0x42b
 2498 04d3 77000000 		.4byte	0x77
 2499 04d7 00000000 		.4byte	.LFB27
 2500 04db 18000000 		.4byte	.LFE27-.LFB27
 2501 04df 01       		.uleb128 0x1
 2502 04e0 9C       		.byte	0x9c
 2503 04e1 09       		.uleb128 0x9
 2504 04e2 82000000 		.4byte	.LASF61
 2505 04e6 01       		.byte	0x1
 2506 04e7 4604     		.2byte	0x446
 2507 04e9 00000000 		.4byte	.LFB28
 2508 04ed 44000000 		.4byte	.LFE28-.LFB28
 2509 04f1 01       		.uleb128 0x1
 2510 04f2 9C       		.byte	0x9c
 2511 04f3 16050000 		.4byte	0x516
 2512 04f7 0B       		.uleb128 0xb
 2513 04f8 A0010000 		.4byte	.LASF62
 2514 04fc 01       		.byte	0x1
 2515 04fd 4604     		.2byte	0x446
 2516 04ff 77000000 		.4byte	0x77
 2517 0503 02       		.uleb128 0x2
 2518 0504 91       		.byte	0x91
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 70


 2519 0505 64       		.sleb128 -28
 2520 0506 0A       		.uleb128 0xa
 2521 0507 0B040000 		.4byte	.LASF20
 2522 050b 01       		.byte	0x1
 2523 050c 4804     		.2byte	0x448
 2524 050e 6B000000 		.4byte	0x6b
 2525 0512 02       		.uleb128 0x2
 2526 0513 91       		.byte	0x91
 2527 0514 6F       		.sleb128 -17
 2528 0515 00       		.byte	0
 2529 0516 09       		.uleb128 0x9
 2530 0517 BA030000 		.4byte	.LASF63
 2531 051b 01       		.byte	0x1
 2532 051c 6704     		.2byte	0x467
 2533 051e 00000000 		.4byte	.LFB29
 2534 0522 44000000 		.4byte	.LFE29-.LFB29
 2535 0526 01       		.uleb128 0x1
 2536 0527 9C       		.byte	0x9c
 2537 0528 4B050000 		.4byte	0x54b
 2538 052c 0B       		.uleb128 0xb
 2539 052d A0010000 		.4byte	.LASF62
 2540 0531 01       		.byte	0x1
 2541 0532 6704     		.2byte	0x467
 2542 0534 77000000 		.4byte	0x77
 2543 0538 02       		.uleb128 0x2
 2544 0539 91       		.byte	0x91
 2545 053a 64       		.sleb128 -28
 2546 053b 0A       		.uleb128 0xa
 2547 053c 0B040000 		.4byte	.LASF20
 2548 0540 01       		.byte	0x1
 2549 0541 6904     		.2byte	0x469
 2550 0543 6B000000 		.4byte	0x6b
 2551 0547 02       		.uleb128 0x2
 2552 0548 91       		.byte	0x91
 2553 0549 6F       		.sleb128 -17
 2554 054a 00       		.byte	0
 2555 054b 09       		.uleb128 0x9
 2556 054c 8F010000 		.4byte	.LASF64
 2557 0550 01       		.byte	0x1
 2558 0551 8804     		.2byte	0x488
 2559 0553 00000000 		.4byte	.LFB30
 2560 0557 48000000 		.4byte	.LFE30-.LFB30
 2561 055b 01       		.uleb128 0x1
 2562 055c 9C       		.byte	0x9c
 2563 055d 80050000 		.4byte	0x580
 2564 0561 0B       		.uleb128 0xb
 2565 0562 A0010000 		.4byte	.LASF62
 2566 0566 01       		.byte	0x1
 2567 0567 8804     		.2byte	0x488
 2568 0569 77000000 		.4byte	0x77
 2569 056d 02       		.uleb128 0x2
 2570 056e 91       		.byte	0x91
 2571 056f 64       		.sleb128 -28
 2572 0570 0A       		.uleb128 0xa
 2573 0571 0B040000 		.4byte	.LASF20
 2574 0575 01       		.byte	0x1
 2575 0576 8A04     		.2byte	0x48a
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 71


 2576 0578 6B000000 		.4byte	0x6b
 2577 057c 02       		.uleb128 0x2
 2578 057d 91       		.byte	0x91
 2579 057e 6F       		.sleb128 -17
 2580 057f 00       		.byte	0
 2581 0580 09       		.uleb128 0x9
 2582 0581 C9010000 		.4byte	.LASF65
 2583 0585 01       		.byte	0x1
 2584 0586 A804     		.2byte	0x4a8
 2585 0588 00000000 		.4byte	.LFB31
 2586 058c 44000000 		.4byte	.LFE31-.LFB31
 2587 0590 01       		.uleb128 0x1
 2588 0591 9C       		.byte	0x9c
 2589 0592 B5050000 		.4byte	0x5b5
 2590 0596 0B       		.uleb128 0xb
 2591 0597 A0010000 		.4byte	.LASF62
 2592 059b 01       		.byte	0x1
 2593 059c A804     		.2byte	0x4a8
 2594 059e 77000000 		.4byte	0x77
 2595 05a2 02       		.uleb128 0x2
 2596 05a3 91       		.byte	0x91
 2597 05a4 64       		.sleb128 -28
 2598 05a5 0A       		.uleb128 0xa
 2599 05a6 0B040000 		.4byte	.LASF20
 2600 05aa 01       		.byte	0x1
 2601 05ab AA04     		.2byte	0x4aa
 2602 05ad 6B000000 		.4byte	0x6b
 2603 05b1 02       		.uleb128 0x2
 2604 05b2 91       		.byte	0x91
 2605 05b3 6F       		.sleb128 -17
 2606 05b4 00       		.byte	0
 2607 05b5 09       		.uleb128 0x9
 2608 05b6 1C040000 		.4byte	.LASF66
 2609 05ba 01       		.byte	0x1
 2610 05bb C904     		.2byte	0x4c9
 2611 05bd 00000000 		.4byte	.LFB32
 2612 05c1 44000000 		.4byte	.LFE32-.LFB32
 2613 05c5 01       		.uleb128 0x1
 2614 05c6 9C       		.byte	0x9c
 2615 05c7 EA050000 		.4byte	0x5ea
 2616 05cb 0B       		.uleb128 0xb
 2617 05cc A0010000 		.4byte	.LASF62
 2618 05d0 01       		.byte	0x1
 2619 05d1 C904     		.2byte	0x4c9
 2620 05d3 77000000 		.4byte	0x77
 2621 05d7 02       		.uleb128 0x2
 2622 05d8 91       		.byte	0x91
 2623 05d9 64       		.sleb128 -28
 2624 05da 0A       		.uleb128 0xa
 2625 05db 0B040000 		.4byte	.LASF20
 2626 05df 01       		.byte	0x1
 2627 05e0 CB04     		.2byte	0x4cb
 2628 05e2 6B000000 		.4byte	0x6b
 2629 05e6 02       		.uleb128 0x2
 2630 05e7 91       		.byte	0x91
 2631 05e8 6F       		.sleb128 -17
 2632 05e9 00       		.byte	0
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 72


 2633 05ea 09       		.uleb128 0x9
 2634 05eb 4A020000 		.4byte	.LASF67
 2635 05ef 01       		.byte	0x1
 2636 05f0 F104     		.2byte	0x4f1
 2637 05f2 00000000 		.4byte	.LFB33
 2638 05f6 38000000 		.4byte	.LFE33-.LFB33
 2639 05fa 01       		.uleb128 0x1
 2640 05fb 9C       		.byte	0x9c
 2641 05fc 2E060000 		.4byte	0x62e
 2642 0600 0B       		.uleb128 0xb
 2643 0601 AC010000 		.4byte	.LASF38
 2644 0605 01       		.byte	0x1
 2645 0606 F104     		.2byte	0x4f1
 2646 0608 77000000 		.4byte	0x77
 2647 060c 02       		.uleb128 0x2
 2648 060d 91       		.byte	0x91
 2649 060e 64       		.sleb128 -28
 2650 060f 0B       		.uleb128 0xb
 2651 0610 F9010000 		.4byte	.LASF68
 2652 0614 01       		.byte	0x1
 2653 0615 F104     		.2byte	0x4f1
 2654 0617 77000000 		.4byte	0x77
 2655 061b 02       		.uleb128 0x2
 2656 061c 91       		.byte	0x91
 2657 061d 60       		.sleb128 -32
 2658 061e 0A       		.uleb128 0xa
 2659 061f 0B040000 		.4byte	.LASF20
 2660 0623 01       		.byte	0x1
 2661 0624 F304     		.2byte	0x4f3
 2662 0626 6B000000 		.4byte	0x6b
 2663 062a 02       		.uleb128 0x2
 2664 062b 91       		.byte	0x91
 2665 062c 6F       		.sleb128 -17
 2666 062d 00       		.byte	0
 2667 062e 0D       		.uleb128 0xd
 2668 062f B1010000 		.4byte	.LASF69
 2669 0633 01       		.byte	0x1
 2670 0634 0E05     		.2byte	0x50e
 2671 0636 77000000 		.4byte	0x77
 2672 063a 00000000 		.4byte	.LFB34
 2673 063e 20000000 		.4byte	.LFE34-.LFB34
 2674 0642 01       		.uleb128 0x1
 2675 0643 9C       		.byte	0x9c
 2676 0644 0C       		.uleb128 0xc
 2677 0645 EB000000 		.4byte	.LASF70
 2678 0649 01       		.byte	0x1
 2679 064a 2705     		.2byte	0x527
 2680 064c 00000000 		.4byte	.LFB35
 2681 0650 18000000 		.4byte	.LFE35-.LFB35
 2682 0654 01       		.uleb128 0x1
 2683 0655 9C       		.byte	0x9c
 2684 0656 6A060000 		.4byte	0x66a
 2685 065a 0B       		.uleb128 0xb
 2686 065b 70030000 		.4byte	.LASF71
 2687 065f 01       		.byte	0x1
 2688 0660 2705     		.2byte	0x527
 2689 0662 77000000 		.4byte	0x77
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 73


 2690 0666 02       		.uleb128 0x2
 2691 0667 91       		.byte	0x91
 2692 0668 74       		.sleb128 -12
 2693 0669 00       		.byte	0
 2694 066a 0D       		.uleb128 0xd
 2695 066b 53030000 		.4byte	.LASF72
 2696 066f 01       		.byte	0x1
 2697 0670 3E05     		.2byte	0x53e
 2698 0672 77000000 		.4byte	0x77
 2699 0676 00000000 		.4byte	.LFB36
 2700 067a 14000000 		.4byte	.LFE36-.LFB36
 2701 067e 01       		.uleb128 0x1
 2702 067f 9C       		.byte	0x9c
 2703 0680 0D       		.uleb128 0xd
 2704 0681 EA040000 		.4byte	.LASF73
 2705 0685 01       		.byte	0x1
 2706 0686 5505     		.2byte	0x555
 2707 0688 77000000 		.4byte	0x77
 2708 068c 00000000 		.4byte	.LFB37
 2709 0690 14000000 		.4byte	.LFE37-.LFB37
 2710 0694 01       		.uleb128 0x1
 2711 0695 9C       		.byte	0x9c
 2712 0696 0C       		.uleb128 0xc
 2713 0697 00010000 		.4byte	.LASF74
 2714 069b 01       		.byte	0x1
 2715 069c 6C05     		.2byte	0x56c
 2716 069e 00000000 		.4byte	.LFB38
 2717 06a2 18000000 		.4byte	.LFE38-.LFB38
 2718 06a6 01       		.uleb128 0x1
 2719 06a7 9C       		.byte	0x9c
 2720 06a8 BC060000 		.4byte	0x6bc
 2721 06ac 0B       		.uleb128 0xb
 2722 06ad 70030000 		.4byte	.LASF71
 2723 06b1 01       		.byte	0x1
 2724 06b2 6C05     		.2byte	0x56c
 2725 06b4 77000000 		.4byte	0x77
 2726 06b8 02       		.uleb128 0x2
 2727 06b9 91       		.byte	0x91
 2728 06ba 74       		.sleb128 -12
 2729 06bb 00       		.byte	0
 2730 06bc 0C       		.uleb128 0xc
 2731 06bd A9030000 		.4byte	.LASF75
 2732 06c1 01       		.byte	0x1
 2733 06c2 8305     		.2byte	0x583
 2734 06c4 00000000 		.4byte	.LFB39
 2735 06c8 18000000 		.4byte	.LFE39-.LFB39
 2736 06cc 01       		.uleb128 0x1
 2737 06cd 9C       		.byte	0x9c
 2738 06ce E2060000 		.4byte	0x6e2
 2739 06d2 0B       		.uleb128 0xb
 2740 06d3 70030000 		.4byte	.LASF71
 2741 06d7 01       		.byte	0x1
 2742 06d8 8305     		.2byte	0x583
 2743 06da 77000000 		.4byte	0x77
 2744 06de 02       		.uleb128 0x2
 2745 06df 91       		.byte	0x91
 2746 06e0 74       		.sleb128 -12
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 74


 2747 06e1 00       		.byte	0
 2748 06e2 0E       		.uleb128 0xe
 2749 06e3 84020000 		.4byte	.LASF79
 2750 06e7 01       		.byte	0x1
 2751 06e8 15       		.byte	0x15
 2752 06e9 6B000000 		.4byte	0x6b
 2753 06ed 05       		.uleb128 0x5
 2754 06ee 03       		.byte	0x3
 2755 06ef 00000000 		.4byte	PWM_initVar
 2756 06f3 00       		.byte	0
 2757              		.section	.debug_abbrev,"",%progbits
 2758              	.Ldebug_abbrev0:
 2759 0000 01       		.uleb128 0x1
 2760 0001 11       		.uleb128 0x11
 2761 0002 01       		.byte	0x1
 2762 0003 25       		.uleb128 0x25
 2763 0004 0E       		.uleb128 0xe
 2764 0005 13       		.uleb128 0x13
 2765 0006 0B       		.uleb128 0xb
 2766 0007 03       		.uleb128 0x3
 2767 0008 0E       		.uleb128 0xe
 2768 0009 1B       		.uleb128 0x1b
 2769 000a 0E       		.uleb128 0xe
 2770 000b 55       		.uleb128 0x55
 2771 000c 17       		.uleb128 0x17
 2772 000d 11       		.uleb128 0x11
 2773 000e 01       		.uleb128 0x1
 2774 000f 10       		.uleb128 0x10
 2775 0010 17       		.uleb128 0x17
 2776 0011 00       		.byte	0
 2777 0012 00       		.byte	0
 2778 0013 02       		.uleb128 0x2
 2779 0014 24       		.uleb128 0x24
 2780 0015 00       		.byte	0
 2781 0016 0B       		.uleb128 0xb
 2782 0017 0B       		.uleb128 0xb
 2783 0018 3E       		.uleb128 0x3e
 2784 0019 0B       		.uleb128 0xb
 2785 001a 03       		.uleb128 0x3
 2786 001b 0E       		.uleb128 0xe
 2787 001c 00       		.byte	0
 2788 001d 00       		.byte	0
 2789 001e 03       		.uleb128 0x3
 2790 001f 24       		.uleb128 0x24
 2791 0020 00       		.byte	0
 2792 0021 0B       		.uleb128 0xb
 2793 0022 0B       		.uleb128 0xb
 2794 0023 3E       		.uleb128 0x3e
 2795 0024 0B       		.uleb128 0xb
 2796 0025 03       		.uleb128 0x3
 2797 0026 08       		.uleb128 0x8
 2798 0027 00       		.byte	0
 2799 0028 00       		.byte	0
 2800 0029 04       		.uleb128 0x4
 2801 002a 16       		.uleb128 0x16
 2802 002b 00       		.byte	0
 2803 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 75


 2804 002d 0E       		.uleb128 0xe
 2805 002e 3A       		.uleb128 0x3a
 2806 002f 0B       		.uleb128 0xb
 2807 0030 3B       		.uleb128 0x3b
 2808 0031 05       		.uleb128 0x5
 2809 0032 49       		.uleb128 0x49
 2810 0033 13       		.uleb128 0x13
 2811 0034 00       		.byte	0
 2812 0035 00       		.byte	0
 2813 0036 05       		.uleb128 0x5
 2814 0037 35       		.uleb128 0x35
 2815 0038 00       		.byte	0
 2816 0039 49       		.uleb128 0x49
 2817 003a 13       		.uleb128 0x13
 2818 003b 00       		.byte	0
 2819 003c 00       		.byte	0
 2820 003d 06       		.uleb128 0x6
 2821 003e 2E       		.uleb128 0x2e
 2822 003f 00       		.byte	0
 2823 0040 3F       		.uleb128 0x3f
 2824 0041 19       		.uleb128 0x19
 2825 0042 03       		.uleb128 0x3
 2826 0043 0E       		.uleb128 0xe
 2827 0044 3A       		.uleb128 0x3a
 2828 0045 0B       		.uleb128 0xb
 2829 0046 3B       		.uleb128 0x3b
 2830 0047 0B       		.uleb128 0xb
 2831 0048 27       		.uleb128 0x27
 2832 0049 19       		.uleb128 0x19
 2833 004a 11       		.uleb128 0x11
 2834 004b 01       		.uleb128 0x1
 2835 004c 12       		.uleb128 0x12
 2836 004d 06       		.uleb128 0x6
 2837 004e 40       		.uleb128 0x40
 2838 004f 18       		.uleb128 0x18
 2839 0050 9642     		.uleb128 0x2116
 2840 0052 19       		.uleb128 0x19
 2841 0053 00       		.byte	0
 2842 0054 00       		.byte	0
 2843 0055 07       		.uleb128 0x7
 2844 0056 2E       		.uleb128 0x2e
 2845 0057 01       		.byte	0x1
 2846 0058 3F       		.uleb128 0x3f
 2847 0059 19       		.uleb128 0x19
 2848 005a 03       		.uleb128 0x3
 2849 005b 0E       		.uleb128 0xe
 2850 005c 3A       		.uleb128 0x3a
 2851 005d 0B       		.uleb128 0xb
 2852 005e 3B       		.uleb128 0x3b
 2853 005f 0B       		.uleb128 0xb
 2854 0060 27       		.uleb128 0x27
 2855 0061 19       		.uleb128 0x19
 2856 0062 11       		.uleb128 0x11
 2857 0063 01       		.uleb128 0x1
 2858 0064 12       		.uleb128 0x12
 2859 0065 06       		.uleb128 0x6
 2860 0066 40       		.uleb128 0x40
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 76


 2861 0067 18       		.uleb128 0x18
 2862 0068 9642     		.uleb128 0x2116
 2863 006a 19       		.uleb128 0x19
 2864 006b 01       		.uleb128 0x1
 2865 006c 13       		.uleb128 0x13
 2866 006d 00       		.byte	0
 2867 006e 00       		.byte	0
 2868 006f 08       		.uleb128 0x8
 2869 0070 34       		.uleb128 0x34
 2870 0071 00       		.byte	0
 2871 0072 03       		.uleb128 0x3
 2872 0073 0E       		.uleb128 0xe
 2873 0074 3A       		.uleb128 0x3a
 2874 0075 0B       		.uleb128 0xb
 2875 0076 3B       		.uleb128 0x3b
 2876 0077 0B       		.uleb128 0xb
 2877 0078 49       		.uleb128 0x49
 2878 0079 13       		.uleb128 0x13
 2879 007a 02       		.uleb128 0x2
 2880 007b 18       		.uleb128 0x18
 2881 007c 00       		.byte	0
 2882 007d 00       		.byte	0
 2883 007e 09       		.uleb128 0x9
 2884 007f 2E       		.uleb128 0x2e
 2885 0080 01       		.byte	0x1
 2886 0081 3F       		.uleb128 0x3f
 2887 0082 19       		.uleb128 0x19
 2888 0083 03       		.uleb128 0x3
 2889 0084 0E       		.uleb128 0xe
 2890 0085 3A       		.uleb128 0x3a
 2891 0086 0B       		.uleb128 0xb
 2892 0087 3B       		.uleb128 0x3b
 2893 0088 05       		.uleb128 0x5
 2894 0089 27       		.uleb128 0x27
 2895 008a 19       		.uleb128 0x19
 2896 008b 11       		.uleb128 0x11
 2897 008c 01       		.uleb128 0x1
 2898 008d 12       		.uleb128 0x12
 2899 008e 06       		.uleb128 0x6
 2900 008f 40       		.uleb128 0x40
 2901 0090 18       		.uleb128 0x18
 2902 0091 9642     		.uleb128 0x2116
 2903 0093 19       		.uleb128 0x19
 2904 0094 01       		.uleb128 0x1
 2905 0095 13       		.uleb128 0x13
 2906 0096 00       		.byte	0
 2907 0097 00       		.byte	0
 2908 0098 0A       		.uleb128 0xa
 2909 0099 34       		.uleb128 0x34
 2910 009a 00       		.byte	0
 2911 009b 03       		.uleb128 0x3
 2912 009c 0E       		.uleb128 0xe
 2913 009d 3A       		.uleb128 0x3a
 2914 009e 0B       		.uleb128 0xb
 2915 009f 3B       		.uleb128 0x3b
 2916 00a0 05       		.uleb128 0x5
 2917 00a1 49       		.uleb128 0x49
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 77


 2918 00a2 13       		.uleb128 0x13
 2919 00a3 02       		.uleb128 0x2
 2920 00a4 18       		.uleb128 0x18
 2921 00a5 00       		.byte	0
 2922 00a6 00       		.byte	0
 2923 00a7 0B       		.uleb128 0xb
 2924 00a8 05       		.uleb128 0x5
 2925 00a9 00       		.byte	0
 2926 00aa 03       		.uleb128 0x3
 2927 00ab 0E       		.uleb128 0xe
 2928 00ac 3A       		.uleb128 0x3a
 2929 00ad 0B       		.uleb128 0xb
 2930 00ae 3B       		.uleb128 0x3b
 2931 00af 05       		.uleb128 0x5
 2932 00b0 49       		.uleb128 0x49
 2933 00b1 13       		.uleb128 0x13
 2934 00b2 02       		.uleb128 0x2
 2935 00b3 18       		.uleb128 0x18
 2936 00b4 00       		.byte	0
 2937 00b5 00       		.byte	0
 2938 00b6 0C       		.uleb128 0xc
 2939 00b7 2E       		.uleb128 0x2e
 2940 00b8 01       		.byte	0x1
 2941 00b9 3F       		.uleb128 0x3f
 2942 00ba 19       		.uleb128 0x19
 2943 00bb 03       		.uleb128 0x3
 2944 00bc 0E       		.uleb128 0xe
 2945 00bd 3A       		.uleb128 0x3a
 2946 00be 0B       		.uleb128 0xb
 2947 00bf 3B       		.uleb128 0x3b
 2948 00c0 05       		.uleb128 0x5
 2949 00c1 27       		.uleb128 0x27
 2950 00c2 19       		.uleb128 0x19
 2951 00c3 11       		.uleb128 0x11
 2952 00c4 01       		.uleb128 0x1
 2953 00c5 12       		.uleb128 0x12
 2954 00c6 06       		.uleb128 0x6
 2955 00c7 40       		.uleb128 0x40
 2956 00c8 18       		.uleb128 0x18
 2957 00c9 9742     		.uleb128 0x2117
 2958 00cb 19       		.uleb128 0x19
 2959 00cc 01       		.uleb128 0x1
 2960 00cd 13       		.uleb128 0x13
 2961 00ce 00       		.byte	0
 2962 00cf 00       		.byte	0
 2963 00d0 0D       		.uleb128 0xd
 2964 00d1 2E       		.uleb128 0x2e
 2965 00d2 00       		.byte	0
 2966 00d3 3F       		.uleb128 0x3f
 2967 00d4 19       		.uleb128 0x19
 2968 00d5 03       		.uleb128 0x3
 2969 00d6 0E       		.uleb128 0xe
 2970 00d7 3A       		.uleb128 0x3a
 2971 00d8 0B       		.uleb128 0xb
 2972 00d9 3B       		.uleb128 0x3b
 2973 00da 05       		.uleb128 0x5
 2974 00db 27       		.uleb128 0x27
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 78


 2975 00dc 19       		.uleb128 0x19
 2976 00dd 49       		.uleb128 0x49
 2977 00de 13       		.uleb128 0x13
 2978 00df 11       		.uleb128 0x11
 2979 00e0 01       		.uleb128 0x1
 2980 00e1 12       		.uleb128 0x12
 2981 00e2 06       		.uleb128 0x6
 2982 00e3 40       		.uleb128 0x40
 2983 00e4 18       		.uleb128 0x18
 2984 00e5 9742     		.uleb128 0x2117
 2985 00e7 19       		.uleb128 0x19
 2986 00e8 00       		.byte	0
 2987 00e9 00       		.byte	0
 2988 00ea 0E       		.uleb128 0xe
 2989 00eb 34       		.uleb128 0x34
 2990 00ec 00       		.byte	0
 2991 00ed 03       		.uleb128 0x3
 2992 00ee 0E       		.uleb128 0xe
 2993 00ef 3A       		.uleb128 0x3a
 2994 00f0 0B       		.uleb128 0xb
 2995 00f1 3B       		.uleb128 0x3b
 2996 00f2 0B       		.uleb128 0xb
 2997 00f3 49       		.uleb128 0x49
 2998 00f4 13       		.uleb128 0x13
 2999 00f5 3F       		.uleb128 0x3f
 3000 00f6 19       		.uleb128 0x19
 3001 00f7 02       		.uleb128 0x2
 3002 00f8 18       		.uleb128 0x18
 3003 00f9 00       		.byte	0
 3004 00fa 00       		.byte	0
 3005 00fb 00       		.byte	0
 3006              		.section	.debug_aranges,"",%progbits
 3007 0000 54010000 		.4byte	0x154
 3008 0004 0200     		.2byte	0x2
 3009 0006 00000000 		.4byte	.Ldebug_info0
 3010 000a 04       		.byte	0x4
 3011 000b 00       		.byte	0
 3012 000c 0000     		.2byte	0
 3013 000e 0000     		.2byte	0
 3014 0010 00000000 		.4byte	.LFB0
 3015 0014 60000000 		.4byte	.LFE0-.LFB0
 3016 0018 00000000 		.4byte	.LFB1
 3017 001c 38000000 		.4byte	.LFE1-.LFB1
 3018 0020 00000000 		.4byte	.LFB2
 3019 0024 24000000 		.4byte	.LFE2-.LFB2
 3020 0028 00000000 		.4byte	.LFB3
 3021 002c 30000000 		.4byte	.LFE3-.LFB3
 3022 0030 00000000 		.4byte	.LFB4
 3023 0034 48000000 		.4byte	.LFE4-.LFB4
 3024 0038 00000000 		.4byte	.LFB5
 3025 003c 48000000 		.4byte	.LFE5-.LFB5
 3026 0040 00000000 		.4byte	.LFB6
 3027 0044 48000000 		.4byte	.LFE6-.LFB6
 3028 0048 00000000 		.4byte	.LFB7
 3029 004c 4C000000 		.4byte	.LFE7-.LFB7
 3030 0050 00000000 		.4byte	.LFB8
 3031 0054 1C000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 79


 3032 0058 00000000 		.4byte	.LFB9
 3033 005c 48000000 		.4byte	.LFE9-.LFB9
 3034 0060 00000000 		.4byte	.LFB10
 3035 0064 48000000 		.4byte	.LFE10-.LFB10
 3036 0068 00000000 		.4byte	.LFB11
 3037 006c 4C000000 		.4byte	.LFE11-.LFB11
 3038 0070 00000000 		.4byte	.LFB12
 3039 0074 48000000 		.4byte	.LFE12-.LFB12
 3040 0078 00000000 		.4byte	.LFB13
 3041 007c 1C000000 		.4byte	.LFE13-.LFB13
 3042 0080 00000000 		.4byte	.LFB14
 3043 0084 18000000 		.4byte	.LFE14-.LFB14
 3044 0088 00000000 		.4byte	.LFB15
 3045 008c 48000000 		.4byte	.LFE15-.LFB15
 3046 0090 00000000 		.4byte	.LFB16
 3047 0094 1C000000 		.4byte	.LFE16-.LFB16
 3048 0098 00000000 		.4byte	.LFB17
 3049 009c 18000000 		.4byte	.LFE17-.LFB17
 3050 00a0 00000000 		.4byte	.LFB18
 3051 00a4 48000000 		.4byte	.LFE18-.LFB18
 3052 00a8 00000000 		.4byte	.LFB19
 3053 00ac 1C000000 		.4byte	.LFE19-.LFB19
 3054 00b0 00000000 		.4byte	.LFB20
 3055 00b4 18000000 		.4byte	.LFE20-.LFB20
 3056 00b8 00000000 		.4byte	.LFB21
 3057 00bc 48000000 		.4byte	.LFE21-.LFB21
 3058 00c0 00000000 		.4byte	.LFB22
 3059 00c4 1C000000 		.4byte	.LFE22-.LFB22
 3060 00c8 00000000 		.4byte	.LFB23
 3061 00cc 18000000 		.4byte	.LFE23-.LFB23
 3062 00d0 00000000 		.4byte	.LFB24
 3063 00d4 1C000000 		.4byte	.LFE24-.LFB24
 3064 00d8 00000000 		.4byte	.LFB25
 3065 00dc 18000000 		.4byte	.LFE25-.LFB25
 3066 00e0 00000000 		.4byte	.LFB26
 3067 00e4 18000000 		.4byte	.LFE26-.LFB26
 3068 00e8 00000000 		.4byte	.LFB27
 3069 00ec 18000000 		.4byte	.LFE27-.LFB27
 3070 00f0 00000000 		.4byte	.LFB28
 3071 00f4 44000000 		.4byte	.LFE28-.LFB28
 3072 00f8 00000000 		.4byte	.LFB29
 3073 00fc 44000000 		.4byte	.LFE29-.LFB29
 3074 0100 00000000 		.4byte	.LFB30
 3075 0104 48000000 		.4byte	.LFE30-.LFB30
 3076 0108 00000000 		.4byte	.LFB31
 3077 010c 44000000 		.4byte	.LFE31-.LFB31
 3078 0110 00000000 		.4byte	.LFB32
 3079 0114 44000000 		.4byte	.LFE32-.LFB32
 3080 0118 00000000 		.4byte	.LFB33
 3081 011c 38000000 		.4byte	.LFE33-.LFB33
 3082 0120 00000000 		.4byte	.LFB34
 3083 0124 20000000 		.4byte	.LFE34-.LFB34
 3084 0128 00000000 		.4byte	.LFB35
 3085 012c 18000000 		.4byte	.LFE35-.LFB35
 3086 0130 00000000 		.4byte	.LFB36
 3087 0134 14000000 		.4byte	.LFE36-.LFB36
 3088 0138 00000000 		.4byte	.LFB37
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 80


 3089 013c 14000000 		.4byte	.LFE37-.LFB37
 3090 0140 00000000 		.4byte	.LFB38
 3091 0144 18000000 		.4byte	.LFE38-.LFB38
 3092 0148 00000000 		.4byte	.LFB39
 3093 014c 18000000 		.4byte	.LFE39-.LFB39
 3094 0150 00000000 		.4byte	0
 3095 0154 00000000 		.4byte	0
 3096              		.section	.debug_ranges,"",%progbits
 3097              	.Ldebug_ranges0:
 3098 0000 00000000 		.4byte	.LFB0
 3099 0004 60000000 		.4byte	.LFE0
 3100 0008 00000000 		.4byte	.LFB1
 3101 000c 38000000 		.4byte	.LFE1
 3102 0010 00000000 		.4byte	.LFB2
 3103 0014 24000000 		.4byte	.LFE2
 3104 0018 00000000 		.4byte	.LFB3
 3105 001c 30000000 		.4byte	.LFE3
 3106 0020 00000000 		.4byte	.LFB4
 3107 0024 48000000 		.4byte	.LFE4
 3108 0028 00000000 		.4byte	.LFB5
 3109 002c 48000000 		.4byte	.LFE5
 3110 0030 00000000 		.4byte	.LFB6
 3111 0034 48000000 		.4byte	.LFE6
 3112 0038 00000000 		.4byte	.LFB7
 3113 003c 4C000000 		.4byte	.LFE7
 3114 0040 00000000 		.4byte	.LFB8
 3115 0044 1C000000 		.4byte	.LFE8
 3116 0048 00000000 		.4byte	.LFB9
 3117 004c 48000000 		.4byte	.LFE9
 3118 0050 00000000 		.4byte	.LFB10
 3119 0054 48000000 		.4byte	.LFE10
 3120 0058 00000000 		.4byte	.LFB11
 3121 005c 4C000000 		.4byte	.LFE11
 3122 0060 00000000 		.4byte	.LFB12
 3123 0064 48000000 		.4byte	.LFE12
 3124 0068 00000000 		.4byte	.LFB13
 3125 006c 1C000000 		.4byte	.LFE13
 3126 0070 00000000 		.4byte	.LFB14
 3127 0074 18000000 		.4byte	.LFE14
 3128 0078 00000000 		.4byte	.LFB15
 3129 007c 48000000 		.4byte	.LFE15
 3130 0080 00000000 		.4byte	.LFB16
 3131 0084 1C000000 		.4byte	.LFE16
 3132 0088 00000000 		.4byte	.LFB17
 3133 008c 18000000 		.4byte	.LFE17
 3134 0090 00000000 		.4byte	.LFB18
 3135 0094 48000000 		.4byte	.LFE18
 3136 0098 00000000 		.4byte	.LFB19
 3137 009c 1C000000 		.4byte	.LFE19
 3138 00a0 00000000 		.4byte	.LFB20
 3139 00a4 18000000 		.4byte	.LFE20
 3140 00a8 00000000 		.4byte	.LFB21
 3141 00ac 48000000 		.4byte	.LFE21
 3142 00b0 00000000 		.4byte	.LFB22
 3143 00b4 1C000000 		.4byte	.LFE22
 3144 00b8 00000000 		.4byte	.LFB23
 3145 00bc 18000000 		.4byte	.LFE23
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 81


 3146 00c0 00000000 		.4byte	.LFB24
 3147 00c4 1C000000 		.4byte	.LFE24
 3148 00c8 00000000 		.4byte	.LFB25
 3149 00cc 18000000 		.4byte	.LFE25
 3150 00d0 00000000 		.4byte	.LFB26
 3151 00d4 18000000 		.4byte	.LFE26
 3152 00d8 00000000 		.4byte	.LFB27
 3153 00dc 18000000 		.4byte	.LFE27
 3154 00e0 00000000 		.4byte	.LFB28
 3155 00e4 44000000 		.4byte	.LFE28
 3156 00e8 00000000 		.4byte	.LFB29
 3157 00ec 44000000 		.4byte	.LFE29
 3158 00f0 00000000 		.4byte	.LFB30
 3159 00f4 48000000 		.4byte	.LFE30
 3160 00f8 00000000 		.4byte	.LFB31
 3161 00fc 44000000 		.4byte	.LFE31
 3162 0100 00000000 		.4byte	.LFB32
 3163 0104 44000000 		.4byte	.LFE32
 3164 0108 00000000 		.4byte	.LFB33
 3165 010c 38000000 		.4byte	.LFE33
 3166 0110 00000000 		.4byte	.LFB34
 3167 0114 20000000 		.4byte	.LFE34
 3168 0118 00000000 		.4byte	.LFB35
 3169 011c 18000000 		.4byte	.LFE35
 3170 0120 00000000 		.4byte	.LFB36
 3171 0124 14000000 		.4byte	.LFE36
 3172 0128 00000000 		.4byte	.LFB37
 3173 012c 14000000 		.4byte	.LFE37
 3174 0130 00000000 		.4byte	.LFB38
 3175 0134 18000000 		.4byte	.LFE38
 3176 0138 00000000 		.4byte	.LFB39
 3177 013c 18000000 		.4byte	.LFE39
 3178 0140 00000000 		.4byte	0
 3179 0144 00000000 		.4byte	0
 3180              		.section	.debug_line,"",%progbits
 3181              	.Ldebug_line0:
 3182 0000 6F030000 		.section	.debug_str,"MS",%progbits,1
 3182      02004200 
 3182      00000201 
 3182      FB0E0D00 
 3182      01010101 
 3183              	.LASF40:
 3184 0000 636F756E 		.ascii	"count\000"
 3184      7400
 3185              	.LASF18:
 3186 0006 50574D5F 		.ascii	"PWM_Enable\000"
 3186      456E6162 
 3186      6C6500
 3187              	.LASF31:
 3188 0011 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 3188      53657450 
 3188      574D5379 
 3188      6E634B69 
 3188      6C6C00
 3189              	.LASF78:
 3190 0024 453A5C50 		.ascii	"E:\\Projekt 4. semester\\HellYaeh\\PWMExample01\\PW"
 3190      726F6A65 
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 82


 3190      6B742034 
 3190      2E207365 
 3190      6D657374 
 3191 0053 4D457861 		.ascii	"MExample01.cydsn\000"
 3191      6D706C65 
 3191      30312E63 
 3191      7964736E 
 3191      00
 3192              	.LASF44:
 3193 0064 70657269 		.ascii	"period\000"
 3193      6F6400
 3194              	.LASF7:
 3195 006b 6C6F6E67 		.ascii	"long long unsigned int\000"
 3195      206C6F6E 
 3195      6720756E 
 3195      7369676E 
 3195      65642069 
 3196              	.LASF61:
 3197 0082 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 3197      53657443 
 3197      61707475 
 3197      72654D6F 
 3197      646500
 3198              	.LASF24:
 3199 0095 71644D6F 		.ascii	"qdMode\000"
 3199      646500
 3200              	.LASF39:
 3201 009c 50574D5F 		.ascii	"PWM_WriteCounter\000"
 3201      57726974 
 3201      65436F75 
 3201      6E746572 
 3201      00
 3202              	.LASF45:
 3203 00ad 50574D5F 		.ascii	"PWM_ReadCounter\000"
 3203      52656164 
 3203      436F756E 
 3203      74657200 
 3204              	.LASF6:
 3205 00bd 6C6F6E67 		.ascii	"long long int\000"
 3205      206C6F6E 
 3205      6720696E 
 3205      7400
 3206              	.LASF0:
 3207 00cb 7369676E 		.ascii	"signed char\000"
 3207      65642063 
 3207      68617200 
 3208              	.LASF56:
 3209 00d7 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 3209      57726974 
 3209      65436F6D 
 3209      70617265 
 3209      42756600 
 3210              	.LASF70:
 3211 00eb 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 3211      53657449 
 3211      6E746572 
 3211      72757074 
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 83


 3211      4D6F6465 
 3212              	.LASF74:
 3213 0100 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 3213      436C6561 
 3213      72496E74 
 3213      65727275 
 3213      707400
 3214              	.LASF77:
 3215 0113 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM.c\000"
 3215      6E657261 
 3215      7465645F 
 3215      536F7572 
 3215      63655C50 
 3216              	.LASF4:
 3217 0132 6C6F6E67 		.ascii	"long int\000"
 3217      20696E74 
 3217      00
 3218              	.LASF9:
 3219 013b 75696E74 		.ascii	"uint8\000"
 3219      3800
 3220              	.LASF12:
 3221 0141 646F7562 		.ascii	"double\000"
 3221      6C6500
 3222              	.LASF58:
 3223 0148 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 3223      52656164 
 3223      436F6D70 
 3223      61726542 
 3223      756600
 3224              	.LASF47:
 3225 015b 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 3225      53657443 
 3225      6F6D7061 
 3225      72655377 
 3225      617000
 3226              	.LASF19:
 3227 016e 50574D5F 		.ascii	"PWM_Stop\000"
 3227      53746F70 
 3227      00
 3228              	.LASF37:
 3229 0177 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 3229      53657450 
 3229      574D496E 
 3229      76657274 
 3229      00
 3230              	.LASF10:
 3231 0188 75696E74 		.ascii	"uint32\000"
 3231      333200
 3232              	.LASF64:
 3233 018f 50574D5F 		.ascii	"PWM_SetStartMode\000"
 3233      53657453 
 3233      74617274 
 3233      4D6F6465 
 3233      00
 3234              	.LASF62:
 3235 01a0 74726967 		.ascii	"triggerMode\000"
 3235      6765724D 
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 84


 3235      6F646500 
 3236              	.LASF38:
 3237 01ac 6D61736B 		.ascii	"mask\000"
 3237      00
 3238              	.LASF69:
 3239 01b1 50574D5F 		.ascii	"PWM_ReadStatus\000"
 3239      52656164 
 3239      53746174 
 3239      757300
 3240              	.LASF36:
 3241 01c0 64656164 		.ascii	"deadTime\000"
 3241      54696D65 
 3241      00
 3242              	.LASF65:
 3243 01c9 50574D5F 		.ascii	"PWM_SetStopMode\000"
 3243      53657453 
 3243      746F704D 
 3243      6F646500 
 3244              	.LASF8:
 3245 01d9 756E7369 		.ascii	"unsigned int\000"
 3245      676E6564 
 3245      20696E74 
 3245      00
 3246              	.LASF35:
 3247 01e6 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 3247      53657450 
 3247      574D4465 
 3247      61645469 
 3247      6D6500
 3248              	.LASF68:
 3249 01f9 636F6D6D 		.ascii	"command\000"
 3249      616E6400 
 3250              	.LASF5:
 3251 0201 6C6F6E67 		.ascii	"long unsigned int\000"
 3251      20756E73 
 3251      69676E65 
 3251      6420696E 
 3251      7400
 3252              	.LASF30:
 3253 0213 6D6F6465 		.ascii	"modeMask\000"
 3253      4D61736B 
 3253      00
 3254              	.LASF3:
 3255 021c 73686F72 		.ascii	"short unsigned int\000"
 3255      7420756E 
 3255      7369676E 
 3255      65642069 
 3255      6E7400
 3256              	.LASF25:
 3257 022f 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 3257      53657450 
 3257      72657363 
 3257      616C6572 
 3257      00
 3258              	.LASF17:
 3259 0240 50574D5F 		.ascii	"PWM_Start\000"
 3259      53746172 
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 85


 3259      7400
 3260              	.LASF67:
 3261 024a 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 3261      54726967 
 3261      67657243 
 3261      6F6D6D61 
 3261      6E6400
 3262              	.LASF53:
 3263 025d 50574D5F 		.ascii	"PWM_WriteCompare\000"
 3263      57726974 
 3263      65436F6D 
 3263      70617265 
 3263      00
 3264              	.LASF43:
 3265 026e 50574D5F 		.ascii	"PWM_WritePeriod\000"
 3265      57726974 
 3265      65506572 
 3265      696F6400 
 3266              	.LASF14:
 3267 027e 72656733 		.ascii	"reg32\000"
 3267      3200
 3268              	.LASF79:
 3269 0284 50574D5F 		.ascii	"PWM_initVar\000"
 3269      696E6974 
 3269      56617200 
 3270              	.LASF46:
 3271 0290 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 3271      52656164 
 3271      50657269 
 3271      6F6400
 3272              	.LASF15:
 3273 029f 73697A65 		.ascii	"sizetype\000"
 3273      74797065 
 3273      00
 3274              	.LASF32:
 3275 02a8 73796E63 		.ascii	"syncKillEnable\000"
 3275      4B696C6C 
 3275      456E6162 
 3275      6C6500
 3276              	.LASF54:
 3277 02b7 636F6D70 		.ascii	"compare\000"
 3277      61726500 
 3278              	.LASF27:
 3279 02bf 50574D5F 		.ascii	"PWM_SetOneShot\000"
 3279      5365744F 
 3279      6E655368 
 3279      6F7400
 3280              	.LASF51:
 3281 02ce 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 3281      52656164 
 3281      50657269 
 3281      6F644275 
 3281      6600
 3282              	.LASF11:
 3283 02e0 666C6F61 		.ascii	"float\000"
 3283      7400
 3284              	.LASF26:
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 86


 3285 02e6 70726573 		.ascii	"prescaler\000"
 3285      63616C65 
 3285      7200
 3286              	.LASF59:
 3287 02f0 50574D5F 		.ascii	"PWM_ReadCapture\000"
 3287      52656164 
 3287      43617074 
 3287      75726500 
 3288              	.LASF52:
 3289 0300 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 3289      53657450 
 3289      6572696F 
 3289      64537761 
 3289      7000
 3290              	.LASF1:
 3291 0312 756E7369 		.ascii	"unsigned char\000"
 3291      676E6564 
 3291      20636861 
 3291      7200
 3292              	.LASF16:
 3293 0320 50574D5F 		.ascii	"PWM_Init\000"
 3293      496E6974 
 3293      00
 3294              	.LASF34:
 3295 0329 73746F70 		.ascii	"stopOnKillEnable\000"
 3295      4F6E4B69 
 3295      6C6C456E 
 3295      61626C65 
 3295      00
 3296              	.LASF29:
 3297 033a 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 3297      53657450 
 3297      574D4D6F 
 3297      646500
 3298              	.LASF2:
 3299 0349 73686F72 		.ascii	"short int\000"
 3299      7420696E 
 3299      7400
 3300              	.LASF72:
 3301 0353 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 3301      47657449 
 3301      6E746572 
 3301      72757074 
 3301      536F7572 
 3302              	.LASF71:
 3303 0370 696E7465 		.ascii	"interruptMask\000"
 3303      72727570 
 3303      744D6173 
 3303      6B00
 3304              	.LASF49:
 3305 037e 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 3305      57726974 
 3305      65506572 
 3305      696F6442 
 3305      756600
 3306              	.LASF22:
 3307 0391 50574D5F 		.ascii	"PWM_SetQDMode\000"
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 87


 3307      53657451 
 3307      444D6F64 
 3307      6500
 3308              	.LASF13:
 3309 039f 63686172 		.ascii	"char\000"
 3309      00
 3310              	.LASF23:
 3311 03a4 6D6F6465 		.ascii	"mode\000"
 3311      00
 3312              	.LASF75:
 3313 03a9 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 3313      53657449 
 3313      6E746572 
 3313      72757074 
 3313      00
 3314              	.LASF63:
 3315 03ba 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 3315      53657452 
 3315      656C6F61 
 3315      644D6F64 
 3315      6500
 3316              	.LASF42:
 3317 03cc 636F756E 		.ascii	"counterMode\000"
 3317      7465724D 
 3317      6F646500 
 3318              	.LASF48:
 3319 03d8 73776170 		.ascii	"swapEnable\000"
 3319      456E6162 
 3319      6C6500
 3320              	.LASF57:
 3321 03e3 636F6D70 		.ascii	"compareBuf\000"
 3321      61726542 
 3321      756600
 3322              	.LASF50:
 3323 03ee 70657269 		.ascii	"periodBuf\000"
 3323      6F644275 
 3323      6600
 3324              	.LASF60:
 3325 03f8 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 3325      52656164 
 3325      43617074 
 3325      75726542 
 3325      756600
 3326              	.LASF20:
 3327 040b 656E6162 		.ascii	"enableInterrupts\000"
 3327      6C65496E 
 3327      74657272 
 3327      75707473 
 3327      00
 3328              	.LASF66:
 3329 041c 50574D5F 		.ascii	"PWM_SetCountMode\000"
 3329      53657443 
 3329      6F756E74 
 3329      4D6F6465 
 3329      00
 3330              	.LASF28:
 3331 042d 6F6E6553 		.ascii	"oneShotEnable\000"
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cc2Pz2kk.s 			page 88


 3331      686F7445 
 3331      6E61626C 
 3331      6500
 3332              	.LASF21:
 3333 043b 50574D5F 		.ascii	"PWM_SetMode\000"
 3333      5365744D 
 3333      6F646500 
 3334              	.LASF33:
 3335 0447 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 3335      53657450 
 3335      574D5374 
 3335      6F704F6E 
 3335      4B696C6C 
 3336              	.LASF76:
 3337 045c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3337      4320342E 
 3337      392E3320 
 3337      32303135 
 3337      30333033 
 3338 048f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3338      20726576 
 3338      6973696F 
 3338      6E203232 
 3338      31323230 
 3339 04c2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3339      66756E63 
 3339      74696F6E 
 3339      2D736563 
 3339      74696F6E 
 3340              	.LASF73:
 3341 04ea 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 3341      47657449 
 3341      6E746572 
 3341      72757074 
 3341      536F7572 
 3342              	.LASF41:
 3343 0501 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 3343      53657443 
 3343      6F756E74 
 3343      65724D6F 
 3343      646500
 3344              	.LASF55:
 3345 0514 50574D5F 		.ascii	"PWM_ReadCompare\000"
 3345      52656164 
 3345      436F6D70 
 3345      61726500 
 3346              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
