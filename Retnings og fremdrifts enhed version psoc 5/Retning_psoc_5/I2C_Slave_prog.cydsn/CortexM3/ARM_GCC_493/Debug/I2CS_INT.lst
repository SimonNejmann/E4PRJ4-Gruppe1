<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 1
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 1
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"I2CS_INT.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.I2CS_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	I2CS_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	I2CS_ISR, %function
  24              	I2CS_ISR:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC5\\I2CS_INT.c"
   1:Generated_Source\PSoC5/I2CS_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/I2CS_INT.c **** * File Name: I2CS_INT.c
   3:Generated_Source\PSoC5/I2CS_INT.c **** * Version 3.50
   4:Generated_Source\PSoC5/I2CS_INT.c **** *
   5:Generated_Source\PSoC5/I2CS_INT.c **** * Description:
   6:Generated_Source\PSoC5/I2CS_INT.c **** *  This file provides the source code of Interrupt Service Routine (ISR)
   7:Generated_Source\PSoC5/I2CS_INT.c **** *  for the I2C component.
   8:Generated_Source\PSoC5/I2CS_INT.c **** *
   9:Generated_Source\PSoC5/I2CS_INT.c **** ********************************************************************************
  10:Generated_Source\PSoC5/I2CS_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC5/I2CS_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/I2CS_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/I2CS_INT.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/I2CS_INT.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/I2CS_INT.c **** 
  16:Generated_Source\PSoC5/I2CS_INT.c **** #include "I2CS_PVT.h"
  17:Generated_Source\PSoC5/I2CS_INT.c **** #include "cyapicallbacks.h"
  18:Generated_Source\PSoC5/I2CS_INT.c **** 
  19:Generated_Source\PSoC5/I2CS_INT.c **** 
  20:Generated_Source\PSoC5/I2CS_INT.c **** /*******************************************************************************
  21:Generated_Source\PSoC5/I2CS_INT.c **** *  Place your includes, defines and code here.
  22:Generated_Source\PSoC5/I2CS_INT.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/I2CS_INT.c **** /* `#START I2CS_ISR_intc` */
  24:Generated_Source\PSoC5/I2CS_INT.c **** 
  25:Generated_Source\PSoC5/I2CS_INT.c **** /* `#END` */
  26:Generated_Source\PSoC5/I2CS_INT.c **** 
  27:Generated_Source\PSoC5/I2CS_INT.c **** 
  28:Generated_Source\PSoC5/I2CS_INT.c **** /*******************************************************************************
  29:Generated_Source\PSoC5/I2CS_INT.c **** * Function Name: I2CS_ISR
  30:Generated_Source\PSoC5/I2CS_INT.c **** ********************************************************************************
  31:Generated_Source\PSoC5/I2CS_INT.c **** *
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 2
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 2
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


  32:Generated_Source\PSoC5/I2CS_INT.c **** * Summary:
  33:Generated_Source\PSoC5/I2CS_INT.c **** *  The handler for the I2C interrupt. The slave and master operations are
  34:Generated_Source\PSoC5/I2CS_INT.c **** *  handled here.
  35:Generated_Source\PSoC5/I2CS_INT.c **** *
  36:Generated_Source\PSoC5/I2CS_INT.c **** * Parameters:
  37:Generated_Source\PSoC5/I2CS_INT.c **** *  None.
  38:Generated_Source\PSoC5/I2CS_INT.c **** *
  39:Generated_Source\PSoC5/I2CS_INT.c **** * Return:
  40:Generated_Source\PSoC5/I2CS_INT.c **** *  None.
  41:Generated_Source\PSoC5/I2CS_INT.c **** *
  42:Generated_Source\PSoC5/I2CS_INT.c **** * Reentrant:
  43:Generated_Source\PSoC5/I2CS_INT.c **** *  No.
  44:Generated_Source\PSoC5/I2CS_INT.c **** *
  45:Generated_Source\PSoC5/I2CS_INT.c **** *******************************************************************************/
  46:Generated_Source\PSoC5/I2CS_INT.c **** CY_ISR(I2CS_ISR)
  47:Generated_Source\PSoC5/I2CS_INT.c **** {
  27              		.loc 1 47 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
  48:Generated_Source\PSoC5/I2CS_INT.c **** #if (I2CS_MODE_SLAVE_ENABLED)
  49:Generated_Source\PSoC5/I2CS_INT.c ****    uint8  tmp8;
  50:Generated_Source\PSoC5/I2CS_INT.c **** #endif  /* (I2CS_MODE_SLAVE_ENABLED) */
  51:Generated_Source\PSoC5/I2CS_INT.c **** 
  52:Generated_Source\PSoC5/I2CS_INT.c ****     uint8  tmpCsr;
  53:Generated_Source\PSoC5/I2CS_INT.c ****     
  54:Generated_Source\PSoC5/I2CS_INT.c **** #ifdef I2CS_ISR_ENTRY_CALLBACK
  55:Generated_Source\PSoC5/I2CS_INT.c ****     I2CS_ISR_EntryCallback();
  56:Generated_Source\PSoC5/I2CS_INT.c **** #endif /* I2CS_ISR_ENTRY_CALLBACK */
  57:Generated_Source\PSoC5/I2CS_INT.c ****     
  58:Generated_Source\PSoC5/I2CS_INT.c **** 
  59:Generated_Source\PSoC5/I2CS_INT.c **** #if(I2CS_TIMEOUT_FF_ENABLED)
  60:Generated_Source\PSoC5/I2CS_INT.c ****     if(0u != I2CS_TimeoutGetStatus())
  61:Generated_Source\PSoC5/I2CS_INT.c ****     {
  62:Generated_Source\PSoC5/I2CS_INT.c ****         I2CS_TimeoutReset();
  63:Generated_Source\PSoC5/I2CS_INT.c ****         I2CS_state = I2CS_SM_EXIT_IDLE;
  64:Generated_Source\PSoC5/I2CS_INT.c ****         /* I2CS_CSR_REG should be cleared after reset */
  65:Generated_Source\PSoC5/I2CS_INT.c ****     }
  66:Generated_Source\PSoC5/I2CS_INT.c **** #endif /* (I2CS_TIMEOUT_FF_ENABLED) */
  67:Generated_Source\PSoC5/I2CS_INT.c **** 
  68:Generated_Source\PSoC5/I2CS_INT.c **** 
  69:Generated_Source\PSoC5/I2CS_INT.c ****     tmpCsr = I2CS_CSR_REG;      /* Make copy as interrupts clear */
  35              		.loc 1 69 0
  36 0002 714B     		ldr	r3, .L16
  37 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  38 0006 DAB2     		uxtb	r2, r3
  39              	.LVL0:
  70:Generated_Source\PSoC5/I2CS_INT.c **** 
  71:Generated_Source\PSoC5/I2CS_INT.c **** #if(I2CS_MODE_MULTI_MASTER_SLAVE_ENABLED)
  72:Generated_Source\PSoC5/I2CS_INT.c ****     if(I2CS_CHECK_START_GEN(I2CS_MCSR_REG))
  73:Generated_Source\PSoC5/I2CS_INT.c ****     {
  74:Generated_Source\PSoC5/I2CS_INT.c ****         I2CS_CLEAR_START_GEN;
  75:Generated_Source\PSoC5/I2CS_INT.c **** 
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 3
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 3
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


  76:Generated_Source\PSoC5/I2CS_INT.c ****         /* Set transfer complete and error flags */
  77:Generated_Source\PSoC5/I2CS_INT.c ****         I2CS_mstrStatus |= (I2CS_MSTAT_ERR_XFER |
  78:Generated_Source\PSoC5/I2CS_INT.c ****                                         I2CS_GET_MSTAT_CMPLT);
  79:Generated_Source\PSoC5/I2CS_INT.c **** 
  80:Generated_Source\PSoC5/I2CS_INT.c ****         /* Slave was addressed */
  81:Generated_Source\PSoC5/I2CS_INT.c ****         I2CS_state = I2CS_SM_SLAVE;
  82:Generated_Source\PSoC5/I2CS_INT.c ****     }
  83:Generated_Source\PSoC5/I2CS_INT.c **** #endif /* (I2CS_MODE_MULTI_MASTER_SLAVE_ENABLED) */
  84:Generated_Source\PSoC5/I2CS_INT.c **** 
  85:Generated_Source\PSoC5/I2CS_INT.c **** 
  86:Generated_Source\PSoC5/I2CS_INT.c **** #if(I2CS_MODE_MULTI_MASTER_ENABLED)
  87:Generated_Source\PSoC5/I2CS_INT.c ****     if(I2CS_CHECK_LOST_ARB(tmpCsr))
  88:Generated_Source\PSoC5/I2CS_INT.c ****     {
  89:Generated_Source\PSoC5/I2CS_INT.c ****         /* Set errors */
  90:Generated_Source\PSoC5/I2CS_INT.c ****         I2CS_mstrStatus |= (I2CS_MSTAT_ERR_XFER     |
  91:Generated_Source\PSoC5/I2CS_INT.c ****                                         I2CS_MSTAT_ERR_ARB_LOST |
  92:Generated_Source\PSoC5/I2CS_INT.c ****                                         I2CS_GET_MSTAT_CMPLT);
  93:Generated_Source\PSoC5/I2CS_INT.c **** 
  94:Generated_Source\PSoC5/I2CS_INT.c ****         I2CS_DISABLE_INT_ON_STOP; /* Interrupt on Stop is enabled by write */
  95:Generated_Source\PSoC5/I2CS_INT.c **** 
  96:Generated_Source\PSoC5/I2CS_INT.c ****         #if(I2CS_MODE_MULTI_MASTER_SLAVE_ENABLED)
  97:Generated_Source\PSoC5/I2CS_INT.c ****             if(I2CS_CHECK_ADDRESS_STS(tmpCsr))
  98:Generated_Source\PSoC5/I2CS_INT.c ****             {
  99:Generated_Source\PSoC5/I2CS_INT.c ****                 /* Slave was addressed */
 100:Generated_Source\PSoC5/I2CS_INT.c ****                 I2CS_state = I2CS_SM_SLAVE;
 101:Generated_Source\PSoC5/I2CS_INT.c ****             }
 102:Generated_Source\PSoC5/I2CS_INT.c ****             else
 103:Generated_Source\PSoC5/I2CS_INT.c ****             {
 104:Generated_Source\PSoC5/I2CS_INT.c ****                 I2CS_BUS_RELEASE;
 105:Generated_Source\PSoC5/I2CS_INT.c **** 
 106:Generated_Source\PSoC5/I2CS_INT.c ****                 I2CS_state = I2CS_SM_EXIT_IDLE;
 107:Generated_Source\PSoC5/I2CS_INT.c ****             }
 108:Generated_Source\PSoC5/I2CS_INT.c ****         #else
 109:Generated_Source\PSoC5/I2CS_INT.c ****             I2CS_BUS_RELEASE;
 110:Generated_Source\PSoC5/I2CS_INT.c **** 
 111:Generated_Source\PSoC5/I2CS_INT.c ****             I2CS_state = I2CS_SM_EXIT_IDLE;
 112:Generated_Source\PSoC5/I2CS_INT.c **** 
 113:Generated_Source\PSoC5/I2CS_INT.c ****         #endif /* (I2CS_MODE_MULTI_MASTER_SLAVE_ENABLED) */
 114:Generated_Source\PSoC5/I2CS_INT.c ****     }
 115:Generated_Source\PSoC5/I2CS_INT.c **** #endif /* (I2CS_MODE_MULTI_MASTER_ENABLED) */
 116:Generated_Source\PSoC5/I2CS_INT.c **** 
 117:Generated_Source\PSoC5/I2CS_INT.c ****     /* Check for master operation mode */
 118:Generated_Source\PSoC5/I2CS_INT.c ****     if(I2CS_CHECK_SM_MASTER)
  40              		.loc 1 118 0
  41 0008 704B     		ldr	r3, .L16+4
  42 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  43 000c 13F0400F 		tst	r3, #64
  44 0010 40F0D880 		bne	.L1
 119:Generated_Source\PSoC5/I2CS_INT.c ****     {
 120:Generated_Source\PSoC5/I2CS_INT.c ****     #if(I2CS_MODE_MASTER_ENABLED)
 121:Generated_Source\PSoC5/I2CS_INT.c ****         if(I2CS_CHECK_BYTE_COMPLETE(tmpCsr))
 122:Generated_Source\PSoC5/I2CS_INT.c ****         {
 123:Generated_Source\PSoC5/I2CS_INT.c ****             switch (I2CS_state)
 124:Generated_Source\PSoC5/I2CS_INT.c ****             {
 125:Generated_Source\PSoC5/I2CS_INT.c ****             case I2CS_SM_MSTR_WR_ADDR:  /* After address is sent, write data */
 126:Generated_Source\PSoC5/I2CS_INT.c ****             case I2CS_SM_MSTR_RD_ADDR:  /* After address is sent, read data */
 127:Generated_Source\PSoC5/I2CS_INT.c **** 
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 4
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 4
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 128:Generated_Source\PSoC5/I2CS_INT.c ****                 tmpCsr &= ((uint8) ~I2CS_CSR_STOP_STATUS); /* Clear Stop bit history on address pha
 129:Generated_Source\PSoC5/I2CS_INT.c **** 
 130:Generated_Source\PSoC5/I2CS_INT.c ****                 if(I2CS_CHECK_ADDR_ACK(tmpCsr))
 131:Generated_Source\PSoC5/I2CS_INT.c ****                 {
 132:Generated_Source\PSoC5/I2CS_INT.c ****                     /* Setup for transmit or receive of data */
 133:Generated_Source\PSoC5/I2CS_INT.c ****                     if(I2CS_state == I2CS_SM_MSTR_WR_ADDR)   /* TRANSMIT data */
 134:Generated_Source\PSoC5/I2CS_INT.c ****                     {
 135:Generated_Source\PSoC5/I2CS_INT.c ****                         /* Check if at least one byte to transfer */
 136:Generated_Source\PSoC5/I2CS_INT.c ****                         if(I2CS_mstrWrBufSize > 0u)
 137:Generated_Source\PSoC5/I2CS_INT.c ****                         {
 138:Generated_Source\PSoC5/I2CS_INT.c ****                             /* Load the 1st data byte */
 139:Generated_Source\PSoC5/I2CS_INT.c ****                             I2CS_DATA_REG = I2CS_mstrWrBufPtr[0u];
 140:Generated_Source\PSoC5/I2CS_INT.c ****                             I2CS_TRANSMIT_DATA;
 141:Generated_Source\PSoC5/I2CS_INT.c ****                             I2CS_mstrWrBufIndex = 1u;   /* Set index to 2nd element */
 142:Generated_Source\PSoC5/I2CS_INT.c **** 
 143:Generated_Source\PSoC5/I2CS_INT.c ****                             /* Set transmit state until done */
 144:Generated_Source\PSoC5/I2CS_INT.c ****                             I2CS_state = I2CS_SM_MSTR_WR_DATA;
 145:Generated_Source\PSoC5/I2CS_INT.c ****                         }
 146:Generated_Source\PSoC5/I2CS_INT.c ****                         /* End of buffer: complete writing */
 147:Generated_Source\PSoC5/I2CS_INT.c ****                         else if(I2CS_CHECK_NO_STOP(I2CS_mstrControl))
 148:Generated_Source\PSoC5/I2CS_INT.c ****                         {
 149:Generated_Source\PSoC5/I2CS_INT.c ****                             /* Set write complete and master halted */
 150:Generated_Source\PSoC5/I2CS_INT.c ****                             I2CS_mstrStatus |= (I2CS_MSTAT_XFER_HALT |
 151:Generated_Source\PSoC5/I2CS_INT.c ****                                                             I2CS_MSTAT_WR_CMPLT);
 152:Generated_Source\PSoC5/I2CS_INT.c **** 
 153:Generated_Source\PSoC5/I2CS_INT.c ****                             I2CS_state = I2CS_SM_MSTR_HALT; /* Expect ReStart */
 154:Generated_Source\PSoC5/I2CS_INT.c ****                             I2CS_DisableInt();
 155:Generated_Source\PSoC5/I2CS_INT.c ****                         }
 156:Generated_Source\PSoC5/I2CS_INT.c ****                         else
 157:Generated_Source\PSoC5/I2CS_INT.c ****                         {
 158:Generated_Source\PSoC5/I2CS_INT.c ****                             I2CS_ENABLE_INT_ON_STOP; /* Enable interrupt on Stop, to catch it */
 159:Generated_Source\PSoC5/I2CS_INT.c ****                             I2CS_GENERATE_STOP;
 160:Generated_Source\PSoC5/I2CS_INT.c ****                         }
 161:Generated_Source\PSoC5/I2CS_INT.c ****                     }
 162:Generated_Source\PSoC5/I2CS_INT.c ****                     else  /* Master receive data */
 163:Generated_Source\PSoC5/I2CS_INT.c ****                     {
 164:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_READY_TO_READ; /* Release bus to read data */
 165:Generated_Source\PSoC5/I2CS_INT.c **** 
 166:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_state  = I2CS_SM_MSTR_RD_DATA;
 167:Generated_Source\PSoC5/I2CS_INT.c ****                     }
 168:Generated_Source\PSoC5/I2CS_INT.c ****                 }
 169:Generated_Source\PSoC5/I2CS_INT.c ****                 /* Address is NACKed */
 170:Generated_Source\PSoC5/I2CS_INT.c ****                 else if(I2CS_CHECK_ADDR_NAK(tmpCsr))
 171:Generated_Source\PSoC5/I2CS_INT.c ****                 {
 172:Generated_Source\PSoC5/I2CS_INT.c ****                     /* Set Address NAK error */
 173:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_mstrStatus |= (I2CS_MSTAT_ERR_XFER |
 174:Generated_Source\PSoC5/I2CS_INT.c ****                                                     I2CS_MSTAT_ERR_ADDR_NAK);
 175:Generated_Source\PSoC5/I2CS_INT.c **** 
 176:Generated_Source\PSoC5/I2CS_INT.c ****                     if(I2CS_CHECK_NO_STOP(I2CS_mstrControl))
 177:Generated_Source\PSoC5/I2CS_INT.c ****                     {
 178:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_mstrStatus |= (I2CS_MSTAT_XFER_HALT |
 179:Generated_Source\PSoC5/I2CS_INT.c ****                                                         I2CS_GET_MSTAT_CMPLT);
 180:Generated_Source\PSoC5/I2CS_INT.c **** 
 181:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_state = I2CS_SM_MSTR_HALT; /* Expect RESTART */
 182:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_DisableInt();
 183:Generated_Source\PSoC5/I2CS_INT.c ****                     }
 184:Generated_Source\PSoC5/I2CS_INT.c ****                     else  /* Do normal Stop */
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 5
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 5
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 185:Generated_Source\PSoC5/I2CS_INT.c ****                     {
 186:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_ENABLE_INT_ON_STOP; /* Enable interrupt on Stop, to catch it */
 187:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_GENERATE_STOP;
 188:Generated_Source\PSoC5/I2CS_INT.c ****                     }
 189:Generated_Source\PSoC5/I2CS_INT.c ****                 }
 190:Generated_Source\PSoC5/I2CS_INT.c ****                 else
 191:Generated_Source\PSoC5/I2CS_INT.c ****                 {
 192:Generated_Source\PSoC5/I2CS_INT.c ****                     /* Address phase is not set for some reason: error */
 193:Generated_Source\PSoC5/I2CS_INT.c ****                     #if(I2CS_TIMEOUT_ENABLED)
 194:Generated_Source\PSoC5/I2CS_INT.c ****                         /* Exit interrupt to take chance for timeout timer to handle this case */
 195:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_DisableInt();
 196:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_ClearPendingInt();
 197:Generated_Source\PSoC5/I2CS_INT.c ****                     #else
 198:Generated_Source\PSoC5/I2CS_INT.c ****                         /* Block execution flow: unexpected condition */
 199:Generated_Source\PSoC5/I2CS_INT.c ****                         CYASSERT(0u != 0u);
 200:Generated_Source\PSoC5/I2CS_INT.c ****                     #endif /* (I2CS_TIMEOUT_ENABLED) */
 201:Generated_Source\PSoC5/I2CS_INT.c ****                 }
 202:Generated_Source\PSoC5/I2CS_INT.c ****                 break;
 203:Generated_Source\PSoC5/I2CS_INT.c **** 
 204:Generated_Source\PSoC5/I2CS_INT.c ****             case I2CS_SM_MSTR_WR_DATA:
 205:Generated_Source\PSoC5/I2CS_INT.c **** 
 206:Generated_Source\PSoC5/I2CS_INT.c ****                 if(I2CS_CHECK_DATA_ACK(tmpCsr))
 207:Generated_Source\PSoC5/I2CS_INT.c ****                 {
 208:Generated_Source\PSoC5/I2CS_INT.c ****                     /* Check if end of buffer */
 209:Generated_Source\PSoC5/I2CS_INT.c ****                     if(I2CS_mstrWrBufIndex  < I2CS_mstrWrBufSize)
 210:Generated_Source\PSoC5/I2CS_INT.c ****                     {
 211:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_DATA_REG =
 212:Generated_Source\PSoC5/I2CS_INT.c ****                                                  I2CS_mstrWrBufPtr[I2CS_mstrWrBufIndex];
 213:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_TRANSMIT_DATA;
 214:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_mstrWrBufIndex++;
 215:Generated_Source\PSoC5/I2CS_INT.c ****                     }
 216:Generated_Source\PSoC5/I2CS_INT.c ****                     /* End of buffer: complete writing */
 217:Generated_Source\PSoC5/I2CS_INT.c ****                     else if(I2CS_CHECK_NO_STOP(I2CS_mstrControl))
 218:Generated_Source\PSoC5/I2CS_INT.c ****                     {
 219:Generated_Source\PSoC5/I2CS_INT.c ****                         /* Set write complete and master halted */
 220:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_mstrStatus |= (I2CS_MSTAT_XFER_HALT |
 221:Generated_Source\PSoC5/I2CS_INT.c ****                                                         I2CS_MSTAT_WR_CMPLT);
 222:Generated_Source\PSoC5/I2CS_INT.c **** 
 223:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_state = I2CS_SM_MSTR_HALT;    /* Expect restart */
 224:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_DisableInt();
 225:Generated_Source\PSoC5/I2CS_INT.c ****                     }
 226:Generated_Source\PSoC5/I2CS_INT.c ****                     else  /* Do normal Stop */
 227:Generated_Source\PSoC5/I2CS_INT.c ****                     {
 228:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_ENABLE_INT_ON_STOP;    /* Enable interrupt on Stop, to catch it */
 229:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_GENERATE_STOP;
 230:Generated_Source\PSoC5/I2CS_INT.c ****                     }
 231:Generated_Source\PSoC5/I2CS_INT.c ****                 }
 232:Generated_Source\PSoC5/I2CS_INT.c ****                 /* Last byte NAKed: end writing */
 233:Generated_Source\PSoC5/I2CS_INT.c ****                 else if(I2CS_CHECK_NO_STOP(I2CS_mstrControl))
 234:Generated_Source\PSoC5/I2CS_INT.c ****                 {
 235:Generated_Source\PSoC5/I2CS_INT.c ****                     /* Set write complete, short transfer and master halted */
 236:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_mstrStatus |= (I2CS_MSTAT_ERR_XFER       |
 237:Generated_Source\PSoC5/I2CS_INT.c ****                                                     I2CS_MSTAT_ERR_SHORT_XFER |
 238:Generated_Source\PSoC5/I2CS_INT.c ****                                                     I2CS_MSTAT_XFER_HALT      |
 239:Generated_Source\PSoC5/I2CS_INT.c ****                                                     I2CS_MSTAT_WR_CMPLT);
 240:Generated_Source\PSoC5/I2CS_INT.c **** 
 241:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_state = I2CS_SM_MSTR_HALT;    /* Expect ReStart */
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 6
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 6
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 242:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_DisableInt();
 243:Generated_Source\PSoC5/I2CS_INT.c ****                 }
 244:Generated_Source\PSoC5/I2CS_INT.c ****                 else  /* Do normal Stop */
 245:Generated_Source\PSoC5/I2CS_INT.c ****                 {
 246:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_ENABLE_INT_ON_STOP;    /* Enable interrupt on Stop, to catch it */
 247:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_GENERATE_STOP;
 248:Generated_Source\PSoC5/I2CS_INT.c **** 
 249:Generated_Source\PSoC5/I2CS_INT.c ****                     /* Set short transfer and error flag */
 250:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_mstrStatus |= (I2CS_MSTAT_ERR_SHORT_XFER |
 251:Generated_Source\PSoC5/I2CS_INT.c ****                                                     I2CS_MSTAT_ERR_XFER);
 252:Generated_Source\PSoC5/I2CS_INT.c ****                 }
 253:Generated_Source\PSoC5/I2CS_INT.c **** 
 254:Generated_Source\PSoC5/I2CS_INT.c ****                 break;
 255:Generated_Source\PSoC5/I2CS_INT.c **** 
 256:Generated_Source\PSoC5/I2CS_INT.c ****             case I2CS_SM_MSTR_RD_DATA:
 257:Generated_Source\PSoC5/I2CS_INT.c **** 
 258:Generated_Source\PSoC5/I2CS_INT.c ****                 I2CS_mstrRdBufPtr[I2CS_mstrRdBufIndex] = I2CS_DATA_REG;
 259:Generated_Source\PSoC5/I2CS_INT.c ****                 I2CS_mstrRdBufIndex++;
 260:Generated_Source\PSoC5/I2CS_INT.c **** 
 261:Generated_Source\PSoC5/I2CS_INT.c ****                 /* Check if end of buffer */
 262:Generated_Source\PSoC5/I2CS_INT.c ****                 if(I2CS_mstrRdBufIndex < I2CS_mstrRdBufSize)
 263:Generated_Source\PSoC5/I2CS_INT.c ****                 {
 264:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_ACK_AND_RECEIVE;       /* ACK and receive byte */
 265:Generated_Source\PSoC5/I2CS_INT.c ****                 }
 266:Generated_Source\PSoC5/I2CS_INT.c ****                 /* End of buffer: complete reading */
 267:Generated_Source\PSoC5/I2CS_INT.c ****                 else if(I2CS_CHECK_NO_STOP(I2CS_mstrControl))
 268:Generated_Source\PSoC5/I2CS_INT.c ****                 {
 269:Generated_Source\PSoC5/I2CS_INT.c ****                     /* Set read complete and master halted */
 270:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_mstrStatus |= (I2CS_MSTAT_XFER_HALT |
 271:Generated_Source\PSoC5/I2CS_INT.c ****                                                     I2CS_MSTAT_RD_CMPLT);
 272:Generated_Source\PSoC5/I2CS_INT.c **** 
 273:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_state = I2CS_SM_MSTR_HALT;    /* Expect ReStart */
 274:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_DisableInt();
 275:Generated_Source\PSoC5/I2CS_INT.c ****                 }
 276:Generated_Source\PSoC5/I2CS_INT.c ****                 else
 277:Generated_Source\PSoC5/I2CS_INT.c ****                 {
 278:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_ENABLE_INT_ON_STOP;
 279:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_NAK_AND_RECEIVE;       /* NACK and TRY to generate Stop */
 280:Generated_Source\PSoC5/I2CS_INT.c ****                 }
 281:Generated_Source\PSoC5/I2CS_INT.c ****                 break;
 282:Generated_Source\PSoC5/I2CS_INT.c **** 
 283:Generated_Source\PSoC5/I2CS_INT.c ****             default: /* This is an invalid state and should not occur */
 284:Generated_Source\PSoC5/I2CS_INT.c **** 
 285:Generated_Source\PSoC5/I2CS_INT.c ****             #if(I2CS_TIMEOUT_ENABLED)
 286:Generated_Source\PSoC5/I2CS_INT.c ****                 /* Exit interrupt to take chance for timeout timer to handles this case */
 287:Generated_Source\PSoC5/I2CS_INT.c ****                 I2CS_DisableInt();
 288:Generated_Source\PSoC5/I2CS_INT.c ****                 I2CS_ClearPendingInt();
 289:Generated_Source\PSoC5/I2CS_INT.c ****             #else
 290:Generated_Source\PSoC5/I2CS_INT.c ****                 /* Block execution flow: unexpected condition */
 291:Generated_Source\PSoC5/I2CS_INT.c ****                 CYASSERT(0u != 0u);
 292:Generated_Source\PSoC5/I2CS_INT.c ****             #endif /* (I2CS_TIMEOUT_ENABLED) */
 293:Generated_Source\PSoC5/I2CS_INT.c **** 
 294:Generated_Source\PSoC5/I2CS_INT.c ****                 break;
 295:Generated_Source\PSoC5/I2CS_INT.c ****             }
 296:Generated_Source\PSoC5/I2CS_INT.c ****         }
 297:Generated_Source\PSoC5/I2CS_INT.c **** 
 298:Generated_Source\PSoC5/I2CS_INT.c ****         /* Catches Stop: end of transaction */
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 7
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 7
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 299:Generated_Source\PSoC5/I2CS_INT.c ****         if(I2CS_CHECK_STOP_STS(tmpCsr))
 300:Generated_Source\PSoC5/I2CS_INT.c ****         {
 301:Generated_Source\PSoC5/I2CS_INT.c ****             I2CS_mstrStatus |= I2CS_GET_MSTAT_CMPLT;
 302:Generated_Source\PSoC5/I2CS_INT.c **** 
 303:Generated_Source\PSoC5/I2CS_INT.c ****             I2CS_DISABLE_INT_ON_STOP;
 304:Generated_Source\PSoC5/I2CS_INT.c ****             I2CS_state = I2CS_SM_IDLE;
 305:Generated_Source\PSoC5/I2CS_INT.c ****         }
 306:Generated_Source\PSoC5/I2CS_INT.c ****     #endif /* (I2CS_MODE_MASTER_ENABLED) */
 307:Generated_Source\PSoC5/I2CS_INT.c ****     }
 308:Generated_Source\PSoC5/I2CS_INT.c ****     else if(I2CS_CHECK_SM_SLAVE)
  45              		.loc 1 308 0
  46 0014 6D4B     		ldr	r3, .L16+4
  47 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  48 0018 13F0100F 		tst	r3, #16
  49 001c 00F0CF80 		beq	.L3
 309:Generated_Source\PSoC5/I2CS_INT.c ****     {
 310:Generated_Source\PSoC5/I2CS_INT.c ****     #if(I2CS_MODE_SLAVE_ENABLED)
 311:Generated_Source\PSoC5/I2CS_INT.c **** 
 312:Generated_Source\PSoC5/I2CS_INT.c ****         if((I2CS_CHECK_STOP_STS(tmpCsr)) || /* Stop || Restart */
  50              		.loc 1 312 0
  51 0020 12F0200F 		tst	r2, #32
  52 0024 03D1     		bne	.L4
 313:Generated_Source\PSoC5/I2CS_INT.c ****            (I2CS_CHECK_BYTE_COMPLETE(tmpCsr) && I2CS_CHECK_ADDRESS_STS(tmpCsr)))
  53              		.loc 1 313 0 discriminator 1
  54 0026 02F00903 		and	r3, r2, #9
 312:Generated_Source\PSoC5/I2CS_INT.c ****            (I2CS_CHECK_BYTE_COMPLETE(tmpCsr) && I2CS_CHECK_ADDRESS_STS(tmpCsr)))
  55              		.loc 1 312 0 discriminator 1
  56 002a 092B     		cmp	r3, #9
  57 002c 15D1     		bne	.L5
  58              	.L4:
 314:Generated_Source\PSoC5/I2CS_INT.c ****         {
 315:Generated_Source\PSoC5/I2CS_INT.c ****             /* Catch end of master write transaction: use interrupt on Stop */
 316:Generated_Source\PSoC5/I2CS_INT.c ****             /* The Stop bit history on address phase does not have correct state */
 317:Generated_Source\PSoC5/I2CS_INT.c ****             if(I2CS_SM_SL_WR_DATA == I2CS_state)
  59              		.loc 1 317 0
  60 002e 674B     		ldr	r3, .L16+4
  61 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62 0032 DBB2     		uxtb	r3, r3
  63 0034 112B     		cmp	r3, #17
  64 0036 10D1     		bne	.L5
 318:Generated_Source\PSoC5/I2CS_INT.c ****             {
 319:Generated_Source\PSoC5/I2CS_INT.c ****                 I2CS_DISABLE_INT_ON_STOP;
  65              		.loc 1 319 0
  66 0038 6549     		ldr	r1, .L16+8
  67 003a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  68 003c 03F0EF03 		and	r3, r3, #239
  69 0040 0B70     		strb	r3, [r1]
 320:Generated_Source\PSoC5/I2CS_INT.c **** 
 321:Generated_Source\PSoC5/I2CS_INT.c ****                 I2CS_slStatus &= ((uint8) ~I2CS_SSTAT_WR_BUSY);
  70              		.loc 1 321 0
  71 0042 644B     		ldr	r3, .L16+12
  72 0044 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
  73 0046 01F0DF01 		and	r1, r1, #223
  74 004a 1970     		strb	r1, [r3]
 322:Generated_Source\PSoC5/I2CS_INT.c ****                 I2CS_slStatus |= ((uint8)  I2CS_SSTAT_WR_CMPLT);
  75              		.loc 1 322 0
  76 004c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 8
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 8
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


  77 004e 41F01001 		orr	r1, r1, #16
  78 0052 1970     		strb	r1, [r3]
 323:Generated_Source\PSoC5/I2CS_INT.c **** 
 324:Generated_Source\PSoC5/I2CS_INT.c ****                 I2CS_state = I2CS_SM_IDLE;
  79              		.loc 1 324 0
  80 0054 1021     		movs	r1, #16
  81 0056 5D4B     		ldr	r3, .L16+4
  82 0058 1970     		strb	r1, [r3]
  83              	.L5:
 325:Generated_Source\PSoC5/I2CS_INT.c ****             }
 326:Generated_Source\PSoC5/I2CS_INT.c ****         }
 327:Generated_Source\PSoC5/I2CS_INT.c **** 
 328:Generated_Source\PSoC5/I2CS_INT.c ****         if(I2CS_CHECK_BYTE_COMPLETE(tmpCsr))
  84              		.loc 1 328 0
  85 005a 12F0010F 		tst	r2, #1
  86 005e 00F0B180 		beq	.L1
 329:Generated_Source\PSoC5/I2CS_INT.c ****         {
 330:Generated_Source\PSoC5/I2CS_INT.c ****             /* The address only issued after Start or ReStart: so check the address
 331:Generated_Source\PSoC5/I2CS_INT.c ****                to catch these events:
 332:Generated_Source\PSoC5/I2CS_INT.c ****                 FF : sets an address phase with a byte_complete interrupt trigger.
 333:Generated_Source\PSoC5/I2CS_INT.c ****                 UDB: sets an address phase immediately after Start or ReStart. */
 334:Generated_Source\PSoC5/I2CS_INT.c ****             if(I2CS_CHECK_ADDRESS_STS(tmpCsr))
  87              		.loc 1 334 0
  88 0062 12F0080F 		tst	r2, #8
  89 0066 41D0     		beq	.L6
 335:Generated_Source\PSoC5/I2CS_INT.c ****             {
 336:Generated_Source\PSoC5/I2CS_INT.c ****             /* Check for software address detection */
 337:Generated_Source\PSoC5/I2CS_INT.c ****             #if(I2CS_SW_ADRR_DECODE)
 338:Generated_Source\PSoC5/I2CS_INT.c ****                 tmp8 = I2CS_GET_SLAVE_ADDR(I2CS_DATA_REG);
 339:Generated_Source\PSoC5/I2CS_INT.c **** 
 340:Generated_Source\PSoC5/I2CS_INT.c ****                 if(tmp8 == I2CS_slAddress)   /* Check for address match */
 341:Generated_Source\PSoC5/I2CS_INT.c ****                 {
 342:Generated_Source\PSoC5/I2CS_INT.c ****                     if(0u != (I2CS_DATA_REG & I2CS_READ_FLAG))
 343:Generated_Source\PSoC5/I2CS_INT.c ****                     {
 344:Generated_Source\PSoC5/I2CS_INT.c ****                         /* Place code to prepare read buffer here                  */
 345:Generated_Source\PSoC5/I2CS_INT.c ****                         /* `#START I2CS_SW_PREPARE_READ_BUF_interrupt` */
 346:Generated_Source\PSoC5/I2CS_INT.c **** 
 347:Generated_Source\PSoC5/I2CS_INT.c ****                         /* `#END` */
 348:Generated_Source\PSoC5/I2CS_INT.c **** 
 349:Generated_Source\PSoC5/I2CS_INT.c ****                     #ifdef I2CS_SW_PREPARE_READ_BUF_CALLBACK
 350:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_SwPrepareReadBuf_Callback();
 351:Generated_Source\PSoC5/I2CS_INT.c ****                     #endif /* I2CS_SW_PREPARE_READ_BUF_CALLBACK */
 352:Generated_Source\PSoC5/I2CS_INT.c ****                         
 353:Generated_Source\PSoC5/I2CS_INT.c ****                         /* Prepare next operation to read, get data and place in data register */
 354:Generated_Source\PSoC5/I2CS_INT.c ****                         if(I2CS_slRdBufIndex < I2CS_slRdBufSize)
 355:Generated_Source\PSoC5/I2CS_INT.c ****                         {
 356:Generated_Source\PSoC5/I2CS_INT.c ****                             /* Load first data byte from array */
 357:Generated_Source\PSoC5/I2CS_INT.c ****                             I2CS_DATA_REG = I2CS_slRdBufPtr[I2CS_slRdBufIndex];
 358:Generated_Source\PSoC5/I2CS_INT.c ****                             I2CS_ACK_AND_TRANSMIT;
 359:Generated_Source\PSoC5/I2CS_INT.c ****                             I2CS_slRdBufIndex++;
 360:Generated_Source\PSoC5/I2CS_INT.c **** 
 361:Generated_Source\PSoC5/I2CS_INT.c ****                             I2CS_slStatus |= I2CS_SSTAT_RD_BUSY;
 362:Generated_Source\PSoC5/I2CS_INT.c ****                         }
 363:Generated_Source\PSoC5/I2CS_INT.c ****                         else    /* Overflow: provide 0xFF on bus */
 364:Generated_Source\PSoC5/I2CS_INT.c ****                         {
 365:Generated_Source\PSoC5/I2CS_INT.c ****                             I2CS_DATA_REG = I2CS_OVERFLOW_RETURN;
 366:Generated_Source\PSoC5/I2CS_INT.c ****                             I2CS_ACK_AND_TRANSMIT;
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 9
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 9
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 367:Generated_Source\PSoC5/I2CS_INT.c **** 
 368:Generated_Source\PSoC5/I2CS_INT.c ****                             I2CS_slStatus  |= (I2CS_SSTAT_RD_BUSY |
 369:Generated_Source\PSoC5/I2CS_INT.c ****                                                            I2CS_SSTAT_RD_ERR_OVFL);
 370:Generated_Source\PSoC5/I2CS_INT.c ****                         }
 371:Generated_Source\PSoC5/I2CS_INT.c **** 
 372:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_state = I2CS_SM_SL_RD_DATA;
 373:Generated_Source\PSoC5/I2CS_INT.c ****                     }
 374:Generated_Source\PSoC5/I2CS_INT.c ****                     else  /* Write transaction: receive 1st byte */
 375:Generated_Source\PSoC5/I2CS_INT.c ****                     {
 376:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_ACK_AND_RECEIVE;
 377:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_state = I2CS_SM_SL_WR_DATA;
 378:Generated_Source\PSoC5/I2CS_INT.c **** 
 379:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_slStatus |= I2CS_SSTAT_WR_BUSY;
 380:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_ENABLE_INT_ON_STOP;
 381:Generated_Source\PSoC5/I2CS_INT.c ****                     }
 382:Generated_Source\PSoC5/I2CS_INT.c ****                 }
 383:Generated_Source\PSoC5/I2CS_INT.c ****                 else
 384:Generated_Source\PSoC5/I2CS_INT.c ****                 {
 385:Generated_Source\PSoC5/I2CS_INT.c ****                     /*     Place code to compare for additional address here    */
 386:Generated_Source\PSoC5/I2CS_INT.c ****                     /* `#START I2CS_SW_ADDR_COMPARE_interruptStart` */
 387:Generated_Source\PSoC5/I2CS_INT.c **** 
 388:Generated_Source\PSoC5/I2CS_INT.c ****                     /* `#END` */
 389:Generated_Source\PSoC5/I2CS_INT.c **** 
 390:Generated_Source\PSoC5/I2CS_INT.c ****                 #ifdef I2CS_SW_ADDR_COMPARE_ENTRY_CALLBACK
 391:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_SwAddrCompare_EntryCallback();
 392:Generated_Source\PSoC5/I2CS_INT.c ****                 #endif /* I2CS_SW_ADDR_COMPARE_ENTRY_CALLBACK */
 393:Generated_Source\PSoC5/I2CS_INT.c ****                     
 394:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_NAK_AND_RECEIVE;   /* NACK address */
 395:Generated_Source\PSoC5/I2CS_INT.c **** 
 396:Generated_Source\PSoC5/I2CS_INT.c ****                     /* Place code to end of condition for NACK generation here */
 397:Generated_Source\PSoC5/I2CS_INT.c ****                     /* `#START I2CS_SW_ADDR_COMPARE_interruptEnd`  */
 398:Generated_Source\PSoC5/I2CS_INT.c **** 
 399:Generated_Source\PSoC5/I2CS_INT.c ****                     /* `#END` */
 400:Generated_Source\PSoC5/I2CS_INT.c **** 
 401:Generated_Source\PSoC5/I2CS_INT.c ****                 #ifdef I2CS_SW_ADDR_COMPARE_EXIT_CALLBACK
 402:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_SwAddrCompare_ExitCallback();
 403:Generated_Source\PSoC5/I2CS_INT.c ****                 #endif /* I2CS_SW_ADDR_COMPARE_EXIT_CALLBACK */
 404:Generated_Source\PSoC5/I2CS_INT.c ****                 }
 405:Generated_Source\PSoC5/I2CS_INT.c **** 
 406:Generated_Source\PSoC5/I2CS_INT.c ****             #else /* (I2CS_HW_ADRR_DECODE) */
 407:Generated_Source\PSoC5/I2CS_INT.c **** 
 408:Generated_Source\PSoC5/I2CS_INT.c ****                 if(0u != (I2CS_DATA_REG & I2CS_READ_FLAG))
  90              		.loc 1 408 0
  91 0068 5B4B     		ldr	r3, .L16+16
  92 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  93 006c 13F0010F 		tst	r3, #1
  94 0070 2BD0     		beq	.L7
 409:Generated_Source\PSoC5/I2CS_INT.c ****                 {
 410:Generated_Source\PSoC5/I2CS_INT.c ****                     /* Place code to prepare read buffer here                  */
 411:Generated_Source\PSoC5/I2CS_INT.c ****                     /* `#START I2CS_HW_PREPARE_READ_BUF_interrupt` */
 412:Generated_Source\PSoC5/I2CS_INT.c **** 
 413:Generated_Source\PSoC5/I2CS_INT.c ****                     /* `#END` */
 414:Generated_Source\PSoC5/I2CS_INT.c ****                     
 415:Generated_Source\PSoC5/I2CS_INT.c ****                 #ifdef I2CS_HW_PREPARE_READ_BUF_CALLBACK
 416:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_HwPrepareReadBuf_Callback();
 417:Generated_Source\PSoC5/I2CS_INT.c ****                 #endif /* I2CS_HW_PREPARE_READ_BUF_CALLBACK */
 418:Generated_Source\PSoC5/I2CS_INT.c **** 
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 10
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 10
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 419:Generated_Source\PSoC5/I2CS_INT.c ****                     /* Prepare next operation to read, get data and place in data register */
 420:Generated_Source\PSoC5/I2CS_INT.c ****                     if(I2CS_slRdBufIndex < I2CS_slRdBufSize)
  95              		.loc 1 420 0
  96 0072 5A4B     		ldr	r3, .L16+20
  97 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  98 0076 5A4A     		ldr	r2, .L16+24
  99              	.LVL1:
 100 0078 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 101 007a DBB2     		uxtb	r3, r3
 102 007c 9342     		cmp	r3, r2
 103 007e 15D2     		bcs	.L8
 421:Generated_Source\PSoC5/I2CS_INT.c ****                     {
 422:Generated_Source\PSoC5/I2CS_INT.c ****                         /* Load first data byte from array */
 423:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_DATA_REG = I2CS_slRdBufPtr[I2CS_slRdBufIndex];
 104              		.loc 1 423 0
 105 0080 564A     		ldr	r2, .L16+20
 106 0082 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 107 0084 DBB2     		uxtb	r3, r3
 108 0086 5749     		ldr	r1, .L16+28
 109 0088 0968     		ldr	r1, [r1]
 110 008a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 111 008c DBB2     		uxtb	r3, r3
 112 008e 5249     		ldr	r1, .L16+16
 113 0090 0B70     		strb	r3, [r1]
 424:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_ACK_AND_TRANSMIT;
 114              		.loc 1 424 0
 115 0092 1421     		movs	r1, #20
 116 0094 4C4B     		ldr	r3, .L16
 117 0096 1970     		strb	r1, [r3]
 425:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_slRdBufIndex++;
 118              		.loc 1 425 0
 119 0098 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 120 009a 0133     		adds	r3, r3, #1
 121 009c DBB2     		uxtb	r3, r3
 122 009e 1370     		strb	r3, [r2]
 426:Generated_Source\PSoC5/I2CS_INT.c **** 
 427:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_slStatus |= I2CS_SSTAT_RD_BUSY;
 123              		.loc 1 427 0
 124 00a0 4C4A     		ldr	r2, .L16+12
 125 00a2 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 126 00a4 43F00203 		orr	r3, r3, #2
 127 00a8 1370     		strb	r3, [r2]
 128 00aa 0AE0     		b	.L9
 129              	.L8:
 428:Generated_Source\PSoC5/I2CS_INT.c ****                     }
 429:Generated_Source\PSoC5/I2CS_INT.c ****                     else    /* Overflow: provide 0xFF on bus */
 430:Generated_Source\PSoC5/I2CS_INT.c ****                     {
 431:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_DATA_REG = I2CS_OVERFLOW_RETURN;
 130              		.loc 1 431 0
 131 00ac FF22     		movs	r2, #255
 132 00ae 4A4B     		ldr	r3, .L16+16
 133 00b0 1A70     		strb	r2, [r3]
 432:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_ACK_AND_TRANSMIT;
 134              		.loc 1 432 0
 135 00b2 1422     		movs	r2, #20
 136 00b4 013B     		subs	r3, r3, #1
 137 00b6 1A70     		strb	r2, [r3]
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 11
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 11
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 433:Generated_Source\PSoC5/I2CS_INT.c **** 
 434:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_slStatus  |= (I2CS_SSTAT_RD_BUSY |
 138              		.loc 1 434 0
 139 00b8 464A     		ldr	r2, .L16+12
 140 00ba 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 141 00bc 43F00603 		orr	r3, r3, #6
 142 00c0 1370     		strb	r3, [r2]
 143              	.L9:
 435:Generated_Source\PSoC5/I2CS_INT.c ****                                                        I2CS_SSTAT_RD_ERR_OVFL);
 436:Generated_Source\PSoC5/I2CS_INT.c ****                     }
 437:Generated_Source\PSoC5/I2CS_INT.c **** 
 438:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_state = I2CS_SM_SL_RD_DATA;
 144              		.loc 1 438 0
 145 00c2 1222     		movs	r2, #18
 146 00c4 414B     		ldr	r3, .L16+4
 147 00c6 1A70     		strb	r2, [r3]
 148 00c8 08BD     		pop	{r3, pc}
 149              	.LVL2:
 150              	.L7:
 439:Generated_Source\PSoC5/I2CS_INT.c ****                 }
 440:Generated_Source\PSoC5/I2CS_INT.c ****                 else  /* Write transaction: receive 1st byte */
 441:Generated_Source\PSoC5/I2CS_INT.c ****                 {
 442:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_ACK_AND_RECEIVE;
 151              		.loc 1 442 0
 152 00ca 1022     		movs	r2, #16
 153              	.LVL3:
 154 00cc 3E4B     		ldr	r3, .L16
 155 00ce 1A70     		strb	r2, [r3]
 443:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_state = I2CS_SM_SL_WR_DATA;
 156              		.loc 1 443 0
 157 00d0 1122     		movs	r2, #17
 158 00d2 3E4B     		ldr	r3, .L16+4
 159 00d4 1A70     		strb	r2, [r3]
 444:Generated_Source\PSoC5/I2CS_INT.c **** 
 445:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_slStatus |= I2CS_SSTAT_WR_BUSY;
 160              		.loc 1 445 0
 161 00d6 3F4A     		ldr	r2, .L16+12
 162 00d8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 163 00da 43F02003 		orr	r3, r3, #32
 164 00de 1370     		strb	r3, [r2]
 446:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_ENABLE_INT_ON_STOP;
 165              		.loc 1 446 0
 166 00e0 3B4A     		ldr	r2, .L16+8
 167 00e2 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 168 00e4 43F01003 		orr	r3, r3, #16
 169 00e8 1370     		strb	r3, [r2]
 170 00ea 08BD     		pop	{r3, pc}
 171              	.LVL4:
 172              	.L6:
 447:Generated_Source\PSoC5/I2CS_INT.c ****                 }
 448:Generated_Source\PSoC5/I2CS_INT.c **** 
 449:Generated_Source\PSoC5/I2CS_INT.c ****             #endif /* (I2CS_SW_ADRR_DECODE) */
 450:Generated_Source\PSoC5/I2CS_INT.c ****             }
 451:Generated_Source\PSoC5/I2CS_INT.c ****             /* Data states */
 452:Generated_Source\PSoC5/I2CS_INT.c ****             /* Data master writes into slave */
 453:Generated_Source\PSoC5/I2CS_INT.c ****             else if(I2CS_state == I2CS_SM_SL_WR_DATA)
 173              		.loc 1 453 0
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 12
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 12
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 174 00ec 374B     		ldr	r3, .L16+4
 175 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 176 00f0 DBB2     		uxtb	r3, r3
 177 00f2 112B     		cmp	r3, #17
 178 00f4 20D1     		bne	.L10
 454:Generated_Source\PSoC5/I2CS_INT.c ****             {
 455:Generated_Source\PSoC5/I2CS_INT.c ****                 if(I2CS_slWrBufIndex < I2CS_slWrBufSize)
 179              		.loc 1 455 0
 180 00f6 3C4B     		ldr	r3, .L16+32
 181 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 182 00fa 3C4A     		ldr	r2, .L16+36
 183              	.LVL5:
 184 00fc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 185 00fe DBB2     		uxtb	r3, r3
 186 0100 9342     		cmp	r3, r2
 187 0102 10D2     		bcs	.L11
 456:Generated_Source\PSoC5/I2CS_INT.c ****                 {
 457:Generated_Source\PSoC5/I2CS_INT.c ****                     tmp8 = I2CS_DATA_REG;
 188              		.loc 1 457 0
 189 0104 344B     		ldr	r3, .L16+16
 190 0106 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 191 0108 C9B2     		uxtb	r1, r1
 192              	.LVL6:
 458:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_ACK_AND_RECEIVE;
 193              		.loc 1 458 0
 194 010a 1022     		movs	r2, #16
 195 010c 013B     		subs	r3, r3, #1
 196 010e 1A70     		strb	r2, [r3]
 459:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_slWrBufPtr[I2CS_slWrBufIndex] = tmp8;
 197              		.loc 1 459 0
 198 0110 354A     		ldr	r2, .L16+32
 199 0112 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 200 0114 DBB2     		uxtb	r3, r3
 201 0116 3648     		ldr	r0, .L16+40
 202 0118 0068     		ldr	r0, [r0]
 203 011a C154     		strb	r1, [r0, r3]
 460:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_slWrBufIndex++;
 204              		.loc 1 460 0
 205 011c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 206 011e 0133     		adds	r3, r3, #1
 207 0120 DBB2     		uxtb	r3, r3
 208 0122 1370     		strb	r3, [r2]
 209 0124 08BD     		pop	{r3, pc}
 210              	.LVL7:
 211              	.L11:
 461:Generated_Source\PSoC5/I2CS_INT.c ****                 }
 462:Generated_Source\PSoC5/I2CS_INT.c ****                 else  /* of array: complete write, send NACK */
 463:Generated_Source\PSoC5/I2CS_INT.c ****                 {
 464:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_NAK_AND_RECEIVE;
 212              		.loc 1 464 0
 213 0126 0022     		movs	r2, #0
 214 0128 274B     		ldr	r3, .L16
 215 012a 1A70     		strb	r2, [r3]
 465:Generated_Source\PSoC5/I2CS_INT.c **** 
 466:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_slStatus |= I2CS_SSTAT_WR_ERR_OVFL;
 216              		.loc 1 466 0
 217 012c 294A     		ldr	r2, .L16+12
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 13
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 13
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 218 012e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 219 0130 43F04003 		orr	r3, r3, #64
 220 0134 1370     		strb	r3, [r2]
 221 0136 08BD     		pop	{r3, pc}
 222              	.LVL8:
 223              	.L10:
 467:Generated_Source\PSoC5/I2CS_INT.c ****                 }
 468:Generated_Source\PSoC5/I2CS_INT.c ****             }
 469:Generated_Source\PSoC5/I2CS_INT.c ****             /* Data master reads from slave */
 470:Generated_Source\PSoC5/I2CS_INT.c ****             else if(I2CS_state == I2CS_SM_SL_RD_DATA)
 224              		.loc 1 470 0
 225 0138 244B     		ldr	r3, .L16+4
 226 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 227 013c DBB2     		uxtb	r3, r3
 228 013e 122B     		cmp	r3, #18
 229 0140 39D1     		bne	.L12
 471:Generated_Source\PSoC5/I2CS_INT.c ****             {
 472:Generated_Source\PSoC5/I2CS_INT.c ****                 if(I2CS_CHECK_DATA_ACK(tmpCsr))
 230              		.loc 1 472 0
 231 0142 12F0020F 		tst	r2, #2
 232 0146 23D1     		bne	.L13
 473:Generated_Source\PSoC5/I2CS_INT.c ****                 {
 474:Generated_Source\PSoC5/I2CS_INT.c ****                     if(I2CS_slRdBufIndex < I2CS_slRdBufSize)
 233              		.loc 1 474 0
 234 0148 244B     		ldr	r3, .L16+20
 235 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 236 014c 244A     		ldr	r2, .L16+24
 237              	.LVL9:
 238 014e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 239 0150 DBB2     		uxtb	r3, r3
 240 0152 9342     		cmp	r3, r2
 241 0154 10D2     		bcs	.L14
 475:Generated_Source\PSoC5/I2CS_INT.c ****                     {
 476:Generated_Source\PSoC5/I2CS_INT.c ****                          /* Get data from array */
 477:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_DATA_REG = I2CS_slRdBufPtr[I2CS_slRdBufIndex];
 242              		.loc 1 477 0
 243 0156 214A     		ldr	r2, .L16+20
 244 0158 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 245 015a DBB2     		uxtb	r3, r3
 246 015c 2149     		ldr	r1, .L16+28
 247 015e 0968     		ldr	r1, [r1]
 248 0160 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 249 0162 DBB2     		uxtb	r3, r3
 250 0164 1C49     		ldr	r1, .L16+16
 251 0166 0B70     		strb	r3, [r1]
 478:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_TRANSMIT_DATA;
 252              		.loc 1 478 0
 253 0168 0421     		movs	r1, #4
 254 016a 174B     		ldr	r3, .L16
 255 016c 1970     		strb	r1, [r3]
 479:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_slRdBufIndex++;
 256              		.loc 1 479 0
 257 016e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 258 0170 0133     		adds	r3, r3, #1
 259 0172 DBB2     		uxtb	r3, r3
 260 0174 1370     		strb	r3, [r2]
 261 0176 08BD     		pop	{r3, pc}
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 14
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 14
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 262              	.L14:
 480:Generated_Source\PSoC5/I2CS_INT.c ****                     }
 481:Generated_Source\PSoC5/I2CS_INT.c ****                     else   /* Overflow: provide 0xFF on bus */
 482:Generated_Source\PSoC5/I2CS_INT.c ****                     {
 483:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_DATA_REG = I2CS_OVERFLOW_RETURN;
 263              		.loc 1 483 0
 264 0178 FF22     		movs	r2, #255
 265 017a 174B     		ldr	r3, .L16+16
 266 017c 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_TRANSMIT_DATA;
 267              		.loc 1 484 0
 268 017e 0422     		movs	r2, #4
 269 0180 013B     		subs	r3, r3, #1
 270 0182 1A70     		strb	r2, [r3]
 485:Generated_Source\PSoC5/I2CS_INT.c **** 
 486:Generated_Source\PSoC5/I2CS_INT.c ****                         I2CS_slStatus |= I2CS_SSTAT_RD_ERR_OVFL;
 271              		.loc 1 486 0
 272 0184 134A     		ldr	r2, .L16+12
 273 0186 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 274 0188 43F00403 		orr	r3, r3, #4
 275 018c 1370     		strb	r3, [r2]
 276 018e 08BD     		pop	{r3, pc}
 277              	.LVL10:
 278              	.L13:
 487:Generated_Source\PSoC5/I2CS_INT.c ****                     }
 488:Generated_Source\PSoC5/I2CS_INT.c ****                 }
 489:Generated_Source\PSoC5/I2CS_INT.c ****                 else  /* Last byte was NACKed: read complete */
 490:Generated_Source\PSoC5/I2CS_INT.c ****                 {
 491:Generated_Source\PSoC5/I2CS_INT.c ****                     /* Only NACK appears on bus */
 492:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_DATA_REG = I2CS_OVERFLOW_RETURN;
 279              		.loc 1 492 0
 280 0190 FF22     		movs	r2, #255
 281              	.LVL11:
 282 0192 114B     		ldr	r3, .L16+16
 283 0194 1A70     		strb	r2, [r3]
 493:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_NAK_AND_TRANSMIT;
 284              		.loc 1 493 0
 285 0196 0022     		movs	r2, #0
 286 0198 013B     		subs	r3, r3, #1
 287 019a 1A70     		strb	r2, [r3]
 494:Generated_Source\PSoC5/I2CS_INT.c **** 
 495:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_slStatus &= ((uint8) ~I2CS_SSTAT_RD_BUSY);
 288              		.loc 1 495 0
 289 019c 0D4B     		ldr	r3, .L16+12
 290 019e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 291 01a0 02F0FD02 		and	r2, r2, #253
 292 01a4 1A70     		strb	r2, [r3]
 496:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_slStatus |= ((uint8)  I2CS_SSTAT_RD_CMPLT);
 293              		.loc 1 496 0
 294 01a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 295 01a8 42F00102 		orr	r2, r2, #1
 296 01ac 1A70     		strb	r2, [r3]
 497:Generated_Source\PSoC5/I2CS_INT.c **** 
 498:Generated_Source\PSoC5/I2CS_INT.c ****                     I2CS_state = I2CS_SM_IDLE;
 297              		.loc 1 498 0
 298 01ae 1022     		movs	r2, #16
 299 01b0 064B     		ldr	r3, .L16+4
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 15
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 15
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 300 01b2 1A70     		strb	r2, [r3]
 301 01b4 08BD     		pop	{r3, pc}
 302              	.LVL12:
 303              	.L12:
 499:Generated_Source\PSoC5/I2CS_INT.c ****                 }
 500:Generated_Source\PSoC5/I2CS_INT.c ****             }
 501:Generated_Source\PSoC5/I2CS_INT.c ****             else
 502:Generated_Source\PSoC5/I2CS_INT.c ****             {
 503:Generated_Source\PSoC5/I2CS_INT.c ****             #if(I2CS_TIMEOUT_ENABLED)
 504:Generated_Source\PSoC5/I2CS_INT.c ****                 /* Exit interrupt to take chance for timeout timer to handle this case */
 505:Generated_Source\PSoC5/I2CS_INT.c ****                 I2CS_DisableInt();
 506:Generated_Source\PSoC5/I2CS_INT.c ****                 I2CS_ClearPendingInt();
 507:Generated_Source\PSoC5/I2CS_INT.c ****             #else
 508:Generated_Source\PSoC5/I2CS_INT.c ****                 /* Block execution flow: unexpected condition */
 509:Generated_Source\PSoC5/I2CS_INT.c ****                 CYASSERT(0u != 0u);
 304              		.loc 1 509 0 discriminator 1
 305 01b6 0020     		movs	r0, #0
 306 01b8 FFF7FEFF 		bl	CyHalt
 307              	.LVL13:
 308 01bc 08BD     		pop	{r3, pc}
 309              	.LVL14:
 310              	.L3:
 510:Generated_Source\PSoC5/I2CS_INT.c ****             #endif /* (I2CS_TIMEOUT_ENABLED) */
 511:Generated_Source\PSoC5/I2CS_INT.c ****             }
 512:Generated_Source\PSoC5/I2CS_INT.c ****         }
 513:Generated_Source\PSoC5/I2CS_INT.c ****     #endif /* (I2CS_MODE_SLAVE_ENABLED) */
 514:Generated_Source\PSoC5/I2CS_INT.c ****     }
 515:Generated_Source\PSoC5/I2CS_INT.c ****     else
 516:Generated_Source\PSoC5/I2CS_INT.c ****     {
 517:Generated_Source\PSoC5/I2CS_INT.c ****         /* The FSM skips master and slave processing: return to IDLE */
 518:Generated_Source\PSoC5/I2CS_INT.c ****         I2CS_state = I2CS_SM_IDLE;
 311              		.loc 1 518 0
 312 01be 1022     		movs	r2, #16
 313              	.LVL15:
 314 01c0 024B     		ldr	r3, .L16+4
 315 01c2 1A70     		strb	r2, [r3]
 316              	.L1:
 317 01c4 08BD     		pop	{r3, pc}
 318              	.L17:
 319 01c6 00BF     		.align	2
 320              	.L16:
 321 01c8 D7490040 		.word	1073760727
 322 01cc 00000000 		.word	I2CS_state
 323 01d0 D6490040 		.word	1073760726
 324 01d4 00000000 		.word	I2CS_slStatus
 325 01d8 D8490040 		.word	1073760728
 326 01dc 00000000 		.word	I2CS_slRdBufIndex
 327 01e0 00000000 		.word	I2CS_slRdBufSize
 328 01e4 00000000 		.word	I2CS_slRdBufPtr
 329 01e8 00000000 		.word	I2CS_slWrBufIndex
 330 01ec 00000000 		.word	I2CS_slWrBufSize
 331 01f0 00000000 		.word	I2CS_slWrBufPtr
 332              		.cfi_endproc
 333              	.LFE0:
 334              		.size	I2CS_ISR, .-I2CS_ISR
 335              		.text
 336              	.Letext0:
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 16
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 16
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 337              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 338              		.file 3 "Generated_Source\\PSoC5\\I2CS_PVT.h"
 339              		.file 4 "Generated_Source\\PSoC5\\CyLib.h"
 340              		.section	.debug_info,"",%progbits
 341              	.Ldebug_info0:
 342 0000 4F010000 		.4byte	0x14f
 343 0004 0400     		.2byte	0x4
 344 0006 00000000 		.4byte	.Ldebug_abbrev0
 345 000a 04       		.byte	0x4
 346 000b 01       		.uleb128 0x1
 347 000c 87000000 		.4byte	.LASF25
 348 0010 01       		.byte	0x1
 349 0011 22010000 		.4byte	.LASF26
 350 0015 CF010000 		.4byte	.LASF27
 351 0019 00000000 		.4byte	.Ldebug_ranges0+0
 352 001d 00000000 		.4byte	0
 353 0021 00000000 		.4byte	.Ldebug_line0
 354 0025 02       		.uleb128 0x2
 355 0026 01       		.byte	0x1
 356 0027 06       		.byte	0x6
 357 0028 58020000 		.4byte	.LASF0
 358 002c 02       		.uleb128 0x2
 359 002d 01       		.byte	0x1
 360 002e 08       		.byte	0x8
 361 002f 2A000000 		.4byte	.LASF1
 362 0033 02       		.uleb128 0x2
 363 0034 02       		.byte	0x2
 364 0035 05       		.byte	0x5
 365 0036 B5010000 		.4byte	.LASF2
 366 003a 02       		.uleb128 0x2
 367 003b 02       		.byte	0x2
 368 003c 07       		.byte	0x7
 369 003d 0C000000 		.4byte	.LASF3
 370 0041 02       		.uleb128 0x2
 371 0042 04       		.byte	0x4
 372 0043 05       		.byte	0x5
 373 0044 4F020000 		.4byte	.LASF4
 374 0048 02       		.uleb128 0x2
 375 0049 04       		.byte	0x4
 376 004a 07       		.byte	0x7
 377 004b 4A000000 		.4byte	.LASF5
 378 004f 02       		.uleb128 0x2
 379 0050 08       		.byte	0x8
 380 0051 05       		.byte	0x5
 381 0052 86010000 		.4byte	.LASF6
 382 0056 02       		.uleb128 0x2
 383 0057 08       		.byte	0x8
 384 0058 07       		.byte	0x7
 385 0059 44010000 		.4byte	.LASF7
 386 005d 03       		.uleb128 0x3
 387 005e 04       		.byte	0x4
 388 005f 05       		.byte	0x5
 389 0060 696E7400 		.ascii	"int\000"
 390 0064 02       		.uleb128 0x2
 391 0065 04       		.byte	0x4
 392 0066 07       		.byte	0x7
<<<<<<< HEAD
 393 0067 A0010000 		.4byte	.LASF8
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 17
=======
 393 0067 15010000 		.4byte	.LASF8
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 17
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 394 006b 04       		.uleb128 0x4
 395 006c 5C000000 		.4byte	.LASF12
 396 0070 02       		.byte	0x2
 397 0071 9201     		.2byte	0x192
 398 0073 2C000000 		.4byte	0x2c
 399 0077 02       		.uleb128 0x2
 400 0078 04       		.byte	0x4
 401 0079 04       		.byte	0x4
 402 007a 1F000000 		.4byte	.LASF9
 403 007e 02       		.uleb128 0x2
 404 007f 08       		.byte	0x8
 405 0080 04       		.byte	0x4
 406 0081 62000000 		.4byte	.LASF10
 407 0085 02       		.uleb128 0x2
 408 0086 01       		.byte	0x1
 409 0087 08       		.byte	0x8
 410 0088 94010000 		.4byte	.LASF11
 411 008c 04       		.uleb128 0x4
 412 008d 07000000 		.4byte	.LASF13
 413 0091 02       		.byte	0x2
 414 0092 3C02     		.2byte	0x23c
 415 0094 98000000 		.4byte	0x98
 416 0098 05       		.uleb128 0x5
 417 0099 6B000000 		.4byte	0x6b
 418 009d 02       		.uleb128 0x2
 419 009e 04       		.byte	0x4
 420 009f 07       		.byte	0x7
 421 00a0 7D010000 		.4byte	.LASF14
 422 00a4 06       		.uleb128 0x6
 423 00a5 5B010000 		.4byte	.LASF28
 424 00a9 01       		.byte	0x1
 425 00aa 2E       		.byte	0x2e
 426 00ab 00000000 		.4byte	.LFB0
 427 00af F4010000 		.4byte	.LFE0-.LFB0
 428 00b3 01       		.uleb128 0x1
 429 00b4 9C       		.byte	0x9c
 430 00b5 E7000000 		.4byte	0xe7
 431 00b9 07       		.uleb128 0x7
 432 00ba 25000000 		.4byte	.LASF15
 433 00be 01       		.byte	0x1
 434 00bf 31       		.byte	0x31
 435 00c0 6B000000 		.4byte	0x6b
 436 00c4 00000000 		.4byte	.LLST0
 437 00c8 07       		.uleb128 0x7
 438 00c9 00000000 		.4byte	.LASF16
 439 00cd 01       		.byte	0x1
 440 00ce 34       		.byte	0x34
 441 00cf 6B000000 		.4byte	0x6b
 442 00d3 13000000 		.4byte	.LLST1
 443 00d7 08       		.uleb128 0x8
 444 00d8 BC010000 		.4byte	.LVL13
 445 00dc 45010000 		.4byte	0x145
 446 00e0 09       		.uleb128 0x9
 447 00e1 01       		.uleb128 0x1
 448 00e2 50       		.byte	0x50
 449 00e3 01       		.uleb128 0x1
 450 00e4 30       		.byte	0x30
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 18
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 18
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 451 00e5 00       		.byte	0
 452 00e6 00       		.byte	0
 453 00e7 0A       		.uleb128 0xa
 454 00e8 99010000 		.4byte	.LASF17
 455 00ec 03       		.byte	0x3
 456 00ed 23       		.byte	0x23
 457 00ee 98000000 		.4byte	0x98
 458 00f2 0A       		.uleb128 0xa
 459 00f3 79000000 		.4byte	.LASF18
 460 00f7 03       		.byte	0x3
 461 00f8 38       		.byte	0x38
 462 00f9 98000000 		.4byte	0x98
 463 00fd 0A       		.uleb128 0xa
 464 00fe 69000000 		.4byte	.LASF19
 465 0102 03       		.byte	0x3
 466 0103 3B       		.byte	0x3b
 467 0104 08010000 		.4byte	0x108
 468 0108 0B       		.uleb128 0xb
 469 0109 04       		.byte	0x4
 470 010a 98000000 		.4byte	0x98
 471 010e 0A       		.uleb128 0xa
 472 010f 64020000 		.4byte	.LASF20
 473 0113 03       		.byte	0x3
 474 0114 3C       		.byte	0x3c
 475 0115 98000000 		.4byte	0x98
 476 0119 0A       		.uleb128 0xa
 477 011a 6B010000 		.4byte	.LASF21
 478 011e 03       		.byte	0x3
 479 011f 3D       		.byte	0x3d
 480 0120 98000000 		.4byte	0x98
 481 0124 0A       		.uleb128 0xa
 482 0125 BF010000 		.4byte	.LASF22
 483 0129 03       		.byte	0x3
 484 012a 40       		.byte	0x40
 485 012b 08010000 		.4byte	0x108
 486 012f 0A       		.uleb128 0xa
 487 0130 A4010000 		.4byte	.LASF23
 488 0134 03       		.byte	0x3
 489 0135 41       		.byte	0x41
 490 0136 98000000 		.4byte	0x98
 491 013a 0A       		.uleb128 0xa
 492 013b 38000000 		.4byte	.LASF24
 493 013f 03       		.byte	0x3
 494 0140 42       		.byte	0x42
 495 0141 98000000 		.4byte	0x98
 496 0145 0C       		.uleb128 0xc
 497 0146 64010000 		.4byte	.LASF29
 498 014a 04       		.byte	0x4
 499 014b 7F       		.byte	0x7f
 500 014c 0D       		.uleb128 0xd
 501 014d 6B000000 		.4byte	0x6b
 502 0151 00       		.byte	0
 503 0152 00       		.byte	0
 504              		.section	.debug_abbrev,"",%progbits
 505              	.Ldebug_abbrev0:
 506 0000 01       		.uleb128 0x1
 507 0001 11       		.uleb128 0x11
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 19
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 19
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 508 0002 01       		.byte	0x1
 509 0003 25       		.uleb128 0x25
 510 0004 0E       		.uleb128 0xe
 511 0005 13       		.uleb128 0x13
 512 0006 0B       		.uleb128 0xb
 513 0007 03       		.uleb128 0x3
 514 0008 0E       		.uleb128 0xe
 515 0009 1B       		.uleb128 0x1b
 516 000a 0E       		.uleb128 0xe
 517 000b 55       		.uleb128 0x55
 518 000c 17       		.uleb128 0x17
 519 000d 11       		.uleb128 0x11
 520 000e 01       		.uleb128 0x1
 521 000f 10       		.uleb128 0x10
 522 0010 17       		.uleb128 0x17
 523 0011 00       		.byte	0
 524 0012 00       		.byte	0
 525 0013 02       		.uleb128 0x2
 526 0014 24       		.uleb128 0x24
 527 0015 00       		.byte	0
 528 0016 0B       		.uleb128 0xb
 529 0017 0B       		.uleb128 0xb
 530 0018 3E       		.uleb128 0x3e
 531 0019 0B       		.uleb128 0xb
 532 001a 03       		.uleb128 0x3
 533 001b 0E       		.uleb128 0xe
 534 001c 00       		.byte	0
 535 001d 00       		.byte	0
 536 001e 03       		.uleb128 0x3
 537 001f 24       		.uleb128 0x24
 538 0020 00       		.byte	0
 539 0021 0B       		.uleb128 0xb
 540 0022 0B       		.uleb128 0xb
 541 0023 3E       		.uleb128 0x3e
 542 0024 0B       		.uleb128 0xb
 543 0025 03       		.uleb128 0x3
 544 0026 08       		.uleb128 0x8
 545 0027 00       		.byte	0
 546 0028 00       		.byte	0
 547 0029 04       		.uleb128 0x4
 548 002a 16       		.uleb128 0x16
 549 002b 00       		.byte	0
 550 002c 03       		.uleb128 0x3
 551 002d 0E       		.uleb128 0xe
 552 002e 3A       		.uleb128 0x3a
 553 002f 0B       		.uleb128 0xb
 554 0030 3B       		.uleb128 0x3b
 555 0031 05       		.uleb128 0x5
 556 0032 49       		.uleb128 0x49
 557 0033 13       		.uleb128 0x13
 558 0034 00       		.byte	0
 559 0035 00       		.byte	0
 560 0036 05       		.uleb128 0x5
 561 0037 35       		.uleb128 0x35
 562 0038 00       		.byte	0
 563 0039 49       		.uleb128 0x49
 564 003a 13       		.uleb128 0x13
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 20
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 20
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 565 003b 00       		.byte	0
 566 003c 00       		.byte	0
 567 003d 06       		.uleb128 0x6
 568 003e 2E       		.uleb128 0x2e
 569 003f 01       		.byte	0x1
 570 0040 3F       		.uleb128 0x3f
 571 0041 19       		.uleb128 0x19
 572 0042 03       		.uleb128 0x3
 573 0043 0E       		.uleb128 0xe
 574 0044 3A       		.uleb128 0x3a
 575 0045 0B       		.uleb128 0xb
 576 0046 3B       		.uleb128 0x3b
 577 0047 0B       		.uleb128 0xb
 578 0048 27       		.uleb128 0x27
 579 0049 19       		.uleb128 0x19
 580 004a 11       		.uleb128 0x11
 581 004b 01       		.uleb128 0x1
 582 004c 12       		.uleb128 0x12
 583 004d 06       		.uleb128 0x6
 584 004e 40       		.uleb128 0x40
 585 004f 18       		.uleb128 0x18
 586 0050 9742     		.uleb128 0x2117
 587 0052 19       		.uleb128 0x19
 588 0053 01       		.uleb128 0x1
 589 0054 13       		.uleb128 0x13
 590 0055 00       		.byte	0
 591 0056 00       		.byte	0
 592 0057 07       		.uleb128 0x7
 593 0058 34       		.uleb128 0x34
 594 0059 00       		.byte	0
 595 005a 03       		.uleb128 0x3
 596 005b 0E       		.uleb128 0xe
 597 005c 3A       		.uleb128 0x3a
 598 005d 0B       		.uleb128 0xb
 599 005e 3B       		.uleb128 0x3b
 600 005f 0B       		.uleb128 0xb
 601 0060 49       		.uleb128 0x49
 602 0061 13       		.uleb128 0x13
 603 0062 02       		.uleb128 0x2
 604 0063 17       		.uleb128 0x17
 605 0064 00       		.byte	0
 606 0065 00       		.byte	0
 607 0066 08       		.uleb128 0x8
 608 0067 898201   		.uleb128 0x4109
 609 006a 01       		.byte	0x1
 610 006b 11       		.uleb128 0x11
 611 006c 01       		.uleb128 0x1
 612 006d 31       		.uleb128 0x31
 613 006e 13       		.uleb128 0x13
 614 006f 00       		.byte	0
 615 0070 00       		.byte	0
 616 0071 09       		.uleb128 0x9
 617 0072 8A8201   		.uleb128 0x410a
 618 0075 00       		.byte	0
 619 0076 02       		.uleb128 0x2
 620 0077 18       		.uleb128 0x18
 621 0078 9142     		.uleb128 0x2111
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 21
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 21
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 622 007a 18       		.uleb128 0x18
 623 007b 00       		.byte	0
 624 007c 00       		.byte	0
 625 007d 0A       		.uleb128 0xa
 626 007e 34       		.uleb128 0x34
 627 007f 00       		.byte	0
 628 0080 03       		.uleb128 0x3
 629 0081 0E       		.uleb128 0xe
 630 0082 3A       		.uleb128 0x3a
 631 0083 0B       		.uleb128 0xb
 632 0084 3B       		.uleb128 0x3b
 633 0085 0B       		.uleb128 0xb
 634 0086 49       		.uleb128 0x49
 635 0087 13       		.uleb128 0x13
 636 0088 3F       		.uleb128 0x3f
 637 0089 19       		.uleb128 0x19
 638 008a 3C       		.uleb128 0x3c
 639 008b 19       		.uleb128 0x19
 640 008c 00       		.byte	0
 641 008d 00       		.byte	0
 642 008e 0B       		.uleb128 0xb
 643 008f 0F       		.uleb128 0xf
 644 0090 00       		.byte	0
 645 0091 0B       		.uleb128 0xb
 646 0092 0B       		.uleb128 0xb
 647 0093 49       		.uleb128 0x49
 648 0094 13       		.uleb128 0x13
 649 0095 00       		.byte	0
 650 0096 00       		.byte	0
 651 0097 0C       		.uleb128 0xc
 652 0098 2E       		.uleb128 0x2e
 653 0099 01       		.byte	0x1
 654 009a 3F       		.uleb128 0x3f
 655 009b 19       		.uleb128 0x19
 656 009c 03       		.uleb128 0x3
 657 009d 0E       		.uleb128 0xe
 658 009e 3A       		.uleb128 0x3a
 659 009f 0B       		.uleb128 0xb
 660 00a0 3B       		.uleb128 0x3b
 661 00a1 0B       		.uleb128 0xb
 662 00a2 27       		.uleb128 0x27
 663 00a3 19       		.uleb128 0x19
 664 00a4 3C       		.uleb128 0x3c
 665 00a5 19       		.uleb128 0x19
 666 00a6 00       		.byte	0
 667 00a7 00       		.byte	0
 668 00a8 0D       		.uleb128 0xd
 669 00a9 05       		.uleb128 0x5
 670 00aa 00       		.byte	0
 671 00ab 49       		.uleb128 0x49
 672 00ac 13       		.uleb128 0x13
 673 00ad 00       		.byte	0
 674 00ae 00       		.byte	0
 675 00af 00       		.byte	0
 676              		.section	.debug_loc,"",%progbits
 677              	.Ldebug_loc0:
 678              	.LLST0:
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 22
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 22
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 679 0000 0A010000 		.4byte	.LVL6
 680 0004 26010000 		.4byte	.LVL7
 681 0008 0100     		.2byte	0x1
 682 000a 51       		.byte	0x51
 683 000b 00000000 		.4byte	0
 684 000f 00000000 		.4byte	0
 685              	.LLST1:
 686 0013 08000000 		.4byte	.LVL0
 687 0017 78000000 		.4byte	.LVL1
 688 001b 0100     		.2byte	0x1
 689 001d 52       		.byte	0x52
 690 001e CA000000 		.4byte	.LVL2
 691 0022 CC000000 		.4byte	.LVL3
 692 0026 0100     		.2byte	0x1
 693 0028 52       		.byte	0x52
 694 0029 EC000000 		.4byte	.LVL4
 695 002d FC000000 		.4byte	.LVL5
 696 0031 0100     		.2byte	0x1
 697 0033 52       		.byte	0x52
 698 0034 38010000 		.4byte	.LVL8
 699 0038 4E010000 		.4byte	.LVL9
 700 003c 0100     		.2byte	0x1
 701 003e 52       		.byte	0x52
 702 003f 90010000 		.4byte	.LVL10
 703 0043 92010000 		.4byte	.LVL11
 704 0047 0100     		.2byte	0x1
 705 0049 52       		.byte	0x52
 706 004a B6010000 		.4byte	.LVL12
 707 004e BB010000 		.4byte	.LVL13-1
 708 0052 0100     		.2byte	0x1
 709 0054 52       		.byte	0x52
 710 0055 BE010000 		.4byte	.LVL14
 711 0059 C0010000 		.4byte	.LVL15
 712 005d 0100     		.2byte	0x1
 713 005f 52       		.byte	0x52
 714 0060 00000000 		.4byte	0
 715 0064 00000000 		.4byte	0
 716              		.section	.debug_aranges,"",%progbits
 717 0000 1C000000 		.4byte	0x1c
 718 0004 0200     		.2byte	0x2
 719 0006 00000000 		.4byte	.Ldebug_info0
 720 000a 04       		.byte	0x4
 721 000b 00       		.byte	0
 722 000c 0000     		.2byte	0
 723 000e 0000     		.2byte	0
 724 0010 00000000 		.4byte	.LFB0
 725 0014 F4010000 		.4byte	.LFE0-.LFB0
 726 0018 00000000 		.4byte	0
 727 001c 00000000 		.4byte	0
 728              		.section	.debug_ranges,"",%progbits
 729              	.Ldebug_ranges0:
 730 0000 00000000 		.4byte	.LFB0
 731 0004 F4010000 		.4byte	.LFE0
 732 0008 00000000 		.4byte	0
 733 000c 00000000 		.4byte	0
 734              		.section	.debug_line,"",%progbits
 735              	.Ldebug_line0:
<<<<<<< HEAD
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 23
=======
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 23
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 736 0000 C2000000 		.section	.debug_str,"MS",%progbits,1
 736      02005E00 
 736      00000201 
 736      FB0E0D00 
 736      01010101 
 737              	.LASF16:
 738 0000 746D7043 		.ascii	"tmpCsr\000"
 738      737200
 739              	.LASF13:
 740 0007 72656738 		.ascii	"reg8\000"
 740      00
 741              	.LASF3:
 742 000c 73686F72 		.ascii	"short unsigned int\000"
 742      7420756E 
 742      7369676E 
 742      65642069 
 742      6E7400
<<<<<<< HEAD
 743              	.LASF27:
 744 001f 433A5C55 		.ascii	"C:\\Users\\Anders\\Desktop\\Projekt 4. semester\\E4"
 744      73657273 
 744      5C416E64 
 744      6572735C 
 744      4465736B 
 745 004d 50524A34 		.ascii	"PRJ4-Gruppe1\\Retnings og fremdrifts enhed version "
 745      2D477275 
 745      70706531 
 745      5C526574 
 745      6E696E67 
 746 007f 70736F63 		.ascii	"psoc 5\\Retning_psoc_5\\I2C_Slave_prog.cydsn\000"
 746      20355C52 
 746      65746E69 
 746      6E675F70 
 746      736F635F 
 747              	.LASF9:
 748 00aa 666C6F61 		.ascii	"float\000"
 748      7400
 749              	.LASF15:
 750 00b0 746D7038 		.ascii	"tmp8\000"
 750      00
 751              	.LASF1:
 752 00b5 756E7369 		.ascii	"unsigned char\000"
 752      676E6564 
 752      20636861 
 752      7200
 753              	.LASF24:
 754 00c3 49324353 		.ascii	"I2CS_slWrBufIndex\000"
 754      5F736C57 
 754      72427566 
 754      496E6465 
 754      7800
 755              	.LASF5:
 756 00d5 6C6F6E67 		.ascii	"long unsigned int\000"
 756      20756E73 
 756      69676E65 
 756      6420696E 
 756      7400
 757              	.LASF12:
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 24


 758 00e7 75696E74 		.ascii	"uint8\000"
 758      3800
 759              	.LASF10:
 760 00ed 646F7562 		.ascii	"double\000"
 760      6C6500
 761              	.LASF19:
 762 00f4 49324353 		.ascii	"I2CS_slRdBufPtr\000"
 762      5F736C52 
 762      64427566 
 762      50747200 
 763              	.LASF18:
 764 0104 49324353 		.ascii	"I2CS_slStatus\000"
 764      5F736C53 
 764      74617475 
 764      7300
 765              	.LASF25:
 766 0112 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 766      4320342E 
 766      392E3320 
 766      32303135 
 766      30333033 
 767 0145 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 767      20726576 
 767      6973696F 
 767      6E203232 
 767      31323230 
 768 0178 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 768      66756E63 
 768      74696F6E 
 768      2D736563 
 768      74696F6E 
 769              	.LASF8:
 770 01a0 756E7369 		.ascii	"unsigned int\000"
 770      676E6564 
 770      20696E74 
 770      00
 771              	.LASF26:
 772 01ad 47656E65 		.ascii	"Generated_Source\\PSoC5\\I2CS_INT.c\000"
 772      72617465 
 772      645F536F 
 772      75726365 
 772      5C50536F 
 773              	.LASF7:
 774 01cf 6C6F6E67 		.ascii	"long long unsigned int\000"
 774      206C6F6E 
 774      6720756E 
 774      7369676E 
 774      65642069 
 775              	.LASF28:
 776 01e6 49324353 		.ascii	"I2CS_ISR\000"
 776      5F495352 
 776      00
 777              	.LASF29:
 778 01ef 43794861 		.ascii	"CyHalt\000"
 778      6C7400
 779              	.LASF21:
 780 01f6 49324353 		.ascii	"I2CS_slRdBufIndex\000"
ARM GAS  C:\Users\Anders\AppData\Local\Temp\cczmJ3xq.s 			page 25
=======
 743              	.LASF9:
 744 001f 666C6F61 		.ascii	"float\000"
 744      7400
 745              	.LASF15:
 746 0025 746D7038 		.ascii	"tmp8\000"
 746      00
 747              	.LASF1:
 748 002a 756E7369 		.ascii	"unsigned char\000"
 748      676E6564 
 748      20636861 
 748      7200
 749              	.LASF24:
 750 0038 49324353 		.ascii	"I2CS_slWrBufIndex\000"
 750      5F736C57 
 750      72427566 
 750      496E6465 
 750      7800
 751              	.LASF5:
 752 004a 6C6F6E67 		.ascii	"long unsigned int\000"
 752      20756E73 
 752      69676E65 
 752      6420696E 
 752      7400
 753              	.LASF12:
 754 005c 75696E74 		.ascii	"uint8\000"
 754      3800
 755              	.LASF10:
 756 0062 646F7562 		.ascii	"double\000"
 756      6C6500
 757              	.LASF19:
 758 0069 49324353 		.ascii	"I2CS_slRdBufPtr\000"
 758      5F736C52 
 758      64427566 
 758      50747200 
 759              	.LASF18:
 760 0079 49324353 		.ascii	"I2CS_slStatus\000"
 760      5F736C53 
 760      74617475 
 760      7300
 761              	.LASF25:
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 24


 762 0087 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 762      4320342E 
 762      392E3320 
 762      32303135 
 762      30333033 
 763 00ba 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 763      20726576 
 763      6973696F 
 763      6E203232 
 763      31323230 
 764 00ed 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 764      66756E63 
 764      74696F6E 
 764      2D736563 
 764      74696F6E 
 765              	.LASF8:
 766 0115 756E7369 		.ascii	"unsigned int\000"
 766      676E6564 
 766      20696E74 
 766      00
 767              	.LASF26:
 768 0122 47656E65 		.ascii	"Generated_Source\\PSoC5\\I2CS_INT.c\000"
 768      72617465 
 768      645F536F 
 768      75726365 
 768      5C50536F 
 769              	.LASF7:
 770 0144 6C6F6E67 		.ascii	"long long unsigned int\000"
 770      206C6F6E 
 770      6720756E 
 770      7369676E 
 770      65642069 
 771              	.LASF28:
 772 015b 49324353 		.ascii	"I2CS_ISR\000"
 772      5F495352 
 772      00
 773              	.LASF29:
 774 0164 43794861 		.ascii	"CyHalt\000"
 774      6C7400
 775              	.LASF21:
 776 016b 49324353 		.ascii	"I2CS_slRdBufIndex\000"
 776      5F736C52 
 776      64427566 
 776      496E6465 
 776      7800
 777              	.LASF14:
 778 017d 73697A65 		.ascii	"sizetype\000"
 778      74797065 
 778      00
 779              	.LASF6:
 780 0186 6C6F6E67 		.ascii	"long long int\000"
 780      206C6F6E 
 780      6720696E 
 780      7400
 781              	.LASF11:
 782 0194 63686172 		.ascii	"char\000"
 782      00
ARM GAS  C:\Users\Anders\AppData\Local\Temp\ccU8yHB4.s 			page 25
>>>>>>> 40a74277513dcec9fbc43d3e105e642a69e6a52f


 783              	.LASF17:
 784 0199 49324353 		.ascii	"I2CS_state\000"
 784      5F737461 
 784      746500
 785              	.LASF23:
 786 01a4 49324353 		.ascii	"I2CS_slWrBufSize\000"
 786      5F736C57 
 786      72427566 
 786      53697A65 
 786      00
 787              	.LASF2:
 788 01b5 73686F72 		.ascii	"short int\000"
 788      7420696E 
 788      7400
 789              	.LASF22:
 790 01bf 49324353 		.ascii	"I2CS_slWrBufPtr\000"
 790      5F736C57 
 790      72427566 
 790      50747200 
 791              	.LASF27:
 792 01cf 433A5C55 		.ascii	"C:\\Users\\Anders\\Desktop\\HellYaeh\\E4PRJ4-Gruppe"
 792      73657273 
 792      5C416E64 
 792      6572735C 
 792      4465736B 
 793 01fd 315C5265 		.ascii	"1\\Retnings og fremdrifts enhed version psoc 5\\Ret"
 793      746E696E 
 793      6773206F 
 793      67206672 
 793      656D6472 
 794 022e 6E696E67 		.ascii	"ning_psoc_5\\I2C_Slave_prog.cydsn\000"
 794      5F70736F 
 794      635F355C 
 794      4932435F 
 794      536C6176 
 795              	.LASF4:
 796 024f 6C6F6E67 		.ascii	"long int\000"
 796      20696E74 
 796      00
 797              	.LASF0:
 798 0258 7369676E 		.ascii	"signed char\000"
 798      65642063 
 798      68617200 
 799              	.LASF20:
 800 0264 49324353 		.ascii	"I2CS_slRdBufSize\000"
 800      5F736C52 
 800      64427566 
 800      53697A65 
 800      00
 801              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
